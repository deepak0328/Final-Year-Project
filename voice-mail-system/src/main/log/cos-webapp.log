02.03.2020 17:19:20 *INFO * Application: Starting Application on Deepak with PID 15263 (/home/deepak/Work/COS/extended-cafeteria-ordering-system/target/classes started by deepak in /home/deepak/Work/COS/extended-cafeteria-ordering-system) (StartupInfoLogger.java, line 55)
02.03.2020 17:19:20 *DEBUG* Application: Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE (StartupInfoLogger.java, line 56)
02.03.2020 17:19:20 *INFO * Application: No active profile set, falling back to default profiles: default (SpringApplication.java, line 651)
02.03.2020 17:19:22 *DEBUG* LogHelper: PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@5bc2b487
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/deepak/Work/COS/extended-cafeteria-ordering-system/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		net.voicemail.mail.entity.Mail
		net.voicemail.mail.entity.User
		net.voicemail.mail.entity.UserMailMap]
	Mapping files names []
	Properties [] (LogHelper.java, line 102)
02.03.2020 17:19:22 *DEBUG* IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. (IntegratorServiceImpl.java, line 46)
02.03.2020 17:19:22 *DEBUG* IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. (IntegratorServiceImpl.java, line 46)
02.03.2020 17:19:22 *DEBUG* IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. (IntegratorServiceImpl.java, line 46)
02.03.2020 17:19:22 *INFO * Version: HHH000412: Hibernate Core {5.4.9.Final} (Version.java, line 46)
02.03.2020 17:19:22 *DEBUG* Environment: HHH000206: hibernate.properties not found (Environment.java, line 199)
02.03.2020 17:19:22 *DEBUG* ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService] (ServiceBinding.java, line 68)
02.03.2020 17:19:22 *DEBUG* RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered (RegionFactoryInitiator.java, line 118)
02.03.2020 17:19:22 *DEBUG* RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory (RegionFactoryInitiator.java, line 49)
02.03.2020 17:19:22 *INFO * Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final} (JavaReflectionManager.java, line 49)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@165614f5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@165614f5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@165614f5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2f04993d (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@c14e5a5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5c1b89ac (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@682618e5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@682618e5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@682618e5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@35fa450f (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@35fa450f (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@35fa450f (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@718989fa (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@718989fa (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@718989fa (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@50122012 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@50122012 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@50122012 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@1578fa9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@1578fa9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@1578fa9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@3111631d (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@3111631d (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3111631d (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@3a9b41a0 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@3a9b41a0 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a9b41a0 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@133aacbe (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@133aacbe (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@28f154cc (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@28f154cc (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4c176ff1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4c176ff1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1d60059f (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4975dda1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@5b742bc8 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@5b742bc8 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@3db6dd52 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3db6dd52 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@25f0c5e7 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@25f0c5e7 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10618775 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10618775 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4d7cac24 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4d7cac24 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@720f56e2 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@720f56e2 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1c74d19 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1c74d19 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59328218 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59328218 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@52621501 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@52621501 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61a87366 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61a87366 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@3915e7c3 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3915e7c3 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@6f315b08 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6f315b08 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6f315b08 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e9bf744 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@267891bf (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@267891bf (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@267891bf (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@46612bfc (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@9263c54 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@9263c54 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@6befbb12 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6befbb12 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@27ffd9f8 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@27ffd9f8 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@55c1ced9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@55c1ced9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1144a02b (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1144a02b (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7159d601 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@4f5c30b1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@4f5c30b1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@4f5c30b1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@38087342 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@38087342 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@38087342 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@7ab63838 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@2a04ab05 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@7bf018dd (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@7bf018dd (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@7bf018dd (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@661e1399 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@661e1399 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@661e1399 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@3cc3f13e (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@6793f752 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@5514579e (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5514579e (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54895681 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7de147e9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7de147e9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@54489296 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@54489296 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6c07add6 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2094bf3d (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@781dbe44 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@6cdbe5ec (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6cdbe5ec (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66020d69 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3751acd7 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6b832551 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@150d6eaf (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@63124022 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@591f6f83 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2b44605c (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@55421b8d (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BootstrapContextImpl: Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@46cf8c07] into BootstrapContext; was [null] (BootstrapContextImpl.java, line 262)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@46cf8c07) [was null] (ClassLoaderAccessImpl.java, line 45)
02.03.2020 17:19:22 *DEBUG* BootstrapContextImpl: Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@bd93bc3] into BootstrapContext; was [null] (BootstrapContextImpl.java, line 272)
02.03.2020 17:19:22 *DEBUG* BootstrapContextImpl: Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2a136383] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@b01cb8d] (BootstrapContextImpl.java, line 267)
02.03.2020 17:19:22 *DEBUG* BootstrapContextImpl: Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@46cf8c07] (BootstrapContextImpl.java, line 262)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@46cf8c07] (ClassLoaderAccessImpl.java, line 45)
02.03.2020 17:19:22 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:19:22 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:19:22 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:19:22 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:19:22 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:19:22 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:19:22 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:19:22 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:19:22 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:19:22 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:19:22 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:19:22 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:19:22 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:19:22 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:19:22 *DEBUG* JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 9.6.8
      major : 9
      minor : 6 (JdbcEnvironmentInitiator.java, line 72)
02.03.2020 17:19:22 *DEBUG* JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.4.1211
      major : 9
      minor : 4 (JdbcEnvironmentInitiator.java, line 83)
02.03.2020 17:19:22 *DEBUG* JdbcEnvironmentInitiator: JDBC version : 4.0 (DelegatingBasicLogger.java, line 389)
02.03.2020 17:19:22 *INFO * Dialect: HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL95Dialect (Dialect.java, line 172)
02.03.2020 17:19:22 *DEBUG* IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case (IdentifierHelperBuilder.java, line 108)
02.03.2020 17:19:22 *DEBUG* Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] (Namespace.java, line 51)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@64ec1459 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@64ec1459 (BasicTypeRegistry.java, line 156)
02.03.2020 17:19:22 *DEBUG* BasicTypeRegistry: HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1144a02b (BasicTypeRegistry.java, line 159)
02.03.2020 17:19:22 *DEBUG* TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30798137] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@455da438] (TypeConfiguration.java, line 152)
02.03.2020 17:19:22 *DEBUG* AnnotationBinder: Binding entity from annotated class: net.voicemail.mail.entity.Mail (AnnotationBinder.java, line 557)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* EntityBinder: Import with entity name Mail (EntityBinder.java, line 430)
02.03.2020 17:19:22 *DEBUG* Namespace: Created database namespace [logicalName=Name{catalog=null, schema=voicemail}, physicalName=Name{catalog=null, schema=voicemail}] (Namespace.java, line 51)
02.03.2020 17:19:22 *DEBUG* EntityBinder: Bind entity net.voicemail.mail.entity.Mail on table mail (EntityBinder.java, line 873)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_id, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:19:22 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: building SimpleValue for mailId (SimpleValueBinder.java, line 411)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: Building property mailId (PropertyBinder.java, line 266)
02.03.2020 17:19:22 *DEBUG* BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(mail_id)]), mailId, org.hibernate.id.enhanced.SequenceStyleGenerator, seq_gen, ...) (BinderHelper.java, line 644)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_created_date, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailCreatedDate with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:19:22 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailCreatedDate] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: building SimpleValue for mailCreatedDate (SimpleValueBinder.java, line 411)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: Building property mailCreatedDate (PropertyBinder.java, line 266)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_from, insertable=true, updatable=true, unique=true} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailFrom with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:19:22 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailFrom] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: building SimpleValue for mailFrom (SimpleValueBinder.java, line 411)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: Building property mailFrom (PropertyBinder.java, line 266)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mailmodified_date, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailModifiedDate with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:19:22 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailModifiedDate] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: building SimpleValue for mailModifiedDate (SimpleValueBinder.java, line 411)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: Building property mailModifiedDate (PropertyBinder.java, line 266)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_status, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailStatus with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:19:22 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailStatus] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: building SimpleValue for mailStatus (SimpleValueBinder.java, line 411)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: Building property mailStatus (PropertyBinder.java, line 266)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_subject_name, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailSubjectName with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:19:22 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailSubjectName] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: building SimpleValue for mailSubjectName (SimpleValueBinder.java, line 411)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: Building property mailSubjectName (PropertyBinder.java, line 266)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_to, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailTo with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:19:22 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailTo] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: building SimpleValue for mailTo (SimpleValueBinder.java, line 411)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: Building property mailTo (PropertyBinder.java, line 266)
02.03.2020 17:19:22 *DEBUG* AnnotationBinder: Binding entity from annotated class: net.voicemail.mail.entity.User (AnnotationBinder.java, line 557)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* EntityBinder: Import with entity name User (EntityBinder.java, line 430)
02.03.2020 17:19:22 *DEBUG* EntityBinder: Bind entity net.voicemail.mail.entity.User on table user (EntityBinder.java, line 873)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_id, insertable=true, updatable=true, unique=true} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: MetadataSourceProcessor property userId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:19:22 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: building SimpleValue for userId (SimpleValueBinder.java, line 411)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: Building property userId (PropertyBinder.java, line 266)
02.03.2020 17:19:22 *DEBUG* BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, user_id_generator, ...) (BinderHelper.java, line 644)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_email, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: MetadataSourceProcessor property userEmail with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:19:22 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userEmail] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: building SimpleValue for userEmail (SimpleValueBinder.java, line 411)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: Building property userEmail (PropertyBinder.java, line 266)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_name, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: MetadataSourceProcessor property userName with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:19:22 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userName] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: building SimpleValue for userName (SimpleValueBinder.java, line 411)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: Building property userName (PropertyBinder.java, line 266)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_password, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: MetadataSourceProcessor property userPassword with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:19:22 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userPassword] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: building SimpleValue for userPassword (SimpleValueBinder.java, line 411)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: Building property userPassword (PropertyBinder.java, line 266)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_phone_number, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: MetadataSourceProcessor property userPhoneNumber with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:19:22 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userPhoneNumber] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: building SimpleValue for userPhoneNumber (SimpleValueBinder.java, line 411)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: Building property userPhoneNumber (PropertyBinder.java, line 266)
02.03.2020 17:19:22 *DEBUG* AnnotationBinder: Binding entity from annotated class: net.voicemail.mail.entity.UserMailMap (AnnotationBinder.java, line 557)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* EntityBinder: Import with entity name UserMailMap (EntityBinder.java, line 430)
02.03.2020 17:19:22 *DEBUG* EntityBinder: Bind entity net.voicemail.mail.entity.UserMailMap on table user_mail_map (EntityBinder.java, line 873)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user_mail_map), mappingColumn=user_mail_map_id, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: MetadataSourceProcessor property userMailMapId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:19:22 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.UserMailMap:userMailMapId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: building SimpleValue for userMailMapId (SimpleValueBinder.java, line 411)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: Building property userMailMapId (PropertyBinder.java, line 266)
02.03.2020 17:19:22 *WARN * InFlightMetadataCollectorImpl: HHH000069: Duplicate generator name seq_gen (InFlightMetadataCollectorImpl.java, line 489)
02.03.2020 17:19:22 *DEBUG* BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_mail_map_id)]), userMailMapId, org.hibernate.id.enhanced.SequenceStyleGenerator, seq_gen, ...) (BinderHelper.java, line 644)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user_mail_map), mappingColumn=mail_id, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:19:22 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.UserMailMap:mailId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: building SimpleValue for mailId (SimpleValueBinder.java, line 411)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: Building property mailId (PropertyBinder.java, line 266)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user_mail_map), mappingColumn=user, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:19:22 *DEBUG* PropertyBinder: Building property user (PropertyBinder.java, line 266)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailId (SimpleValueBinder.java, line 456)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailCreatedDate (SimpleValueBinder.java, line 456)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailFrom (SimpleValueBinder.java, line 456)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailModifiedDate (SimpleValueBinder.java, line 456)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailStatus (SimpleValueBinder.java, line 456)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailSubjectName (SimpleValueBinder.java, line 456)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailTo (SimpleValueBinder.java, line 456)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userId (SimpleValueBinder.java, line 456)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userEmail (SimpleValueBinder.java, line 456)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userName (SimpleValueBinder.java, line 456)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userPassword (SimpleValueBinder.java, line 456)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userPhoneNumber (SimpleValueBinder.java, line 456)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userMailMapId (SimpleValueBinder.java, line 456)
02.03.2020 17:19:22 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailId (SimpleValueBinder.java, line 456)
02.03.2020 17:19:22 *DEBUG* PrimaryKey: Forcing column [mail_id] to be non-null as it is part of the primary key for table [mail] (PrimaryKey.java, line 35)
02.03.2020 17:19:22 *DEBUG* PrimaryKey: Forcing column [user_id] to be non-null as it is part of the primary key for table [user] (PrimaryKey.java, line 35)
02.03.2020 17:19:22 *DEBUG* PrimaryKey: Forcing column [user_mail_map_id] to be non-null as it is part of the primary key for table [user_mail_map] (PrimaryKey.java, line 35)
02.03.2020 17:19:22 *DEBUG* InFlightMetadataCollectorImpl: Resolving reference to class: net.voicemail.mail.entity.User (InFlightMetadataCollectorImpl.java, line 1860)
02.03.2020 17:19:22 *DEBUG* InFlightMetadataCollectorImpl: Resolving reference to class: net.voicemail.mail.entity.User (InFlightMetadataCollectorImpl.java, line 1860)
02.03.2020 17:19:22 *DEBUG* SessionFactoryImpl: Building session factory (SessionFactoryImpl.java, line 207)
02.03.2020 17:19:22 *DEBUG* Settings: SessionFactory name : null (Settings.java, line 68)
02.03.2020 17:19:22 *DEBUG* Settings: Automatic flush during beforeCompletion(): enabled (Settings.java, line 69)
02.03.2020 17:19:22 *DEBUG* Settings: Automatic session close at end of transaction: disabled (Settings.java, line 70)
02.03.2020 17:19:22 *DEBUG* Settings: Statistics: disabled (Settings.java, line 72)
02.03.2020 17:19:22 *DEBUG* Settings: Deleted entity synthetic identifier rollback: disabled (Settings.java, line 74)
02.03.2020 17:19:22 *DEBUG* Settings: Default entity-mode: pojo (Settings.java, line 75)
02.03.2020 17:19:22 *DEBUG* Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled (Settings.java, line 76)
02.03.2020 17:19:22 *DEBUG* Settings: Allow initialization of lazy state outside session : disabled (Settings.java, line 77)
02.03.2020 17:19:22 *DEBUG* Settings: Using BatchFetchStyle : LEGACY (Settings.java, line 79)
02.03.2020 17:19:22 *DEBUG* Settings: Default batch fetch size: -1 (Settings.java, line 80)
02.03.2020 17:19:22 *DEBUG* Settings: Maximum outer join fetch depth: null (Settings.java, line 81)
02.03.2020 17:19:22 *DEBUG* Settings: Default null ordering: NONE (Settings.java, line 82)
02.03.2020 17:19:22 *DEBUG* Settings: Order SQL updates by primary key: disabled (Settings.java, line 83)
02.03.2020 17:19:22 *DEBUG* Settings: Order SQL inserts for batching: disabled (Settings.java, line 84)
02.03.2020 17:19:22 *DEBUG* Settings: multi-tenancy strategy : NONE (Settings.java, line 86)
02.03.2020 17:19:22 *DEBUG* Settings: JTA Track by Thread: enabled (Settings.java, line 88)
02.03.2020 17:19:22 *DEBUG* Settings: Query language substitutions: {} (Settings.java, line 90)
02.03.2020 17:19:22 *DEBUG* Settings: Named query checking : enabled (Settings.java, line 91)
02.03.2020 17:19:22 *DEBUG* Settings: Second-level cache: disabled (Settings.java, line 93)
02.03.2020 17:19:22 *DEBUG* Settings: Second-level query cache: disabled (Settings.java, line 94)
02.03.2020 17:19:22 *DEBUG* Settings: Second-level query cache factory: null (Settings.java, line 95)
02.03.2020 17:19:22 *DEBUG* Settings: Second-level cache region prefix: null (Settings.java, line 96)
02.03.2020 17:19:22 *DEBUG* Settings: Optimize second-level cache for minimal puts: disabled (Settings.java, line 97)
02.03.2020 17:19:22 *DEBUG* Settings: Structured second-level cache entries: disabled (Settings.java, line 98)
02.03.2020 17:19:22 *DEBUG* Settings: Second-level cache direct-reference entries: disabled (Settings.java, line 99)
02.03.2020 17:19:22 *DEBUG* Settings: Automatic eviction of collection cache: disabled (Settings.java, line 100)
02.03.2020 17:19:22 *DEBUG* Settings: JDBC batch size: 15 (Settings.java, line 102)
02.03.2020 17:19:22 *DEBUG* Settings: JDBC batch updates for versioned data: enabled (Settings.java, line 103)
02.03.2020 17:19:22 *DEBUG* Settings: Scrollable result sets: enabled (Settings.java, line 104)
02.03.2020 17:19:22 *DEBUG* Settings: Wrap result sets: disabled (Settings.java, line 105)
02.03.2020 17:19:22 *DEBUG* Settings: JDBC3 getGeneratedKeys(): enabled (Settings.java, line 106)
02.03.2020 17:19:22 *DEBUG* Settings: JDBC result set fetch size: null (Settings.java, line 107)
02.03.2020 17:19:22 *DEBUG* Settings: Connection release mode: ON_CLOSE (Settings.java, line 108)
02.03.2020 17:19:22 *DEBUG* Settings: Generate SQL with comments: disabled (Settings.java, line 109)
02.03.2020 17:19:22 *DEBUG* Settings: JPA compliance - query :  (Settings.java, line 111)
02.03.2020 17:19:22 *DEBUG* Settings: JPA compliance - closed-handling :  (Settings.java, line 112)
02.03.2020 17:19:22 *DEBUG* Settings: JPA compliance - lists :  (Settings.java, line 113)
02.03.2020 17:19:22 *DEBUG* Settings: JPA compliance - transactions :  (Settings.java, line 114)
02.03.2020 17:19:22 *DEBUG* SessionFactoryImpl: Session factory constructed with filter configurations : {} (SessionFactoryImpl.java, line 262)
02.03.2020 17:19:22 *DEBUG* SessionFactoryImpl: Instantiating session factory with properties: {hibernate.id.new_generator_mappings=true, java.specification.version=13, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3cead673, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/home/deepak/Work/COS/extended-cafeteria-ordering-system/target/classes:/home/deepak/.m2/repository/org/postgresql/postgresql/9.4.1211/postgresql-9.4.1211.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.2.2.RELEASE/spring-boot-starter-data-jpa-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.2.2.RELEASE/spring-boot-starter-aop-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-aop/5.2.2.RELEASE/spring-aop-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/aspectj/aspectjweaver/1.9.5/aspectjweaver-1.9.5.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.2.2.RELEASE/spring-boot-starter-jdbc-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/com/zaxxer/HikariCP/3.4.1/HikariCP-3.4.1.jar:/home/deepak/.m2/repository/org/springframework/spring-jdbc/5.2.2.RELEASE/spring-jdbc-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/home/deepak/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/home/deepak/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/home/deepak/.m2/repository/org/hibernate/hibernate-core/5.4.9.Final/hibernate-core-5.4.9.Final.jar:/home/deepak/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/deepak/.m2/repository/net/bytebuddy/byte-buddy/1.10.2/byte-buddy-1.10.2.jar:/home/deepak/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/deepak/.m2/repository/org/jboss/jandex/2.1.1.Final/jandex-2.1.1.Final.jar:/home/deepak/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/deepak/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/deepak/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/deepak/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/deepak/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/deepak/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/deepak/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/deepak/.m2/repository/org/springframework/data/spring-data-jpa/2.2.3.RELEASE/spring-data-jpa-2.2.3.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/data/spring-data-commons/2.2.3.RELEASE/spring-data-commons-2.2.3.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-orm/5.2.2.RELEASE/spring-orm-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-context/5.2.2.RELEASE/spring-context-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-tx/5.2.2.RELEASE/spring-tx-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-beans/5.2.2.RELEASE/spring-beans-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-aspects/5.2.2.RELEASE/spring-aspects-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter/2.2.2.RELEASE/spring-boot-starter-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot/2.2.2.RELEASE/spring-boot-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.2.2.RELEASE/spring-boot-autoconfigure-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/deepak/.m2/repository/org/springframework/spring-core/5.2.2.RELEASE/spring-core-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-jcl/5.2.2.RELEASE/spring-jcl-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.2.0.RELEASE/spring-boot-starter-web-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.2.0.RELEASE/spring-boot-starter-json-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.10.0/jackson-datatype-jdk8-2.10.0.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.10.0/jackson-datatype-jsr310-2.10.0.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.10.0/jackson-module-parameter-names-2.10.0.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.2.0.RELEASE/spring-boot-starter-tomcat-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.27/tomcat-embed-core-9.0.27.jar:/home/deepak/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.27/tomcat-embed-el-9.0.27.jar:/home/deepak/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.27/tomcat-embed-websocket-9.0.27.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.2.0.RELEASE/spring-boot-starter-validation-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.1/jakarta.validation-api-2.0.1.jar:/home/deepak/.m2/repository/org/springframework/spring-web/5.2.0.RELEASE/spring-web-5.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-webmvc/5.2.0.RELEASE/spring-webmvc-5.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-expression/5.2.0.RELEASE/spring-expression-5.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/2.2.2.RELEASE/spring-boot-starter-thymeleaf-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/thymeleaf/thymeleaf-spring5/3.0.11.RELEASE/thymeleaf-spring5-3.0.11.RELEASE.jar:/home/deepak/.m2/repository/org/thymeleaf/thymeleaf/3.0.11.RELEASE/thymeleaf-3.0.11.RELEASE.jar:/home/deepak/.m2/repository/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE.jar:/home/deepak/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/home/deepak/.m2/repository/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.4.RELEASE/thymeleaf-extras-java8time-3.0.4.RELEASE.jar:/home/deepak/.m2/repository/nz/net/ultraq/thymeleaf/thymeleaf-layout-dialect/2.4.1/thymeleaf-layout-dialect-2.4.1.jar:/home/deepak/.m2/repository/nz/net/ultraq/thymeleaf/thymeleaf-expression-processor/1.1.3/thymeleaf-expression-processor-1.1.3.jar:/home/deepak/.m2/repository/org/codehaus/groovy/groovy/2.4.13/groovy-2.4.13.jar:/home/deepak/.m2/repository/org/webjars/bootstrap/4.2.1/bootstrap-4.2.1.jar:/home/deepak/.m2/repository/org/webjars/popper.js/1.14.3/popper.js-1.14.3.jar:/home/deepak/.m2/repository/org/webjars/jquery/3.4.1/jquery-3.4.1.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-log4j2/2.2.2.RELEASE/spring-boot-starter-log4j2-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-jul/2.12.1/log4j-jul-2.12.1.jar:/home/deepak/.m2/repository/org/slf4j/jul-to-slf4j/1.7.29/jul-to-slf4j-1.7.29.jar:/home/deepak/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-apt/4.2.1/querydsl-apt-4.2.1.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-codegen/4.2.1/querydsl-codegen-4.2.1.jar:/home/deepak/.m2/repository/com/mysema/codegen/codegen/0.6.8/codegen-0.6.8.jar:/home/deepak/.m2/repository/org/eclipse/jdt/core/compiler/ecj/4.3.1/ecj-4.3.1.jar:/home/deepak/.m2/repository/org/reflections/reflections/0.9.9/reflections-0.9.9.jar:/home/deepak/.m2/repository/com/google/code/findbugs/annotations/2.0.1/annotations-2.0.1.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-jpa/4.2.1/querydsl-jpa-4.2.1.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-core/4.2.1/querydsl-core-4.2.1.jar:/home/deepak/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar:/home/deepak/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/deepak/.m2/repository/com/mysema/commons/mysema-commons-lang/0.2.4/mysema-commons-lang-0.2.4.jar:/home/deepak/.m2/repository/com/infradna/tool/bridge-method-annotation/1.13/bridge-method-annotation-1.13.jar:/home/deepak/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.2/jackson-databind-2.9.2.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.2/jackson-core-2.9.2.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.5/log4j-slf4j-impl-2.5.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-api/2.5/log4j-api-2.5.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-core/2.5/log4j-core-2.5.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.2/jackson-annotations-2.9.2.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.9.2/jackson-dataformat-yaml-2.9.2.jar:/home/deepak/.m2/repository/org/yaml/snakeyaml/1.18/snakeyaml-1.18.jar:/home/deepak/.m2/repository/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar:/home/deepak/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.2.Final/hibernate-validator-6.0.2.Final.jar:/home/deepak/.m2/repository/javax/validation/validation-api/2.0.0.Final/validation-api-2.0.0.Final.jar:/home/deepak/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/deepak/.m2/repository/com/fasterxml/classmate/1.3.1/classmate-1.3.1.jar:/home/deepak/.m2/repository/org/hibernate/validator/hibernate-validator-annotation-processor/6.0.2.Final/hibernate-validator-annotation-processor-6.0.2.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Kolkata, java.vm.specification.version=13, os.name=Linux, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/local/jdk-13.0.2/lib, sun.java.command=net.voicemail.Application, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@53ba25ff, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/home/deepak, spring.boot.project.name=cafeteria-ordering-system, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/usr/local/jdk-13.0.2, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, hibernate.hbm2ddl.auto=validate, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=deepak, path.separator=:, os.version=5.3.0-40-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/tmp, catalina.home=/tmp/tomcat.2710762180979629306.8080, java.version=13.0.2, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/home/deepak/Work/COS/extended-cafeteria-ordering-system, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=15263, catalina.base=/tmp/tomcat.2710762180979629306.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@10a0a1e, java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=57.0} (SessionFactoryImpl.java, line 263)
02.03.2020 17:19:22 *DEBUG* DefaultTraversableResolver: Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver (DefaultTraversableResolver.java, line 103)
02.03.2020 17:19:22 *DEBUG* DefaultTraversableResolver: Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. (DefaultTraversableResolver.java, line 114)
02.03.2020 17:19:22 *DEBUG* ValidationXmlParser: Trying to load META-INF/validation.xml for XML based Validator configuration. (ValidationXmlParser.java, line 130)
02.03.2020 17:19:22 *DEBUG* ResourceLoaderHelper: Trying to load META-INF/validation.xml via TCCL (ResourceLoaderHelper.java, line 58)
02.03.2020 17:19:22 *DEBUG* ResourceLoaderHelper: Trying to load META-INF/validation.xml via Hibernate Validator's class loader (ResourceLoaderHelper.java, line 64)
02.03.2020 17:19:22 *DEBUG* ValidationXmlParser: No META-INF/validation.xml found. Using annotation based configuration only. (ValidationXmlParser.java, line 137)
02.03.2020 17:19:22 *DEBUG* ResourceBundleMessageInterpolator: Loaded expression factory via original TCCL (ResourceBundleMessageInterpolator.java, line 88)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.Mail] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.Mail (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.User] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.User (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.UserMailMap] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.UserMailMap (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:19:22 *DEBUG* JaccIntegrator: Skipping JACC integration as it was not enabled (JaccIntegrator.java, line 80)
02.03.2020 17:19:22 *DEBUG* SessionFactoryImpl: Instantiated session factory (SessionFactoryImpl.java, line 302)
02.03.2020 17:19:22 *DEBUG* TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30798137] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@8ef1d58] (TypeConfiguration.java, line 157)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.Mail] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.Mail (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.Mail] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.Mail (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.User] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.User (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.User] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.User (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.UserMailMap] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.UserMailMap (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.UserMailMap] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:19:22 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.UserMailMap (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:19:22 *DEBUG* AbstractEntityPersister: Static SQL for entity: net.voicemail.mail.entity.Mail (AbstractEntityPersister.java, line 3818)
02.03.2020 17:19:22 *DEBUG* AbstractEntityPersister:  Version select: select mail_id from voicemail.mail where mail_id =? (AbstractEntityPersister.java, line 3823)
02.03.2020 17:19:22 *DEBUG* AbstractEntityPersister:  Snapshot select: select mail_.mail_id, mail_.mail_created_date as mail_cre2_0_, mail_.mail_from as mail_fro3_0_, mail_.mailmodified_date as mailmodi4_0_, mail_.mail_status as mail_sta5_0_, mail_.mail_subject_name as mail_sub6_0_, mail_.mail_to as mail_to7_0_ from voicemail.mail mail_ where mail_.mail_id=? (AbstractEntityPersister.java, line 3826)
02.03.2020 17:19:22 *DEBUG* AbstractEntityPersister:  Insert 0: insert into voicemail.mail (mail_created_date, mail_from, mailmodified_date, mail_status, mail_subject_name, mail_to, mail_id) values (?, ?, ?, ?, ?, ?, ?) (DelegatingBasicLogger.java, line 394)
02.03.2020 17:19:22 *DEBUG* AbstractEntityPersister:  Update 0: update voicemail.mail set mail_created_date=?, mail_from=?, mailmodified_date=?, mail_status=?, mail_subject_name=?, mail_to=? where mail_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:19:22 *DEBUG* AbstractEntityPersister:  Delete 0: delete from voicemail.mail where mail_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:19:22 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@621a387f] (QuerySpacesImpl.java, line 174)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailCreatedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailFrom (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailModifiedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailStatus (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailSubjectName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailTo (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:19:22 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:19:22 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.Mail)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.Mail, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.Mail)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.Mail)
          - SQL table alias mapping - mail0_
          - alias suffix - 0_
          - suffixed key columns - {mail_id1_0_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:19:22 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.Mail [NONE]: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mailmodified_date as mailmodi4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (EntityLoader.java, line 137)
02.03.2020 17:19:22 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74a1d60e] (QuerySpacesImpl.java, line 174)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailCreatedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailFrom (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailModifiedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailStatus (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailSubjectName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailTo (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:19:22 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:19:22 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.Mail)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.Mail, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.Mail)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.Mail)
          - SQL table alias mapping - mail0_
          - alias suffix - 0_
          - suffixed key columns - {mail_id1_0_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:19:22 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.Mail [READ]: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mailmodified_date as mailmodi4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (EntityLoader.java, line 137)
02.03.2020 17:19:22 *DEBUG* Loader: Static select for action ACTION_MERGE on entity net.voicemail.mail.entity.Mail: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mailmodified_date as mailmodi4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:19:22 *DEBUG* Loader: Static select for action ACTION_REFRESH on entity net.voicemail.mail.entity.Mail: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mailmodified_date as mailmodi4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:19:22 *DEBUG* AbstractEntityPersister: Static SQL for entity: net.voicemail.mail.entity.User (AbstractEntityPersister.java, line 3818)
02.03.2020 17:19:22 *DEBUG* AbstractEntityPersister:  Version select: select user_id from voicemail.user where user_id =? (AbstractEntityPersister.java, line 3823)
02.03.2020 17:19:22 *DEBUG* AbstractEntityPersister:  Snapshot select: select user_.user_id, user_.user_email as user_ema2_1_, user_.user_name as user_nam3_1_, user_.user_password as user_pas4_1_, user_.user_phone_number as user_pho5_1_ from voicemail.user user_ where user_.user_id=? (AbstractEntityPersister.java, line 3826)
02.03.2020 17:19:22 *DEBUG* AbstractEntityPersister:  Insert 0: insert into voicemail.user (user_email, user_name, user_password, user_phone_number, user_id) values (?, ?, ?, ?, ?) (DelegatingBasicLogger.java, line 394)
02.03.2020 17:19:22 *DEBUG* AbstractEntityPersister:  Update 0: update voicemail.user set user_email=?, user_name=?, user_password=?, user_phone_number=? where user_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:19:22 *DEBUG* AbstractEntityPersister:  Delete 0: delete from voicemail.user where user_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:19:22 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608eb42e] (QuerySpacesImpl.java, line 174)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:19:22 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:19:22 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.User)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:19:22 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (EntityLoader.java, line 137)
02.03.2020 17:19:22 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30eb55c9] (QuerySpacesImpl.java, line 174)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:19:22 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:19:22 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.User)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:19:22 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (EntityLoader.java, line 137)
02.03.2020 17:19:22 *DEBUG* Loader: Static select for action ACTION_MERGE on entity net.voicemail.mail.entity.User: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:19:22 *DEBUG* Loader: Static select for action ACTION_REFRESH on entity net.voicemail.mail.entity.User: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:19:22 *DEBUG* AbstractEntityPersister: Static SQL for entity: net.voicemail.mail.entity.UserMailMap (AbstractEntityPersister.java, line 3818)
02.03.2020 17:19:22 *DEBUG* AbstractEntityPersister:  Version select: select user_mail_map_id from voicemail.user_mail_map where user_mail_map_id =? (AbstractEntityPersister.java, line 3823)
02.03.2020 17:19:22 *DEBUG* AbstractEntityPersister:  Snapshot select: select usermailma_.user_mail_map_id, usermailma_.mail_id as mail_id2_2_, usermailma_.user_id as user_id3_2_ from voicemail.user_mail_map usermailma_ where usermailma_.user_mail_map_id=? (AbstractEntityPersister.java, line 3826)
02.03.2020 17:19:22 *DEBUG* AbstractEntityPersister:  Insert 0: insert into voicemail.user_mail_map (mail_id, user_id, user_mail_map_id) values (?, ?, ?) (DelegatingBasicLogger.java, line 394)
02.03.2020 17:19:22 *DEBUG* AbstractEntityPersister:  Update 0: update voicemail.user_mail_map set mail_id=?, user_id=? where user_mail_map_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:19:22 *DEBUG* AbstractEntityPersister:  Delete 0: delete from voicemail.user_mail_map where user_mail_map_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:19:22 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@309e3f34] (QuerySpacesImpl.java, line 174)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailId (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d5e3f55] (QuerySpacesImpl.java, line 174)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:19:22 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:19:22 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.UserMailMap)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.UserMailMap, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.UserMailMap)
          - EntityAttributeFetchImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:1>, path=net.voicemail.mail.entity.UserMailMap.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.UserMailMap)
          - SQL table alias mapping - usermailma0_
          - alias suffix - 0_
          - suffixed key columns - {user_mai1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=net.voicemail.mail.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:19:22 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.UserMailMap [NONE]: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_, user1_.user_id as user_id1_1_1_, user1_.user_email as user_ema2_1_1_, user1_.user_name as user_nam3_1_1_, user1_.user_password as user_pas4_1_1_, user1_.user_phone_number as user_pho5_1_1_ from voicemail.user_mail_map usermailma0_ left outer join voicemail.user user1_ on usermailma0_.user_id=user1_.user_id where usermailma0_.user_mail_map_id=? (EntityLoader.java, line 137)
02.03.2020 17:19:22 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45273d40] (QuerySpacesImpl.java, line 174)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailId (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10f397d0] (QuerySpacesImpl.java, line 174)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:19:22 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:19:22 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:19:22 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.UserMailMap)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.UserMailMap, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.UserMailMap)
          - EntityAttributeFetchImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:1>, path=net.voicemail.mail.entity.UserMailMap.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.UserMailMap)
          - SQL table alias mapping - usermailma0_
          - alias suffix - 0_
          - suffixed key columns - {user_mai1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=net.voicemail.mail.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:19:22 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.UserMailMap [READ]: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_, user1_.user_id as user_id1_1_1_, user1_.user_email as user_ema2_1_1_, user1_.user_name as user_nam3_1_1_, user1_.user_password as user_pas4_1_1_, user1_.user_phone_number as user_pho5_1_1_ from voicemail.user_mail_map usermailma0_ left outer join voicemail.user user1_ on usermailma0_.user_id=user1_.user_id where usermailma0_.user_mail_map_id=? (EntityLoader.java, line 137)
02.03.2020 17:19:22 *DEBUG* Loader: Static select for action ACTION_MERGE on entity net.voicemail.mail.entity.UserMailMap: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_ from voicemail.user_mail_map usermailma0_ where usermailma0_.user_mail_map_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:19:22 *DEBUG* Loader: Static select for action ACTION_REFRESH on entity net.voicemail.mail.entity.UserMailMap: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_ from voicemail.user_mail_map usermailma0_ where usermailma0_.user_mail_map_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:19:22 *DEBUG* SessionFactoryImpl: HHH000031: Closing (SessionFactoryImpl.java, line 812)
02.03.2020 17:19:22 *DEBUG* SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@85c3522 (SessionFactoryRegistry.java, line 52)
02.03.2020 17:19:22 *DEBUG* TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@18be3205] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@8ef1d58] (TypeConfiguration.java, line 350)
02.03.2020 17:19:22 *DEBUG* AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries (AbstractServiceRegistryImpl.java, line 419)
02.03.2020 17:19:22 *DEBUG* BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries (BootstrapServiceRegistryImpl.java, line 295)
02.03.2020 17:20:30 *INFO * Application: Starting Application on Deepak with PID 15413 (/home/deepak/Work/COS/extended-cafeteria-ordering-system/target/classes started by deepak in /home/deepak/Work/COS/extended-cafeteria-ordering-system) (StartupInfoLogger.java, line 55)
02.03.2020 17:20:30 *DEBUG* Application: Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE (StartupInfoLogger.java, line 56)
02.03.2020 17:20:30 *INFO * Application: No active profile set, falling back to default profiles: default (SpringApplication.java, line 651)
02.03.2020 17:20:31 *DEBUG* LogHelper: PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@5bc2b487
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/deepak/Work/COS/extended-cafeteria-ordering-system/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		net.voicemail.mail.entity.Mail
		net.voicemail.mail.entity.User
		net.voicemail.mail.entity.UserMailMap]
	Mapping files names []
	Properties [] (LogHelper.java, line 102)
02.03.2020 17:20:31 *DEBUG* IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. (IntegratorServiceImpl.java, line 46)
02.03.2020 17:20:31 *DEBUG* IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. (IntegratorServiceImpl.java, line 46)
02.03.2020 17:20:31 *DEBUG* IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. (IntegratorServiceImpl.java, line 46)
02.03.2020 17:20:31 *INFO * Version: HHH000412: Hibernate Core {5.4.9.Final} (Version.java, line 46)
02.03.2020 17:20:31 *DEBUG* Environment: HHH000206: hibernate.properties not found (Environment.java, line 199)
02.03.2020 17:20:31 *DEBUG* ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService] (ServiceBinding.java, line 68)
02.03.2020 17:20:31 *DEBUG* RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered (RegionFactoryInitiator.java, line 118)
02.03.2020 17:20:31 *DEBUG* RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory (RegionFactoryInitiator.java, line 49)
02.03.2020 17:20:31 *INFO * Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final} (JavaReflectionManager.java, line 49)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@73e4bb60 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@73e4bb60 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73e4bb60 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@573aeab2 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7708b66a (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@359ceb13 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@9d3d54e (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@9d3d54e (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@9d3d54e (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@6206b4a7 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@6206b4a7 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6206b4a7 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@66756662 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@66756662 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@66756662 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@40d96578 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@40d96578 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@40d96578 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@13516600 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@13516600 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@13516600 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@782fd504 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@782fd504 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@782fd504 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@1282e98 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@1282e98 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1282e98 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@26275b46 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@26275b46 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@74123110 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@74123110 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@418f0534 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@418f0534 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2aa5bd48 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ec88aa1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@783b3aa0 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@783b3aa0 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@134a8ead (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@134a8ead (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@44fd7ba4 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@44fd7ba4 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@8f57e4c (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@8f57e4c (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2baac4a7 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2baac4a7 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@282c4da0 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@282c4da0 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e2a6991 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e2a6991 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@76ac68b0 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@76ac68b0 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2450256f (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2450256f (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@5345dfe8 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@5345dfe8 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@164d01ba (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@164d01ba (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@1abcd059 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1abcd059 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1abcd059 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@716f94c1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@2e362407 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2e362407 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2e362407 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f315b08 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@4b4814d0 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4b4814d0 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@111a7973 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@111a7973 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@15369d73 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@15369d73 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@514377fc (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@514377fc (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@159ac15f (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@159ac15f (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@642c6461 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@11826398 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@11826398 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@11826398 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7a572ea0 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7a572ea0 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7a572ea0 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@63f9ddf9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@62e73ab6 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@681de87f (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@681de87f (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@681de87f (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4e974b9e (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4e974b9e (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4e974b9e (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@5ebbde60 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@25c1f5ee (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@3ffd4b12 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3ffd4b12 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@69b3886f (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@633ddc0c (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@633ddc0c (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1796b2d4 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1796b2d4 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7f12094d (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@12567179 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@4e8598d9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@2fdf22f7 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fdf22f7 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20ffb8d5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@307c59ea (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@57e03347 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2edb2f8b (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@733f1395 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@21dea711 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7772d266 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@a21c74 (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:31 *DEBUG* BootstrapContextImpl: Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3d0d120b] into BootstrapContext; was [null] (BootstrapContextImpl.java, line 262)
02.03.2020 17:20:31 *DEBUG* ClassLoaderAccessImpl: ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3d0d120b) [was null] (ClassLoaderAccessImpl.java, line 45)
02.03.2020 17:20:32 *DEBUG* BootstrapContextImpl: Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6bcdd6e4] into BootstrapContext; was [null] (BootstrapContextImpl.java, line 272)
02.03.2020 17:20:32 *DEBUG* BootstrapContextImpl: Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1192c925] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@615b5480] (BootstrapContextImpl.java, line 267)
02.03.2020 17:20:32 *DEBUG* BootstrapContextImpl: Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3d0d120b] (BootstrapContextImpl.java, line 262)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3d0d120b] (ClassLoaderAccessImpl.java, line 45)
02.03.2020 17:20:32 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:20:32 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:20:32 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:20:32 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:20:32 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:20:32 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:20:32 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:20:32 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:20:32 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:20:32 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:20:32 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:20:32 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:20:32 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:20:32 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:20:32 *DEBUG* JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 9.6.8
      major : 9
      minor : 6 (JdbcEnvironmentInitiator.java, line 72)
02.03.2020 17:20:32 *DEBUG* JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.4.1211
      major : 9
      minor : 4 (JdbcEnvironmentInitiator.java, line 83)
02.03.2020 17:20:32 *DEBUG* JdbcEnvironmentInitiator: JDBC version : 4.0 (DelegatingBasicLogger.java, line 389)
02.03.2020 17:20:32 *INFO * Dialect: HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL95Dialect (Dialect.java, line 172)
02.03.2020 17:20:32 *DEBUG* IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case (IdentifierHelperBuilder.java, line 108)
02.03.2020 17:20:32 *DEBUG* Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] (Namespace.java, line 51)
02.03.2020 17:20:32 *DEBUG* BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@47c96f2c (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:32 *DEBUG* BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@47c96f2c (BasicTypeRegistry.java, line 156)
02.03.2020 17:20:32 *DEBUG* BasicTypeRegistry: HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@159ac15f (BasicTypeRegistry.java, line 159)
02.03.2020 17:20:32 *DEBUG* TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@249b54af] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@194911c1] (TypeConfiguration.java, line 152)
02.03.2020 17:20:32 *DEBUG* AnnotationBinder: Binding entity from annotated class: net.voicemail.mail.entity.Mail (AnnotationBinder.java, line 557)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* EntityBinder: Import with entity name Mail (EntityBinder.java, line 430)
02.03.2020 17:20:32 *DEBUG* Namespace: Created database namespace [logicalName=Name{catalog=null, schema=voicemail}, physicalName=Name{catalog=null, schema=voicemail}] (Namespace.java, line 51)
02.03.2020 17:20:32 *DEBUG* EntityBinder: Bind entity net.voicemail.mail.entity.Mail on table mail (EntityBinder.java, line 873)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_id, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:20:32 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: building SimpleValue for mailId (SimpleValueBinder.java, line 411)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: Building property mailId (PropertyBinder.java, line 266)
02.03.2020 17:20:32 *DEBUG* BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(mail_id)]), mailId, org.hibernate.id.enhanced.SequenceStyleGenerator, seq_gen, ...) (BinderHelper.java, line 644)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_created_date, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailCreatedDate with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:20:32 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailCreatedDate] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: building SimpleValue for mailCreatedDate (SimpleValueBinder.java, line 411)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: Building property mailCreatedDate (PropertyBinder.java, line 266)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_from, insertable=true, updatable=true, unique=true} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailFrom with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:20:32 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailFrom] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: building SimpleValue for mailFrom (SimpleValueBinder.java, line 411)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: Building property mailFrom (PropertyBinder.java, line 266)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_modified_date, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailModifiedDate with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:20:32 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailModifiedDate] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: building SimpleValue for mailModifiedDate (SimpleValueBinder.java, line 411)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: Building property mailModifiedDate (PropertyBinder.java, line 266)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_status, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailStatus with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:20:32 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailStatus] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: building SimpleValue for mailStatus (SimpleValueBinder.java, line 411)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: Building property mailStatus (PropertyBinder.java, line 266)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_subject_name, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailSubjectName with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:20:32 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailSubjectName] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: building SimpleValue for mailSubjectName (SimpleValueBinder.java, line 411)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: Building property mailSubjectName (PropertyBinder.java, line 266)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_to, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailTo with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:20:32 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailTo] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: building SimpleValue for mailTo (SimpleValueBinder.java, line 411)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: Building property mailTo (PropertyBinder.java, line 266)
02.03.2020 17:20:32 *DEBUG* AnnotationBinder: Binding entity from annotated class: net.voicemail.mail.entity.User (AnnotationBinder.java, line 557)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* EntityBinder: Import with entity name User (EntityBinder.java, line 430)
02.03.2020 17:20:32 *DEBUG* EntityBinder: Bind entity net.voicemail.mail.entity.User on table user (EntityBinder.java, line 873)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_id, insertable=true, updatable=true, unique=true} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: MetadataSourceProcessor property userId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:20:32 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: building SimpleValue for userId (SimpleValueBinder.java, line 411)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: Building property userId (PropertyBinder.java, line 266)
02.03.2020 17:20:32 *DEBUG* BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, user_id_generator, ...) (BinderHelper.java, line 644)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_email, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: MetadataSourceProcessor property userEmail with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:20:32 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userEmail] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: building SimpleValue for userEmail (SimpleValueBinder.java, line 411)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: Building property userEmail (PropertyBinder.java, line 266)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_name, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: MetadataSourceProcessor property userName with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:20:32 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userName] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: building SimpleValue for userName (SimpleValueBinder.java, line 411)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: Building property userName (PropertyBinder.java, line 266)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_password, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: MetadataSourceProcessor property userPassword with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:20:32 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userPassword] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: building SimpleValue for userPassword (SimpleValueBinder.java, line 411)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: Building property userPassword (PropertyBinder.java, line 266)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_phone_number, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: MetadataSourceProcessor property userPhoneNumber with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:20:32 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userPhoneNumber] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: building SimpleValue for userPhoneNumber (SimpleValueBinder.java, line 411)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: Building property userPhoneNumber (PropertyBinder.java, line 266)
02.03.2020 17:20:32 *DEBUG* AnnotationBinder: Binding entity from annotated class: net.voicemail.mail.entity.UserMailMap (AnnotationBinder.java, line 557)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* EntityBinder: Import with entity name UserMailMap (EntityBinder.java, line 430)
02.03.2020 17:20:32 *DEBUG* EntityBinder: Bind entity net.voicemail.mail.entity.UserMailMap on table user_mail_map (EntityBinder.java, line 873)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user_mail_map), mappingColumn=user_mail_map_id, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: MetadataSourceProcessor property userMailMapId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:20:32 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.UserMailMap:userMailMapId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: building SimpleValue for userMailMapId (SimpleValueBinder.java, line 411)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: Building property userMailMapId (PropertyBinder.java, line 266)
02.03.2020 17:20:32 *WARN * InFlightMetadataCollectorImpl: HHH000069: Duplicate generator name seq_gen (InFlightMetadataCollectorImpl.java, line 489)
02.03.2020 17:20:32 *DEBUG* BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_mail_map_id)]), userMailMapId, org.hibernate.id.enhanced.SequenceStyleGenerator, seq_gen, ...) (BinderHelper.java, line 644)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user_mail_map), mappingColumn=mail_id, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:20:32 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.UserMailMap:mailId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: building SimpleValue for mailId (SimpleValueBinder.java, line 411)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: Building property mailId (PropertyBinder.java, line 266)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user_mail_map), mappingColumn=user, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:20:32 *DEBUG* PropertyBinder: Building property user (PropertyBinder.java, line 266)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailId (SimpleValueBinder.java, line 456)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailCreatedDate (SimpleValueBinder.java, line 456)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailFrom (SimpleValueBinder.java, line 456)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailModifiedDate (SimpleValueBinder.java, line 456)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailStatus (SimpleValueBinder.java, line 456)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailSubjectName (SimpleValueBinder.java, line 456)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailTo (SimpleValueBinder.java, line 456)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userId (SimpleValueBinder.java, line 456)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userEmail (SimpleValueBinder.java, line 456)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userName (SimpleValueBinder.java, line 456)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userPassword (SimpleValueBinder.java, line 456)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userPhoneNumber (SimpleValueBinder.java, line 456)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userMailMapId (SimpleValueBinder.java, line 456)
02.03.2020 17:20:32 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailId (SimpleValueBinder.java, line 456)
02.03.2020 17:20:32 *DEBUG* PrimaryKey: Forcing column [mail_id] to be non-null as it is part of the primary key for table [mail] (PrimaryKey.java, line 35)
02.03.2020 17:20:32 *DEBUG* PrimaryKey: Forcing column [user_id] to be non-null as it is part of the primary key for table [user] (PrimaryKey.java, line 35)
02.03.2020 17:20:32 *DEBUG* PrimaryKey: Forcing column [user_mail_map_id] to be non-null as it is part of the primary key for table [user_mail_map] (PrimaryKey.java, line 35)
02.03.2020 17:20:32 *DEBUG* InFlightMetadataCollectorImpl: Resolving reference to class: net.voicemail.mail.entity.User (InFlightMetadataCollectorImpl.java, line 1860)
02.03.2020 17:20:32 *DEBUG* InFlightMetadataCollectorImpl: Resolving reference to class: net.voicemail.mail.entity.User (InFlightMetadataCollectorImpl.java, line 1860)
02.03.2020 17:20:32 *DEBUG* SessionFactoryImpl: Building session factory (SessionFactoryImpl.java, line 207)
02.03.2020 17:20:32 *DEBUG* Settings: SessionFactory name : null (Settings.java, line 68)
02.03.2020 17:20:32 *DEBUG* Settings: Automatic flush during beforeCompletion(): enabled (Settings.java, line 69)
02.03.2020 17:20:32 *DEBUG* Settings: Automatic session close at end of transaction: disabled (Settings.java, line 70)
02.03.2020 17:20:32 *DEBUG* Settings: Statistics: disabled (Settings.java, line 72)
02.03.2020 17:20:32 *DEBUG* Settings: Deleted entity synthetic identifier rollback: disabled (Settings.java, line 74)
02.03.2020 17:20:32 *DEBUG* Settings: Default entity-mode: pojo (Settings.java, line 75)
02.03.2020 17:20:32 *DEBUG* Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled (Settings.java, line 76)
02.03.2020 17:20:32 *DEBUG* Settings: Allow initialization of lazy state outside session : disabled (Settings.java, line 77)
02.03.2020 17:20:32 *DEBUG* Settings: Using BatchFetchStyle : LEGACY (Settings.java, line 79)
02.03.2020 17:20:32 *DEBUG* Settings: Default batch fetch size: -1 (Settings.java, line 80)
02.03.2020 17:20:32 *DEBUG* Settings: Maximum outer join fetch depth: null (Settings.java, line 81)
02.03.2020 17:20:32 *DEBUG* Settings: Default null ordering: NONE (Settings.java, line 82)
02.03.2020 17:20:32 *DEBUG* Settings: Order SQL updates by primary key: disabled (Settings.java, line 83)
02.03.2020 17:20:32 *DEBUG* Settings: Order SQL inserts for batching: disabled (Settings.java, line 84)
02.03.2020 17:20:32 *DEBUG* Settings: multi-tenancy strategy : NONE (Settings.java, line 86)
02.03.2020 17:20:32 *DEBUG* Settings: JTA Track by Thread: enabled (Settings.java, line 88)
02.03.2020 17:20:32 *DEBUG* Settings: Query language substitutions: {} (Settings.java, line 90)
02.03.2020 17:20:32 *DEBUG* Settings: Named query checking : enabled (Settings.java, line 91)
02.03.2020 17:20:32 *DEBUG* Settings: Second-level cache: disabled (Settings.java, line 93)
02.03.2020 17:20:32 *DEBUG* Settings: Second-level query cache: disabled (Settings.java, line 94)
02.03.2020 17:20:32 *DEBUG* Settings: Second-level query cache factory: null (Settings.java, line 95)
02.03.2020 17:20:32 *DEBUG* Settings: Second-level cache region prefix: null (Settings.java, line 96)
02.03.2020 17:20:32 *DEBUG* Settings: Optimize second-level cache for minimal puts: disabled (Settings.java, line 97)
02.03.2020 17:20:32 *DEBUG* Settings: Structured second-level cache entries: disabled (Settings.java, line 98)
02.03.2020 17:20:32 *DEBUG* Settings: Second-level cache direct-reference entries: disabled (Settings.java, line 99)
02.03.2020 17:20:32 *DEBUG* Settings: Automatic eviction of collection cache: disabled (Settings.java, line 100)
02.03.2020 17:20:32 *DEBUG* Settings: JDBC batch size: 15 (Settings.java, line 102)
02.03.2020 17:20:32 *DEBUG* Settings: JDBC batch updates for versioned data: enabled (Settings.java, line 103)
02.03.2020 17:20:32 *DEBUG* Settings: Scrollable result sets: enabled (Settings.java, line 104)
02.03.2020 17:20:32 *DEBUG* Settings: Wrap result sets: disabled (Settings.java, line 105)
02.03.2020 17:20:32 *DEBUG* Settings: JDBC3 getGeneratedKeys(): enabled (Settings.java, line 106)
02.03.2020 17:20:32 *DEBUG* Settings: JDBC result set fetch size: null (Settings.java, line 107)
02.03.2020 17:20:32 *DEBUG* Settings: Connection release mode: ON_CLOSE (Settings.java, line 108)
02.03.2020 17:20:32 *DEBUG* Settings: Generate SQL with comments: disabled (Settings.java, line 109)
02.03.2020 17:20:32 *DEBUG* Settings: JPA compliance - query :  (Settings.java, line 111)
02.03.2020 17:20:32 *DEBUG* Settings: JPA compliance - closed-handling :  (Settings.java, line 112)
02.03.2020 17:20:32 *DEBUG* Settings: JPA compliance - lists :  (Settings.java, line 113)
02.03.2020 17:20:32 *DEBUG* Settings: JPA compliance - transactions :  (Settings.java, line 114)
02.03.2020 17:20:32 *DEBUG* SessionFactoryImpl: Session factory constructed with filter configurations : {} (SessionFactoryImpl.java, line 262)
02.03.2020 17:20:32 *DEBUG* SessionFactoryImpl: Instantiating session factory with properties: {hibernate.id.new_generator_mappings=true, java.specification.version=13, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6ebbc06, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/home/deepak/Work/COS/extended-cafeteria-ordering-system/target/classes:/home/deepak/.m2/repository/org/postgresql/postgresql/9.4.1211/postgresql-9.4.1211.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.2.2.RELEASE/spring-boot-starter-data-jpa-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.2.2.RELEASE/spring-boot-starter-aop-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-aop/5.2.2.RELEASE/spring-aop-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/aspectj/aspectjweaver/1.9.5/aspectjweaver-1.9.5.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.2.2.RELEASE/spring-boot-starter-jdbc-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/com/zaxxer/HikariCP/3.4.1/HikariCP-3.4.1.jar:/home/deepak/.m2/repository/org/springframework/spring-jdbc/5.2.2.RELEASE/spring-jdbc-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/home/deepak/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/home/deepak/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/home/deepak/.m2/repository/org/hibernate/hibernate-core/5.4.9.Final/hibernate-core-5.4.9.Final.jar:/home/deepak/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/deepak/.m2/repository/net/bytebuddy/byte-buddy/1.10.2/byte-buddy-1.10.2.jar:/home/deepak/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/deepak/.m2/repository/org/jboss/jandex/2.1.1.Final/jandex-2.1.1.Final.jar:/home/deepak/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/deepak/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/deepak/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/deepak/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/deepak/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/deepak/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/deepak/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/deepak/.m2/repository/org/springframework/data/spring-data-jpa/2.2.3.RELEASE/spring-data-jpa-2.2.3.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/data/spring-data-commons/2.2.3.RELEASE/spring-data-commons-2.2.3.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-orm/5.2.2.RELEASE/spring-orm-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-context/5.2.2.RELEASE/spring-context-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-tx/5.2.2.RELEASE/spring-tx-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-beans/5.2.2.RELEASE/spring-beans-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-aspects/5.2.2.RELEASE/spring-aspects-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter/2.2.2.RELEASE/spring-boot-starter-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot/2.2.2.RELEASE/spring-boot-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.2.2.RELEASE/spring-boot-autoconfigure-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/deepak/.m2/repository/org/springframework/spring-core/5.2.2.RELEASE/spring-core-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-jcl/5.2.2.RELEASE/spring-jcl-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.2.0.RELEASE/spring-boot-starter-web-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.2.0.RELEASE/spring-boot-starter-json-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.10.0/jackson-datatype-jdk8-2.10.0.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.10.0/jackson-datatype-jsr310-2.10.0.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.10.0/jackson-module-parameter-names-2.10.0.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.2.0.RELEASE/spring-boot-starter-tomcat-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.27/tomcat-embed-core-9.0.27.jar:/home/deepak/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.27/tomcat-embed-el-9.0.27.jar:/home/deepak/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.27/tomcat-embed-websocket-9.0.27.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.2.0.RELEASE/spring-boot-starter-validation-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.1/jakarta.validation-api-2.0.1.jar:/home/deepak/.m2/repository/org/springframework/spring-web/5.2.0.RELEASE/spring-web-5.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-webmvc/5.2.0.RELEASE/spring-webmvc-5.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-expression/5.2.0.RELEASE/spring-expression-5.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/2.2.2.RELEASE/spring-boot-starter-thymeleaf-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/thymeleaf/thymeleaf-spring5/3.0.11.RELEASE/thymeleaf-spring5-3.0.11.RELEASE.jar:/home/deepak/.m2/repository/org/thymeleaf/thymeleaf/3.0.11.RELEASE/thymeleaf-3.0.11.RELEASE.jar:/home/deepak/.m2/repository/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE.jar:/home/deepak/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/home/deepak/.m2/repository/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.4.RELEASE/thymeleaf-extras-java8time-3.0.4.RELEASE.jar:/home/deepak/.m2/repository/nz/net/ultraq/thymeleaf/thymeleaf-layout-dialect/2.4.1/thymeleaf-layout-dialect-2.4.1.jar:/home/deepak/.m2/repository/nz/net/ultraq/thymeleaf/thymeleaf-expression-processor/1.1.3/thymeleaf-expression-processor-1.1.3.jar:/home/deepak/.m2/repository/org/codehaus/groovy/groovy/2.4.13/groovy-2.4.13.jar:/home/deepak/.m2/repository/org/webjars/bootstrap/4.2.1/bootstrap-4.2.1.jar:/home/deepak/.m2/repository/org/webjars/popper.js/1.14.3/popper.js-1.14.3.jar:/home/deepak/.m2/repository/org/webjars/jquery/3.4.1/jquery-3.4.1.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-log4j2/2.2.2.RELEASE/spring-boot-starter-log4j2-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-jul/2.12.1/log4j-jul-2.12.1.jar:/home/deepak/.m2/repository/org/slf4j/jul-to-slf4j/1.7.29/jul-to-slf4j-1.7.29.jar:/home/deepak/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-apt/4.2.1/querydsl-apt-4.2.1.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-codegen/4.2.1/querydsl-codegen-4.2.1.jar:/home/deepak/.m2/repository/com/mysema/codegen/codegen/0.6.8/codegen-0.6.8.jar:/home/deepak/.m2/repository/org/eclipse/jdt/core/compiler/ecj/4.3.1/ecj-4.3.1.jar:/home/deepak/.m2/repository/org/reflections/reflections/0.9.9/reflections-0.9.9.jar:/home/deepak/.m2/repository/com/google/code/findbugs/annotations/2.0.1/annotations-2.0.1.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-jpa/4.2.1/querydsl-jpa-4.2.1.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-core/4.2.1/querydsl-core-4.2.1.jar:/home/deepak/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar:/home/deepak/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/deepak/.m2/repository/com/mysema/commons/mysema-commons-lang/0.2.4/mysema-commons-lang-0.2.4.jar:/home/deepak/.m2/repository/com/infradna/tool/bridge-method-annotation/1.13/bridge-method-annotation-1.13.jar:/home/deepak/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.2/jackson-databind-2.9.2.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.2/jackson-core-2.9.2.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.5/log4j-slf4j-impl-2.5.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-api/2.5/log4j-api-2.5.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-core/2.5/log4j-core-2.5.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.2/jackson-annotations-2.9.2.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.9.2/jackson-dataformat-yaml-2.9.2.jar:/home/deepak/.m2/repository/org/yaml/snakeyaml/1.18/snakeyaml-1.18.jar:/home/deepak/.m2/repository/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar:/home/deepak/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.2.Final/hibernate-validator-6.0.2.Final.jar:/home/deepak/.m2/repository/javax/validation/validation-api/2.0.0.Final/validation-api-2.0.0.Final.jar:/home/deepak/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/deepak/.m2/repository/com/fasterxml/classmate/1.3.1/classmate-1.3.1.jar:/home/deepak/.m2/repository/org/hibernate/validator/hibernate-validator-annotation-processor/6.0.2.Final/hibernate-validator-annotation-processor-6.0.2.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Kolkata, java.vm.specification.version=13, os.name=Linux, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/local/jdk-13.0.2/lib, sun.java.command=net.voicemail.Application, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@50672905, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/home/deepak, spring.boot.project.name=cafeteria-ordering-system, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/usr/local/jdk-13.0.2, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, hibernate.hbm2ddl.auto=validate, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=deepak, path.separator=:, os.version=5.3.0-40-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/tmp, catalina.home=/tmp/tomcat.11206201702452102241.8080, java.version=13.0.2, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/home/deepak/Work/COS/extended-cafeteria-ordering-system, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=15413, catalina.base=/tmp/tomcat.11206201702452102241.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@430d3021, java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=57.0} (SessionFactoryImpl.java, line 263)
02.03.2020 17:20:32 *DEBUG* DefaultTraversableResolver: Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver (DefaultTraversableResolver.java, line 103)
02.03.2020 17:20:32 *DEBUG* DefaultTraversableResolver: Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. (DefaultTraversableResolver.java, line 114)
02.03.2020 17:20:32 *DEBUG* ValidationXmlParser: Trying to load META-INF/validation.xml for XML based Validator configuration. (ValidationXmlParser.java, line 130)
02.03.2020 17:20:32 *DEBUG* ResourceLoaderHelper: Trying to load META-INF/validation.xml via TCCL (ResourceLoaderHelper.java, line 58)
02.03.2020 17:20:32 *DEBUG* ResourceLoaderHelper: Trying to load META-INF/validation.xml via Hibernate Validator's class loader (ResourceLoaderHelper.java, line 64)
02.03.2020 17:20:32 *DEBUG* ValidationXmlParser: No META-INF/validation.xml found. Using annotation based configuration only. (ValidationXmlParser.java, line 137)
02.03.2020 17:20:32 *DEBUG* ResourceBundleMessageInterpolator: Loaded expression factory via original TCCL (ResourceBundleMessageInterpolator.java, line 88)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.Mail] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.Mail (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.User] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.User (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.UserMailMap] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.UserMailMap (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:20:32 *DEBUG* JaccIntegrator: Skipping JACC integration as it was not enabled (JaccIntegrator.java, line 80)
02.03.2020 17:20:32 *DEBUG* SessionFactoryImpl: Instantiated session factory (SessionFactoryImpl.java, line 302)
02.03.2020 17:20:32 *DEBUG* TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@249b54af] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@70439c3] (TypeConfiguration.java, line 157)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.Mail] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.Mail (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.Mail] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.Mail (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.User] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.User (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.User] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.User (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.UserMailMap] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.UserMailMap (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.UserMailMap] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:20:32 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.UserMailMap (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:20:32 *DEBUG* AbstractEntityPersister: Static SQL for entity: net.voicemail.mail.entity.Mail (AbstractEntityPersister.java, line 3818)
02.03.2020 17:20:32 *DEBUG* AbstractEntityPersister:  Version select: select mail_id from voicemail.mail where mail_id =? (AbstractEntityPersister.java, line 3823)
02.03.2020 17:20:32 *DEBUG* AbstractEntityPersister:  Snapshot select: select mail_.mail_id, mail_.mail_created_date as mail_cre2_0_, mail_.mail_from as mail_fro3_0_, mail_.mail_modified_date as mail_mod4_0_, mail_.mail_status as mail_sta5_0_, mail_.mail_subject_name as mail_sub6_0_, mail_.mail_to as mail_to7_0_ from voicemail.mail mail_ where mail_.mail_id=? (AbstractEntityPersister.java, line 3826)
02.03.2020 17:20:32 *DEBUG* AbstractEntityPersister:  Insert 0: insert into voicemail.mail (mail_created_date, mail_from, mail_modified_date, mail_status, mail_subject_name, mail_to, mail_id) values (?, ?, ?, ?, ?, ?, ?) (DelegatingBasicLogger.java, line 394)
02.03.2020 17:20:32 *DEBUG* AbstractEntityPersister:  Update 0: update voicemail.mail set mail_created_date=?, mail_from=?, mail_modified_date=?, mail_status=?, mail_subject_name=?, mail_to=? where mail_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:20:32 *DEBUG* AbstractEntityPersister:  Delete 0: delete from voicemail.mail where mail_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:20:32 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e3ffd0] (QuerySpacesImpl.java, line 174)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailCreatedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailFrom (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailModifiedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailStatus (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailSubjectName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailTo (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:20:32 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:20:32 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.Mail)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.Mail, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.Mail)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.Mail)
          - SQL table alias mapping - mail0_
          - alias suffix - 0_
          - suffixed key columns - {mail_id1_0_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:20:32 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.Mail [NONE]: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (EntityLoader.java, line 137)
02.03.2020 17:20:32 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6796a873] (QuerySpacesImpl.java, line 174)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailCreatedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailFrom (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailModifiedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailStatus (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailSubjectName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailTo (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:20:32 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:20:32 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.Mail)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.Mail, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.Mail)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.Mail)
          - SQL table alias mapping - mail0_
          - alias suffix - 0_
          - suffixed key columns - {mail_id1_0_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:20:32 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.Mail [READ]: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (EntityLoader.java, line 137)
02.03.2020 17:20:32 *DEBUG* Loader: Static select for action ACTION_MERGE on entity net.voicemail.mail.entity.Mail: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:20:32 *DEBUG* Loader: Static select for action ACTION_REFRESH on entity net.voicemail.mail.entity.Mail: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:20:32 *DEBUG* AbstractEntityPersister: Static SQL for entity: net.voicemail.mail.entity.User (AbstractEntityPersister.java, line 3818)
02.03.2020 17:20:32 *DEBUG* AbstractEntityPersister:  Version select: select user_id from voicemail.user where user_id =? (AbstractEntityPersister.java, line 3823)
02.03.2020 17:20:32 *DEBUG* AbstractEntityPersister:  Snapshot select: select user_.user_id, user_.user_email as user_ema2_1_, user_.user_name as user_nam3_1_, user_.user_password as user_pas4_1_, user_.user_phone_number as user_pho5_1_ from voicemail.user user_ where user_.user_id=? (AbstractEntityPersister.java, line 3826)
02.03.2020 17:20:32 *DEBUG* AbstractEntityPersister:  Insert 0: insert into voicemail.user (user_email, user_name, user_password, user_phone_number, user_id) values (?, ?, ?, ?, ?) (DelegatingBasicLogger.java, line 394)
02.03.2020 17:20:32 *DEBUG* AbstractEntityPersister:  Update 0: update voicemail.user set user_email=?, user_name=?, user_password=?, user_phone_number=? where user_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:20:32 *DEBUG* AbstractEntityPersister:  Delete 0: delete from voicemail.user where user_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:20:32 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@625db0e0] (QuerySpacesImpl.java, line 174)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:20:32 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:20:32 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.User)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:20:32 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (EntityLoader.java, line 137)
02.03.2020 17:20:32 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1805ca5c] (QuerySpacesImpl.java, line 174)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:20:32 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:20:32 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.User)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:20:32 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (EntityLoader.java, line 137)
02.03.2020 17:20:32 *DEBUG* Loader: Static select for action ACTION_MERGE on entity net.voicemail.mail.entity.User: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:20:32 *DEBUG* Loader: Static select for action ACTION_REFRESH on entity net.voicemail.mail.entity.User: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:20:32 *DEBUG* AbstractEntityPersister: Static SQL for entity: net.voicemail.mail.entity.UserMailMap (AbstractEntityPersister.java, line 3818)
02.03.2020 17:20:32 *DEBUG* AbstractEntityPersister:  Version select: select user_mail_map_id from voicemail.user_mail_map where user_mail_map_id =? (AbstractEntityPersister.java, line 3823)
02.03.2020 17:20:32 *DEBUG* AbstractEntityPersister:  Snapshot select: select usermailma_.user_mail_map_id, usermailma_.mail_id as mail_id2_2_, usermailma_.user_id as user_id3_2_ from voicemail.user_mail_map usermailma_ where usermailma_.user_mail_map_id=? (AbstractEntityPersister.java, line 3826)
02.03.2020 17:20:32 *DEBUG* AbstractEntityPersister:  Insert 0: insert into voicemail.user_mail_map (mail_id, user_id, user_mail_map_id) values (?, ?, ?) (DelegatingBasicLogger.java, line 394)
02.03.2020 17:20:32 *DEBUG* AbstractEntityPersister:  Update 0: update voicemail.user_mail_map set mail_id=?, user_id=? where user_mail_map_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:20:32 *DEBUG* AbstractEntityPersister:  Delete 0: delete from voicemail.user_mail_map where user_mail_map_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:20:32 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3134b261] (QuerySpacesImpl.java, line 174)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailId (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33f81280] (QuerySpacesImpl.java, line 174)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:20:32 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:20:32 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.UserMailMap)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.UserMailMap, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.UserMailMap)
          - EntityAttributeFetchImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:1>, path=net.voicemail.mail.entity.UserMailMap.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.UserMailMap)
          - SQL table alias mapping - usermailma0_
          - alias suffix - 0_
          - suffixed key columns - {user_mai1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=net.voicemail.mail.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:20:32 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.UserMailMap [NONE]: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_, user1_.user_id as user_id1_1_1_, user1_.user_email as user_ema2_1_1_, user1_.user_name as user_nam3_1_1_, user1_.user_password as user_pas4_1_1_, user1_.user_phone_number as user_pho5_1_1_ from voicemail.user_mail_map usermailma0_ left outer join voicemail.user user1_ on usermailma0_.user_id=user1_.user_id where usermailma0_.user_mail_map_id=? (EntityLoader.java, line 137)
02.03.2020 17:20:32 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19d76106] (QuerySpacesImpl.java, line 174)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailId (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ba318c2] (QuerySpacesImpl.java, line 174)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:20:32 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:20:32 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:20:32 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.UserMailMap)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.UserMailMap, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.UserMailMap)
          - EntityAttributeFetchImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:1>, path=net.voicemail.mail.entity.UserMailMap.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.UserMailMap)
          - SQL table alias mapping - usermailma0_
          - alias suffix - 0_
          - suffixed key columns - {user_mai1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=net.voicemail.mail.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:20:32 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.UserMailMap [READ]: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_, user1_.user_id as user_id1_1_1_, user1_.user_email as user_ema2_1_1_, user1_.user_name as user_nam3_1_1_, user1_.user_password as user_pas4_1_1_, user1_.user_phone_number as user_pho5_1_1_ from voicemail.user_mail_map usermailma0_ left outer join voicemail.user user1_ on usermailma0_.user_id=user1_.user_id where usermailma0_.user_mail_map_id=? (EntityLoader.java, line 137)
02.03.2020 17:20:32 *DEBUG* Loader: Static select for action ACTION_MERGE on entity net.voicemail.mail.entity.UserMailMap: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_ from voicemail.user_mail_map usermailma0_ where usermailma0_.user_mail_map_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:20:32 *DEBUG* Loader: Static select for action ACTION_REFRESH on entity net.voicemail.mail.entity.UserMailMap: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_ from voicemail.user_mail_map usermailma0_ where usermailma0_.user_mail_map_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:20:32 *DEBUG* SessionFactoryImpl: HHH000031: Closing (SessionFactoryImpl.java, line 812)
02.03.2020 17:20:32 *DEBUG* SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1700d089 (SessionFactoryRegistry.java, line 52)
02.03.2020 17:20:32 *DEBUG* TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@77e6053] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@70439c3] (TypeConfiguration.java, line 350)
02.03.2020 17:20:32 *DEBUG* AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries (AbstractServiceRegistryImpl.java, line 419)
02.03.2020 17:20:32 *DEBUG* BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries (BootstrapServiceRegistryImpl.java, line 295)
02.03.2020 17:21:24 *INFO * Application: Starting Application on Deepak with PID 15541 (/home/deepak/Work/COS/extended-cafeteria-ordering-system/target/classes started by deepak in /home/deepak/Work/COS/extended-cafeteria-ordering-system) (StartupInfoLogger.java, line 55)
02.03.2020 17:21:24 *DEBUG* Application: Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE (StartupInfoLogger.java, line 56)
02.03.2020 17:21:24 *INFO * Application: No active profile set, falling back to default profiles: default (SpringApplication.java, line 651)
02.03.2020 17:21:26 *DEBUG* LogHelper: PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@5bc2b487
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/deepak/Work/COS/extended-cafeteria-ordering-system/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		net.voicemail.mail.entity.Mail
		net.voicemail.mail.entity.User
		net.voicemail.mail.entity.UserMailMap]
	Mapping files names []
	Properties [] (LogHelper.java, line 102)
02.03.2020 17:21:26 *DEBUG* IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. (IntegratorServiceImpl.java, line 46)
02.03.2020 17:21:26 *DEBUG* IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. (IntegratorServiceImpl.java, line 46)
02.03.2020 17:21:26 *DEBUG* IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. (IntegratorServiceImpl.java, line 46)
02.03.2020 17:21:26 *INFO * Version: HHH000412: Hibernate Core {5.4.9.Final} (Version.java, line 46)
02.03.2020 17:21:26 *DEBUG* Environment: HHH000206: hibernate.properties not found (Environment.java, line 199)
02.03.2020 17:21:26 *DEBUG* ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService] (ServiceBinding.java, line 68)
02.03.2020 17:21:26 *DEBUG* RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered (RegionFactoryInitiator.java, line 118)
02.03.2020 17:21:26 *DEBUG* RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory (RegionFactoryInitiator.java, line 49)
02.03.2020 17:21:26 *INFO * Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final} (JavaReflectionManager.java, line 49)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@4c24f3a2 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@4c24f3a2 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4c24f3a2 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@27c53c32 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@134a8ead (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@e0d1dc4 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@130a6eb9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@130a6eb9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@130a6eb9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@6ef4cbe1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@6ef4cbe1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6ef4cbe1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@120df990 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@120df990 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@120df990 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@20a3e10c (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@20a3e10c (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20a3e10c (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@73d62b5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@73d62b5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d62b5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@4466cf5d (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@4466cf5d (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4466cf5d (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@71b97eeb (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@71b97eeb (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71b97eeb (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@478967eb (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@478967eb (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@164d01ba (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@164d01ba (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@259287ac (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@259287ac (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@dada335 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@105db94d (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@440ef8d (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@440ef8d (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@5e9bf744 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5e9bf744 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@2b441e56 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2b441e56 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4f213a2 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4f213a2 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@28daf506 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@28daf506 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21d9cd04 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21d9cd04 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@642c6461 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@642c6461 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@49cc9b2a (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@49cc9b2a (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@26a4f9ed (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@26a4f9ed (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@4f5c30b1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f5c30b1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@681de87f (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@681de87f (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@370c7cc5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@370c7cc5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@370c7cc5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@a056b26 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5c82031b (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5c82031b (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5c82031b (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3ffd4b12 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@6793f752 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6793f752 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@633ddc0c (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@633ddc0c (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@54895681 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@54895681 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@7f12094d (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7f12094d (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@8eb6f9a (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@8eb6f9a (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ef7fa1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@57a667c8 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@57a667c8 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@57a667c8 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4861cca9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4861cca9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4861cca9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@1132baa3 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@7661e474 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@7772d266 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@7772d266 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@7772d266 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6cdbe5ec (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6cdbe5ec (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6cdbe5ec (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@66020d69 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@63124022 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13e00016 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13e00016 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e4395c (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@56b1e527 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@56b1e527 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@350ff014 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@350ff014 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1201769d (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@22048bd6 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b5c134e (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@375084c9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@375084c9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@38c460e8 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7a814310 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4bbf38b8 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4e67cfe1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55bf35e5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@25567581 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@179ee36b (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@67763ebe (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BootstrapContextImpl: Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3a38e4dc] into BootstrapContext; was [null] (BootstrapContextImpl.java, line 262)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3a38e4dc) [was null] (ClassLoaderAccessImpl.java, line 45)
02.03.2020 17:21:26 *DEBUG* BootstrapContextImpl: Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5f56424d] into BootstrapContext; was [null] (BootstrapContextImpl.java, line 272)
02.03.2020 17:21:26 *DEBUG* BootstrapContextImpl: Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@237b2852] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@448cdb47] (BootstrapContextImpl.java, line 267)
02.03.2020 17:21:26 *DEBUG* BootstrapContextImpl: Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3a38e4dc] (BootstrapContextImpl.java, line 262)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3a38e4dc] (ClassLoaderAccessImpl.java, line 45)
02.03.2020 17:21:26 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:21:26 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:21:26 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:21:26 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:21:26 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:21:26 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:21:26 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:21:26 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:21:26 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:21:26 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:21:26 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:21:26 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:21:26 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:21:26 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:21:26 *DEBUG* JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 9.6.8
      major : 9
      minor : 6 (JdbcEnvironmentInitiator.java, line 72)
02.03.2020 17:21:26 *DEBUG* JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.4.1211
      major : 9
      minor : 4 (JdbcEnvironmentInitiator.java, line 83)
02.03.2020 17:21:26 *DEBUG* JdbcEnvironmentInitiator: JDBC version : 4.0 (DelegatingBasicLogger.java, line 389)
02.03.2020 17:21:26 *INFO * Dialect: HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL95Dialect (Dialect.java, line 172)
02.03.2020 17:21:26 *DEBUG* IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case (IdentifierHelperBuilder.java, line 108)
02.03.2020 17:21:26 *DEBUG* Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] (Namespace.java, line 51)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@39851c5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@39851c5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:21:26 *DEBUG* BasicTypeRegistry: HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@8eb6f9a (BasicTypeRegistry.java, line 159)
02.03.2020 17:21:26 *DEBUG* TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@416a4275] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7bf65e0f] (TypeConfiguration.java, line 152)
02.03.2020 17:21:26 *DEBUG* AnnotationBinder: Binding entity from annotated class: net.voicemail.mail.entity.Mail (AnnotationBinder.java, line 557)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* EntityBinder: Import with entity name Mail (EntityBinder.java, line 430)
02.03.2020 17:21:26 *DEBUG* Namespace: Created database namespace [logicalName=Name{catalog=null, schema=voicemail}, physicalName=Name{catalog=null, schema=voicemail}] (Namespace.java, line 51)
02.03.2020 17:21:26 *DEBUG* EntityBinder: Bind entity net.voicemail.mail.entity.Mail on table mail (EntityBinder.java, line 873)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_id, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:21:26 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: building SimpleValue for mailId (SimpleValueBinder.java, line 411)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: Building property mailId (PropertyBinder.java, line 266)
02.03.2020 17:21:26 *DEBUG* BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(mail_id)]), mailId, org.hibernate.id.enhanced.SequenceStyleGenerator, seq_gen, ...) (BinderHelper.java, line 644)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_created_date, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailCreatedDate with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:21:26 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailCreatedDate] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: building SimpleValue for mailCreatedDate (SimpleValueBinder.java, line 411)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: Building property mailCreatedDate (PropertyBinder.java, line 266)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_from, insertable=true, updatable=true, unique=true} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailFrom with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:21:26 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailFrom] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: building SimpleValue for mailFrom (SimpleValueBinder.java, line 411)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: Building property mailFrom (PropertyBinder.java, line 266)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_modified_date, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailModifiedDate with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:21:26 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailModifiedDate] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: building SimpleValue for mailModifiedDate (SimpleValueBinder.java, line 411)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: Building property mailModifiedDate (PropertyBinder.java, line 266)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_status, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailStatus with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:21:26 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailStatus] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: building SimpleValue for mailStatus (SimpleValueBinder.java, line 411)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: Building property mailStatus (PropertyBinder.java, line 266)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_subject_name, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailSubjectName with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:21:26 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailSubjectName] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: building SimpleValue for mailSubjectName (SimpleValueBinder.java, line 411)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: Building property mailSubjectName (PropertyBinder.java, line 266)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_to, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailTo with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:21:26 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailTo] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: building SimpleValue for mailTo (SimpleValueBinder.java, line 411)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: Building property mailTo (PropertyBinder.java, line 266)
02.03.2020 17:21:26 *DEBUG* AnnotationBinder: Binding entity from annotated class: net.voicemail.mail.entity.User (AnnotationBinder.java, line 557)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* EntityBinder: Import with entity name User (EntityBinder.java, line 430)
02.03.2020 17:21:26 *DEBUG* EntityBinder: Bind entity net.voicemail.mail.entity.User on table user (EntityBinder.java, line 873)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_id, insertable=true, updatable=true, unique=true} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: MetadataSourceProcessor property userId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:21:26 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: building SimpleValue for userId (SimpleValueBinder.java, line 411)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: Building property userId (PropertyBinder.java, line 266)
02.03.2020 17:21:26 *DEBUG* BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, user_id_generator, ...) (BinderHelper.java, line 644)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_email, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: MetadataSourceProcessor property userEmail with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:21:26 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userEmail] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: building SimpleValue for userEmail (SimpleValueBinder.java, line 411)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: Building property userEmail (PropertyBinder.java, line 266)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_name, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: MetadataSourceProcessor property userName with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:21:26 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userName] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: building SimpleValue for userName (SimpleValueBinder.java, line 411)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: Building property userName (PropertyBinder.java, line 266)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_password, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: MetadataSourceProcessor property userPassword with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:21:26 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userPassword] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: building SimpleValue for userPassword (SimpleValueBinder.java, line 411)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: Building property userPassword (PropertyBinder.java, line 266)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_phone_number, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: MetadataSourceProcessor property userPhoneNumber with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:21:26 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userPhoneNumber] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: building SimpleValue for userPhoneNumber (SimpleValueBinder.java, line 411)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: Building property userPhoneNumber (PropertyBinder.java, line 266)
02.03.2020 17:21:26 *DEBUG* AnnotationBinder: Binding entity from annotated class: net.voicemail.mail.entity.UserMailMap (AnnotationBinder.java, line 557)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* EntityBinder: Import with entity name UserMailMap (EntityBinder.java, line 430)
02.03.2020 17:21:26 *DEBUG* EntityBinder: Bind entity net.voicemail.mail.entity.UserMailMap on table user_mail_map (EntityBinder.java, line 873)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user_mail_map), mappingColumn=user_mail_map_id, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: MetadataSourceProcessor property userMailMapId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:21:26 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.UserMailMap:userMailMapId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: building SimpleValue for userMailMapId (SimpleValueBinder.java, line 411)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: Building property userMailMapId (PropertyBinder.java, line 266)
02.03.2020 17:21:26 *WARN * InFlightMetadataCollectorImpl: HHH000069: Duplicate generator name seq_gen (InFlightMetadataCollectorImpl.java, line 489)
02.03.2020 17:21:26 *DEBUG* BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_mail_map_id)]), userMailMapId, org.hibernate.id.enhanced.SequenceStyleGenerator, seq_gen, ...) (BinderHelper.java, line 644)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user_mail_map), mappingColumn=mail_id, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:21:26 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.UserMailMap:mailId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: building SimpleValue for mailId (SimpleValueBinder.java, line 411)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: Building property mailId (PropertyBinder.java, line 266)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user_mail_map), mappingColumn=user, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:21:26 *DEBUG* PropertyBinder: Building property user (PropertyBinder.java, line 266)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailId (SimpleValueBinder.java, line 456)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailCreatedDate (SimpleValueBinder.java, line 456)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailFrom (SimpleValueBinder.java, line 456)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailModifiedDate (SimpleValueBinder.java, line 456)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailStatus (SimpleValueBinder.java, line 456)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailSubjectName (SimpleValueBinder.java, line 456)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailTo (SimpleValueBinder.java, line 456)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userId (SimpleValueBinder.java, line 456)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userEmail (SimpleValueBinder.java, line 456)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userName (SimpleValueBinder.java, line 456)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userPassword (SimpleValueBinder.java, line 456)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userPhoneNumber (SimpleValueBinder.java, line 456)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userMailMapId (SimpleValueBinder.java, line 456)
02.03.2020 17:21:26 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailId (SimpleValueBinder.java, line 456)
02.03.2020 17:21:26 *DEBUG* PrimaryKey: Forcing column [mail_id] to be non-null as it is part of the primary key for table [mail] (PrimaryKey.java, line 35)
02.03.2020 17:21:26 *DEBUG* PrimaryKey: Forcing column [user_id] to be non-null as it is part of the primary key for table [user] (PrimaryKey.java, line 35)
02.03.2020 17:21:26 *DEBUG* PrimaryKey: Forcing column [user_mail_map_id] to be non-null as it is part of the primary key for table [user_mail_map] (PrimaryKey.java, line 35)
02.03.2020 17:21:26 *DEBUG* InFlightMetadataCollectorImpl: Resolving reference to class: net.voicemail.mail.entity.User (InFlightMetadataCollectorImpl.java, line 1860)
02.03.2020 17:21:26 *DEBUG* InFlightMetadataCollectorImpl: Resolving reference to class: net.voicemail.mail.entity.User (InFlightMetadataCollectorImpl.java, line 1860)
02.03.2020 17:21:26 *DEBUG* SessionFactoryImpl: Building session factory (SessionFactoryImpl.java, line 207)
02.03.2020 17:21:26 *DEBUG* Settings: SessionFactory name : null (Settings.java, line 68)
02.03.2020 17:21:26 *DEBUG* Settings: Automatic flush during beforeCompletion(): enabled (Settings.java, line 69)
02.03.2020 17:21:26 *DEBUG* Settings: Automatic session close at end of transaction: disabled (Settings.java, line 70)
02.03.2020 17:21:26 *DEBUG* Settings: Statistics: disabled (Settings.java, line 72)
02.03.2020 17:21:26 *DEBUG* Settings: Deleted entity synthetic identifier rollback: disabled (Settings.java, line 74)
02.03.2020 17:21:26 *DEBUG* Settings: Default entity-mode: pojo (Settings.java, line 75)
02.03.2020 17:21:26 *DEBUG* Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled (Settings.java, line 76)
02.03.2020 17:21:26 *DEBUG* Settings: Allow initialization of lazy state outside session : disabled (Settings.java, line 77)
02.03.2020 17:21:26 *DEBUG* Settings: Using BatchFetchStyle : LEGACY (Settings.java, line 79)
02.03.2020 17:21:26 *DEBUG* Settings: Default batch fetch size: -1 (Settings.java, line 80)
02.03.2020 17:21:26 *DEBUG* Settings: Maximum outer join fetch depth: null (Settings.java, line 81)
02.03.2020 17:21:26 *DEBUG* Settings: Default null ordering: NONE (Settings.java, line 82)
02.03.2020 17:21:26 *DEBUG* Settings: Order SQL updates by primary key: disabled (Settings.java, line 83)
02.03.2020 17:21:26 *DEBUG* Settings: Order SQL inserts for batching: disabled (Settings.java, line 84)
02.03.2020 17:21:26 *DEBUG* Settings: multi-tenancy strategy : NONE (Settings.java, line 86)
02.03.2020 17:21:26 *DEBUG* Settings: JTA Track by Thread: enabled (Settings.java, line 88)
02.03.2020 17:21:26 *DEBUG* Settings: Query language substitutions: {} (Settings.java, line 90)
02.03.2020 17:21:26 *DEBUG* Settings: Named query checking : enabled (Settings.java, line 91)
02.03.2020 17:21:26 *DEBUG* Settings: Second-level cache: disabled (Settings.java, line 93)
02.03.2020 17:21:26 *DEBUG* Settings: Second-level query cache: disabled (Settings.java, line 94)
02.03.2020 17:21:26 *DEBUG* Settings: Second-level query cache factory: null (Settings.java, line 95)
02.03.2020 17:21:26 *DEBUG* Settings: Second-level cache region prefix: null (Settings.java, line 96)
02.03.2020 17:21:26 *DEBUG* Settings: Optimize second-level cache for minimal puts: disabled (Settings.java, line 97)
02.03.2020 17:21:26 *DEBUG* Settings: Structured second-level cache entries: disabled (Settings.java, line 98)
02.03.2020 17:21:26 *DEBUG* Settings: Second-level cache direct-reference entries: disabled (Settings.java, line 99)
02.03.2020 17:21:26 *DEBUG* Settings: Automatic eviction of collection cache: disabled (Settings.java, line 100)
02.03.2020 17:21:26 *DEBUG* Settings: JDBC batch size: 15 (Settings.java, line 102)
02.03.2020 17:21:26 *DEBUG* Settings: JDBC batch updates for versioned data: enabled (Settings.java, line 103)
02.03.2020 17:21:26 *DEBUG* Settings: Scrollable result sets: enabled (Settings.java, line 104)
02.03.2020 17:21:26 *DEBUG* Settings: Wrap result sets: disabled (Settings.java, line 105)
02.03.2020 17:21:26 *DEBUG* Settings: JDBC3 getGeneratedKeys(): enabled (Settings.java, line 106)
02.03.2020 17:21:26 *DEBUG* Settings: JDBC result set fetch size: null (Settings.java, line 107)
02.03.2020 17:21:26 *DEBUG* Settings: Connection release mode: ON_CLOSE (Settings.java, line 108)
02.03.2020 17:21:26 *DEBUG* Settings: Generate SQL with comments: disabled (Settings.java, line 109)
02.03.2020 17:21:26 *DEBUG* Settings: JPA compliance - query :  (Settings.java, line 111)
02.03.2020 17:21:26 *DEBUG* Settings: JPA compliance - closed-handling :  (Settings.java, line 112)
02.03.2020 17:21:26 *DEBUG* Settings: JPA compliance - lists :  (Settings.java, line 113)
02.03.2020 17:21:26 *DEBUG* Settings: JPA compliance - transactions :  (Settings.java, line 114)
02.03.2020 17:21:26 *DEBUG* SessionFactoryImpl: Session factory constructed with filter configurations : {} (SessionFactoryImpl.java, line 262)
02.03.2020 17:21:26 *DEBUG* SessionFactoryImpl: Instantiating session factory with properties: {hibernate.id.new_generator_mappings=true, java.specification.version=13, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@30a01dd8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/home/deepak/Work/COS/extended-cafeteria-ordering-system/target/classes:/home/deepak/.m2/repository/org/postgresql/postgresql/9.4.1211/postgresql-9.4.1211.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.2.2.RELEASE/spring-boot-starter-data-jpa-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.2.2.RELEASE/spring-boot-starter-aop-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-aop/5.2.2.RELEASE/spring-aop-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/aspectj/aspectjweaver/1.9.5/aspectjweaver-1.9.5.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.2.2.RELEASE/spring-boot-starter-jdbc-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/com/zaxxer/HikariCP/3.4.1/HikariCP-3.4.1.jar:/home/deepak/.m2/repository/org/springframework/spring-jdbc/5.2.2.RELEASE/spring-jdbc-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/home/deepak/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/home/deepak/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/home/deepak/.m2/repository/org/hibernate/hibernate-core/5.4.9.Final/hibernate-core-5.4.9.Final.jar:/home/deepak/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/deepak/.m2/repository/net/bytebuddy/byte-buddy/1.10.2/byte-buddy-1.10.2.jar:/home/deepak/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/deepak/.m2/repository/org/jboss/jandex/2.1.1.Final/jandex-2.1.1.Final.jar:/home/deepak/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/deepak/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/deepak/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/deepak/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/deepak/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/deepak/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/deepak/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/deepak/.m2/repository/org/springframework/data/spring-data-jpa/2.2.3.RELEASE/spring-data-jpa-2.2.3.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/data/spring-data-commons/2.2.3.RELEASE/spring-data-commons-2.2.3.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-orm/5.2.2.RELEASE/spring-orm-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-context/5.2.2.RELEASE/spring-context-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-tx/5.2.2.RELEASE/spring-tx-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-beans/5.2.2.RELEASE/spring-beans-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-aspects/5.2.2.RELEASE/spring-aspects-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter/2.2.2.RELEASE/spring-boot-starter-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot/2.2.2.RELEASE/spring-boot-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.2.2.RELEASE/spring-boot-autoconfigure-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/deepak/.m2/repository/org/springframework/spring-core/5.2.2.RELEASE/spring-core-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-jcl/5.2.2.RELEASE/spring-jcl-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.2.0.RELEASE/spring-boot-starter-web-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.2.0.RELEASE/spring-boot-starter-json-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.10.0/jackson-datatype-jdk8-2.10.0.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.10.0/jackson-datatype-jsr310-2.10.0.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.10.0/jackson-module-parameter-names-2.10.0.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.2.0.RELEASE/spring-boot-starter-tomcat-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.27/tomcat-embed-core-9.0.27.jar:/home/deepak/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.27/tomcat-embed-el-9.0.27.jar:/home/deepak/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.27/tomcat-embed-websocket-9.0.27.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.2.0.RELEASE/spring-boot-starter-validation-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.1/jakarta.validation-api-2.0.1.jar:/home/deepak/.m2/repository/org/springframework/spring-web/5.2.0.RELEASE/spring-web-5.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-webmvc/5.2.0.RELEASE/spring-webmvc-5.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-expression/5.2.0.RELEASE/spring-expression-5.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/2.2.2.RELEASE/spring-boot-starter-thymeleaf-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/thymeleaf/thymeleaf-spring5/3.0.11.RELEASE/thymeleaf-spring5-3.0.11.RELEASE.jar:/home/deepak/.m2/repository/org/thymeleaf/thymeleaf/3.0.11.RELEASE/thymeleaf-3.0.11.RELEASE.jar:/home/deepak/.m2/repository/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE.jar:/home/deepak/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/home/deepak/.m2/repository/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.4.RELEASE/thymeleaf-extras-java8time-3.0.4.RELEASE.jar:/home/deepak/.m2/repository/nz/net/ultraq/thymeleaf/thymeleaf-layout-dialect/2.4.1/thymeleaf-layout-dialect-2.4.1.jar:/home/deepak/.m2/repository/nz/net/ultraq/thymeleaf/thymeleaf-expression-processor/1.1.3/thymeleaf-expression-processor-1.1.3.jar:/home/deepak/.m2/repository/org/codehaus/groovy/groovy/2.4.13/groovy-2.4.13.jar:/home/deepak/.m2/repository/org/webjars/bootstrap/4.2.1/bootstrap-4.2.1.jar:/home/deepak/.m2/repository/org/webjars/popper.js/1.14.3/popper.js-1.14.3.jar:/home/deepak/.m2/repository/org/webjars/jquery/3.4.1/jquery-3.4.1.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-log4j2/2.2.2.RELEASE/spring-boot-starter-log4j2-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-jul/2.12.1/log4j-jul-2.12.1.jar:/home/deepak/.m2/repository/org/slf4j/jul-to-slf4j/1.7.29/jul-to-slf4j-1.7.29.jar:/home/deepak/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-apt/4.2.1/querydsl-apt-4.2.1.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-codegen/4.2.1/querydsl-codegen-4.2.1.jar:/home/deepak/.m2/repository/com/mysema/codegen/codegen/0.6.8/codegen-0.6.8.jar:/home/deepak/.m2/repository/org/eclipse/jdt/core/compiler/ecj/4.3.1/ecj-4.3.1.jar:/home/deepak/.m2/repository/org/reflections/reflections/0.9.9/reflections-0.9.9.jar:/home/deepak/.m2/repository/com/google/code/findbugs/annotations/2.0.1/annotations-2.0.1.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-jpa/4.2.1/querydsl-jpa-4.2.1.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-core/4.2.1/querydsl-core-4.2.1.jar:/home/deepak/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar:/home/deepak/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/deepak/.m2/repository/com/mysema/commons/mysema-commons-lang/0.2.4/mysema-commons-lang-0.2.4.jar:/home/deepak/.m2/repository/com/infradna/tool/bridge-method-annotation/1.13/bridge-method-annotation-1.13.jar:/home/deepak/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.2/jackson-databind-2.9.2.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.2/jackson-core-2.9.2.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.5/log4j-slf4j-impl-2.5.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-api/2.5/log4j-api-2.5.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-core/2.5/log4j-core-2.5.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.2/jackson-annotations-2.9.2.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.9.2/jackson-dataformat-yaml-2.9.2.jar:/home/deepak/.m2/repository/org/yaml/snakeyaml/1.18/snakeyaml-1.18.jar:/home/deepak/.m2/repository/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar:/home/deepak/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.2.Final/hibernate-validator-6.0.2.Final.jar:/home/deepak/.m2/repository/javax/validation/validation-api/2.0.0.Final/validation-api-2.0.0.Final.jar:/home/deepak/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/deepak/.m2/repository/com/fasterxml/classmate/1.3.1/classmate-1.3.1.jar:/home/deepak/.m2/repository/org/hibernate/validator/hibernate-validator-annotation-processor/6.0.2.Final/hibernate-validator-annotation-processor-6.0.2.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Kolkata, java.vm.specification.version=13, os.name=Linux, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/local/jdk-13.0.2/lib, sun.java.command=net.voicemail.Application, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1f68e4e8, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/home/deepak, spring.boot.project.name=cafeteria-ordering-system, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/usr/local/jdk-13.0.2, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, hibernate.hbm2ddl.auto=validate, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=deepak, path.separator=:, os.version=5.3.0-40-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/tmp, catalina.home=/tmp/tomcat.15637176598903041809.8080, java.version=13.0.2, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/home/deepak/Work/COS/extended-cafeteria-ordering-system, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=15541, catalina.base=/tmp/tomcat.15637176598903041809.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@47b4ac83, java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=57.0} (SessionFactoryImpl.java, line 263)
02.03.2020 17:21:26 *DEBUG* DefaultTraversableResolver: Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver (DefaultTraversableResolver.java, line 103)
02.03.2020 17:21:26 *DEBUG* DefaultTraversableResolver: Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. (DefaultTraversableResolver.java, line 114)
02.03.2020 17:21:26 *DEBUG* ValidationXmlParser: Trying to load META-INF/validation.xml for XML based Validator configuration. (ValidationXmlParser.java, line 130)
02.03.2020 17:21:26 *DEBUG* ResourceLoaderHelper: Trying to load META-INF/validation.xml via TCCL (ResourceLoaderHelper.java, line 58)
02.03.2020 17:21:26 *DEBUG* ResourceLoaderHelper: Trying to load META-INF/validation.xml via Hibernate Validator's class loader (ResourceLoaderHelper.java, line 64)
02.03.2020 17:21:26 *DEBUG* ValidationXmlParser: No META-INF/validation.xml found. Using annotation based configuration only. (ValidationXmlParser.java, line 137)
02.03.2020 17:21:26 *DEBUG* ResourceBundleMessageInterpolator: Loaded expression factory via original TCCL (ResourceBundleMessageInterpolator.java, line 88)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.Mail] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.Mail (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.User] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.User (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.UserMailMap] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.UserMailMap (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:21:26 *DEBUG* JaccIntegrator: Skipping JACC integration as it was not enabled (JaccIntegrator.java, line 80)
02.03.2020 17:21:26 *DEBUG* SessionFactoryImpl: Instantiated session factory (SessionFactoryImpl.java, line 302)
02.03.2020 17:21:26 *DEBUG* TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@416a4275] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3a48c398] (TypeConfiguration.java, line 157)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.Mail] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.Mail (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.Mail] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.Mail (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.User] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.User (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.User] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.User (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.UserMailMap] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.UserMailMap (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.UserMailMap] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:21:26 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.UserMailMap (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:21:26 *DEBUG* AbstractEntityPersister: Static SQL for entity: net.voicemail.mail.entity.Mail (AbstractEntityPersister.java, line 3818)
02.03.2020 17:21:26 *DEBUG* AbstractEntityPersister:  Version select: select mail_id from voicemail.mail where mail_id =? (AbstractEntityPersister.java, line 3823)
02.03.2020 17:21:26 *DEBUG* AbstractEntityPersister:  Snapshot select: select mail_.mail_id, mail_.mail_created_date as mail_cre2_0_, mail_.mail_from as mail_fro3_0_, mail_.mail_modified_date as mail_mod4_0_, mail_.mail_status as mail_sta5_0_, mail_.mail_subject_name as mail_sub6_0_, mail_.mail_to as mail_to7_0_ from voicemail.mail mail_ where mail_.mail_id=? (AbstractEntityPersister.java, line 3826)
02.03.2020 17:21:26 *DEBUG* AbstractEntityPersister:  Insert 0: insert into voicemail.mail (mail_created_date, mail_from, mail_modified_date, mail_status, mail_subject_name, mail_to, mail_id) values (?, ?, ?, ?, ?, ?, ?) (DelegatingBasicLogger.java, line 394)
02.03.2020 17:21:26 *DEBUG* AbstractEntityPersister:  Update 0: update voicemail.mail set mail_created_date=?, mail_from=?, mail_modified_date=?, mail_status=?, mail_subject_name=?, mail_to=? where mail_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:21:26 *DEBUG* AbstractEntityPersister:  Delete 0: delete from voicemail.mail where mail_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:21:26 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25c6ab3f] (QuerySpacesImpl.java, line 174)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailCreatedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailFrom (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailModifiedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailStatus (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailSubjectName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailTo (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:21:26 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:21:26 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.Mail)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.Mail, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.Mail)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.Mail)
          - SQL table alias mapping - mail0_
          - alias suffix - 0_
          - suffixed key columns - {mail_id1_0_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:21:26 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.Mail [NONE]: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (EntityLoader.java, line 137)
02.03.2020 17:21:26 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b5e1fc5] (QuerySpacesImpl.java, line 174)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailCreatedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailFrom (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailModifiedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailStatus (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailSubjectName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailTo (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:21:26 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:21:26 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.Mail)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.Mail, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.Mail)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.Mail)
          - SQL table alias mapping - mail0_
          - alias suffix - 0_
          - suffixed key columns - {mail_id1_0_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:21:26 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.Mail [READ]: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (EntityLoader.java, line 137)
02.03.2020 17:21:26 *DEBUG* Loader: Static select for action ACTION_MERGE on entity net.voicemail.mail.entity.Mail: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:21:26 *DEBUG* Loader: Static select for action ACTION_REFRESH on entity net.voicemail.mail.entity.Mail: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:21:26 *DEBUG* AbstractEntityPersister: Static SQL for entity: net.voicemail.mail.entity.User (AbstractEntityPersister.java, line 3818)
02.03.2020 17:21:26 *DEBUG* AbstractEntityPersister:  Version select: select user_id from voicemail.user where user_id =? (AbstractEntityPersister.java, line 3823)
02.03.2020 17:21:26 *DEBUG* AbstractEntityPersister:  Snapshot select: select user_.user_id, user_.user_email as user_ema2_1_, user_.user_name as user_nam3_1_, user_.user_password as user_pas4_1_, user_.user_phone_number as user_pho5_1_ from voicemail.user user_ where user_.user_id=? (AbstractEntityPersister.java, line 3826)
02.03.2020 17:21:26 *DEBUG* AbstractEntityPersister:  Insert 0: insert into voicemail.user (user_email, user_name, user_password, user_phone_number, user_id) values (?, ?, ?, ?, ?) (DelegatingBasicLogger.java, line 394)
02.03.2020 17:21:26 *DEBUG* AbstractEntityPersister:  Update 0: update voicemail.user set user_email=?, user_name=?, user_password=?, user_phone_number=? where user_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:21:26 *DEBUG* AbstractEntityPersister:  Delete 0: delete from voicemail.user where user_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:21:26 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@405223e4] (QuerySpacesImpl.java, line 174)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:21:26 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:21:26 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.User)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:21:26 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (EntityLoader.java, line 137)
02.03.2020 17:21:26 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58a7a58d] (QuerySpacesImpl.java, line 174)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:21:26 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:21:26 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.User)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:21:26 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (EntityLoader.java, line 137)
02.03.2020 17:21:26 *DEBUG* Loader: Static select for action ACTION_MERGE on entity net.voicemail.mail.entity.User: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:21:26 *DEBUG* Loader: Static select for action ACTION_REFRESH on entity net.voicemail.mail.entity.User: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:21:26 *DEBUG* AbstractEntityPersister: Static SQL for entity: net.voicemail.mail.entity.UserMailMap (AbstractEntityPersister.java, line 3818)
02.03.2020 17:21:26 *DEBUG* AbstractEntityPersister:  Version select: select user_mail_map_id from voicemail.user_mail_map where user_mail_map_id =? (AbstractEntityPersister.java, line 3823)
02.03.2020 17:21:26 *DEBUG* AbstractEntityPersister:  Snapshot select: select usermailma_.user_mail_map_id, usermailma_.mail_id as mail_id2_2_, usermailma_.user_id as user_id3_2_ from voicemail.user_mail_map usermailma_ where usermailma_.user_mail_map_id=? (AbstractEntityPersister.java, line 3826)
02.03.2020 17:21:26 *DEBUG* AbstractEntityPersister:  Insert 0: insert into voicemail.user_mail_map (mail_id, user_id, user_mail_map_id) values (?, ?, ?) (DelegatingBasicLogger.java, line 394)
02.03.2020 17:21:26 *DEBUG* AbstractEntityPersister:  Update 0: update voicemail.user_mail_map set mail_id=?, user_id=? where user_mail_map_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:21:26 *DEBUG* AbstractEntityPersister:  Delete 0: delete from voicemail.user_mail_map where user_mail_map_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:21:26 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c9975a8] (QuerySpacesImpl.java, line 174)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailId (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61becbcf] (QuerySpacesImpl.java, line 174)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:21:26 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:21:26 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.UserMailMap)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.UserMailMap, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.UserMailMap)
          - EntityAttributeFetchImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:1>, path=net.voicemail.mail.entity.UserMailMap.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.UserMailMap)
          - SQL table alias mapping - usermailma0_
          - alias suffix - 0_
          - suffixed key columns - {user_mai1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=net.voicemail.mail.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:21:26 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.UserMailMap [NONE]: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_, user1_.user_id as user_id1_1_1_, user1_.user_email as user_ema2_1_1_, user1_.user_name as user_nam3_1_1_, user1_.user_password as user_pas4_1_1_, user1_.user_phone_number as user_pho5_1_1_ from voicemail.user_mail_map usermailma0_ left outer join voicemail.user user1_ on usermailma0_.user_id=user1_.user_id where usermailma0_.user_mail_map_id=? (EntityLoader.java, line 137)
02.03.2020 17:21:26 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ea43d4d] (QuerySpacesImpl.java, line 174)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailId (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ee095c9] (QuerySpacesImpl.java, line 174)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:21:26 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:21:26 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:21:26 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.UserMailMap)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.UserMailMap, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.UserMailMap)
          - EntityAttributeFetchImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:1>, path=net.voicemail.mail.entity.UserMailMap.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.UserMailMap)
          - SQL table alias mapping - usermailma0_
          - alias suffix - 0_
          - suffixed key columns - {user_mai1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=net.voicemail.mail.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:21:26 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.UserMailMap [READ]: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_, user1_.user_id as user_id1_1_1_, user1_.user_email as user_ema2_1_1_, user1_.user_name as user_nam3_1_1_, user1_.user_password as user_pas4_1_1_, user1_.user_phone_number as user_pho5_1_1_ from voicemail.user_mail_map usermailma0_ left outer join voicemail.user user1_ on usermailma0_.user_id=user1_.user_id where usermailma0_.user_mail_map_id=? (EntityLoader.java, line 137)
02.03.2020 17:21:26 *DEBUG* Loader: Static select for action ACTION_MERGE on entity net.voicemail.mail.entity.UserMailMap: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_ from voicemail.user_mail_map usermailma0_ where usermailma0_.user_mail_map_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:21:26 *DEBUG* Loader: Static select for action ACTION_REFRESH on entity net.voicemail.mail.entity.UserMailMap: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_ from voicemail.user_mail_map usermailma0_ where usermailma0_.user_mail_map_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:21:26 *DEBUG* SessionFactoryImpl: HHH000031: Closing (SessionFactoryImpl.java, line 812)
02.03.2020 17:21:26 *DEBUG* SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@46748b04 (SessionFactoryRegistry.java, line 52)
02.03.2020 17:21:26 *DEBUG* TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3e71a1f8] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3a48c398] (TypeConfiguration.java, line 350)
02.03.2020 17:21:26 *DEBUG* AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries (AbstractServiceRegistryImpl.java, line 419)
02.03.2020 17:21:26 *DEBUG* BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries (BootstrapServiceRegistryImpl.java, line 295)
02.03.2020 17:22:23 *INFO * Application: Starting Application on Deepak with PID 15639 (/home/deepak/Work/COS/extended-cafeteria-ordering-system/target/classes started by deepak in /home/deepak/Work/COS/extended-cafeteria-ordering-system) (StartupInfoLogger.java, line 55)
02.03.2020 17:22:23 *DEBUG* Application: Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE (StartupInfoLogger.java, line 56)
02.03.2020 17:22:23 *INFO * Application: No active profile set, falling back to default profiles: default (SpringApplication.java, line 651)
02.03.2020 17:22:24 *DEBUG* LogHelper: PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@5bc2b487
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/deepak/Work/COS/extended-cafeteria-ordering-system/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		net.voicemail.mail.entity.Mail
		net.voicemail.mail.entity.User
		net.voicemail.mail.entity.UserMailMap]
	Mapping files names []
	Properties [] (LogHelper.java, line 102)
02.03.2020 17:22:24 *DEBUG* IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. (IntegratorServiceImpl.java, line 46)
02.03.2020 17:22:24 *DEBUG* IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. (IntegratorServiceImpl.java, line 46)
02.03.2020 17:22:24 *DEBUG* IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. (IntegratorServiceImpl.java, line 46)
02.03.2020 17:22:24 *INFO * Version: HHH000412: Hibernate Core {5.4.9.Final} (Version.java, line 46)
02.03.2020 17:22:24 *DEBUG* Environment: HHH000206: hibernate.properties not found (Environment.java, line 199)
02.03.2020 17:22:24 *DEBUG* ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService] (ServiceBinding.java, line 68)
02.03.2020 17:22:24 *DEBUG* RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered (RegionFactoryInitiator.java, line 118)
02.03.2020 17:22:24 *DEBUG* RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory (RegionFactoryInitiator.java, line 49)
02.03.2020 17:22:24 *INFO * Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final} (JavaReflectionManager.java, line 49)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@74123110 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@74123110 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@74123110 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5fe46d52 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@3dfd7eaa (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@7cfb8e98 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@6ed18d80 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@6ed18d80 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6ed18d80 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@6aff97d6 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@6aff97d6 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6aff97d6 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@5463f035 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@5463f035 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5463f035 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@130a6eb9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@130a6eb9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@130a6eb9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@6ef4cbe1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@6ef4cbe1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@6ef4cbe1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@120df990 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@120df990 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@120df990 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@20a3e10c (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@20a3e10c (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@20a3e10c (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@73d62b5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@73d62b5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4466cf5d (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4466cf5d (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@71b97eeb (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@71b97eeb (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@49b89425 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4a1dda83 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@18c880ea (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@18c880ea (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@1abcd059 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1abcd059 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@105db94d (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@105db94d (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@440ef8d (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@440ef8d (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e9bf744 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e9bf744 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2b441e56 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2b441e56 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f213a2 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f213a2 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@28daf506 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@28daf506 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@21d9cd04 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@21d9cd04 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@10a907ec (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@10a907ec (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@1894fa9f (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1894fa9f (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@35e74e08 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35e74e08 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35e74e08 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e17442f (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@38087342 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@38087342 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@38087342 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5a4464c5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@5ebbde60 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5ebbde60 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@15a8cebd (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@15a8cebd (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@3ffd4b12 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3ffd4b12 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@6793f752 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6793f752 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@633ddc0c (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@633ddc0c (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58c42c8c (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@214b342f (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@214b342f (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@214b342f (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@37d699a1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@37d699a1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@37d699a1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@23b1aa9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@7c4b5ceb (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@7f6b7426 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@7f6b7426 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@7f6b7426 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6eda012b (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6eda012b (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6eda012b (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@2fdf22f7 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@20ffb8d5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@3e38c472 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e38c472 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@14b8a751 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@55421b8d (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55421b8d (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@17176b18 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@17176b18 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@57b9389f (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@727986ad (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@1aedf08d (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@3d0d120b (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3d0d120b (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@60807fd9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6bcdd6e4 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1192c925 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@615b5480 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24691c5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7b91d9f (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6537ac (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3b218c74 (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:24 *DEBUG* BootstrapContextImpl: Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@11e17893] into BootstrapContext; was [null] (BootstrapContextImpl.java, line 262)
02.03.2020 17:22:24 *DEBUG* ClassLoaderAccessImpl: ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@11e17893) [was null] (ClassLoaderAccessImpl.java, line 45)
02.03.2020 17:22:24 *DEBUG* BootstrapContextImpl: Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7cc2c551] into BootstrapContext; was [null] (BootstrapContextImpl.java, line 272)
02.03.2020 17:22:24 *DEBUG* BootstrapContextImpl: Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@d84b3a2] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@23648d2d] (BootstrapContextImpl.java, line 267)
02.03.2020 17:22:24 *DEBUG* BootstrapContextImpl: Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@11e17893] (BootstrapContextImpl.java, line 262)
02.03.2020 17:22:24 *DEBUG* ClassLoaderAccessImpl: ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@11e17893] (ClassLoaderAccessImpl.java, line 45)
02.03.2020 17:22:24 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:22:24 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:22:24 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:22:24 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:22:24 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:22:24 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:22:24 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:22:24 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:22:24 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:22:24 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:22:24 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:22:24 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:22:24 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:22:24 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:22:24 *DEBUG* JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 9.6.8
      major : 9
      minor : 6 (JdbcEnvironmentInitiator.java, line 72)
02.03.2020 17:22:24 *DEBUG* JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.4.1211
      major : 9
      minor : 4 (JdbcEnvironmentInitiator.java, line 83)
02.03.2020 17:22:24 *DEBUG* JdbcEnvironmentInitiator: JDBC version : 4.0 (DelegatingBasicLogger.java, line 389)
02.03.2020 17:22:24 *INFO * Dialect: HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL95Dialect (Dialect.java, line 172)
02.03.2020 17:22:24 *DEBUG* IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case (IdentifierHelperBuilder.java, line 108)
02.03.2020 17:22:25 *DEBUG* Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] (Namespace.java, line 51)
02.03.2020 17:22:25 *DEBUG* BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3ae2702a (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:25 *DEBUG* BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3ae2702a (BasicTypeRegistry.java, line 156)
02.03.2020 17:22:25 *DEBUG* BasicTypeRegistry: HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@633ddc0c (BasicTypeRegistry.java, line 159)
02.03.2020 17:22:25 *DEBUG* TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7ed8b44] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@21280cbb] (TypeConfiguration.java, line 152)
02.03.2020 17:22:25 *DEBUG* AnnotationBinder: Binding entity from annotated class: net.voicemail.mail.entity.Mail (AnnotationBinder.java, line 557)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* EntityBinder: Import with entity name Mail (EntityBinder.java, line 430)
02.03.2020 17:22:25 *DEBUG* Namespace: Created database namespace [logicalName=Name{catalog=null, schema=voicemail}, physicalName=Name{catalog=null, schema=voicemail}] (Namespace.java, line 51)
02.03.2020 17:22:25 *DEBUG* EntityBinder: Bind entity net.voicemail.mail.entity.Mail on table mail (EntityBinder.java, line 873)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_id, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:22:25 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: building SimpleValue for mailId (SimpleValueBinder.java, line 411)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: Building property mailId (PropertyBinder.java, line 266)
02.03.2020 17:22:25 *DEBUG* BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(mail_id)]), mailId, org.hibernate.id.enhanced.SequenceStyleGenerator, seq_gen, ...) (BinderHelper.java, line 644)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_created_date, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailCreatedDate with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:22:25 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailCreatedDate] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: building SimpleValue for mailCreatedDate (SimpleValueBinder.java, line 411)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: Building property mailCreatedDate (PropertyBinder.java, line 266)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_from, insertable=true, updatable=true, unique=true} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailFrom with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:22:25 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailFrom] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: building SimpleValue for mailFrom (SimpleValueBinder.java, line 411)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: Building property mailFrom (PropertyBinder.java, line 266)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_modified_date, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailModifiedDate with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:22:25 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailModifiedDate] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: building SimpleValue for mailModifiedDate (SimpleValueBinder.java, line 411)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: Building property mailModifiedDate (PropertyBinder.java, line 266)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_status, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailStatus with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:22:25 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailStatus] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: building SimpleValue for mailStatus (SimpleValueBinder.java, line 411)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: Building property mailStatus (PropertyBinder.java, line 266)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_subject_name, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailSubjectName with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:22:25 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailSubjectName] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: building SimpleValue for mailSubjectName (SimpleValueBinder.java, line 411)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: Building property mailSubjectName (PropertyBinder.java, line 266)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_to, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailTo with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:22:25 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailTo] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: building SimpleValue for mailTo (SimpleValueBinder.java, line 411)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: Building property mailTo (PropertyBinder.java, line 266)
02.03.2020 17:22:25 *DEBUG* AnnotationBinder: Binding entity from annotated class: net.voicemail.mail.entity.User (AnnotationBinder.java, line 557)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* EntityBinder: Import with entity name User (EntityBinder.java, line 430)
02.03.2020 17:22:25 *DEBUG* EntityBinder: Bind entity net.voicemail.mail.entity.User on table user (EntityBinder.java, line 873)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_id, insertable=true, updatable=true, unique=true} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: MetadataSourceProcessor property userId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:22:25 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: building SimpleValue for userId (SimpleValueBinder.java, line 411)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: Building property userId (PropertyBinder.java, line 266)
02.03.2020 17:22:25 *DEBUG* BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, user_id_generator, ...) (BinderHelper.java, line 644)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_email, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: MetadataSourceProcessor property userEmail with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:22:25 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userEmail] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: building SimpleValue for userEmail (SimpleValueBinder.java, line 411)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: Building property userEmail (PropertyBinder.java, line 266)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_name, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: MetadataSourceProcessor property userName with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:22:25 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userName] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: building SimpleValue for userName (SimpleValueBinder.java, line 411)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: Building property userName (PropertyBinder.java, line 266)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_password, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: MetadataSourceProcessor property userPassword with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:22:25 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userPassword] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: building SimpleValue for userPassword (SimpleValueBinder.java, line 411)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: Building property userPassword (PropertyBinder.java, line 266)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_phone_number, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: MetadataSourceProcessor property userPhoneNumber with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:22:25 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userPhoneNumber] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: building SimpleValue for userPhoneNumber (SimpleValueBinder.java, line 411)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: Building property userPhoneNumber (PropertyBinder.java, line 266)
02.03.2020 17:22:25 *DEBUG* AnnotationBinder: Binding entity from annotated class: net.voicemail.mail.entity.UserMailMap (AnnotationBinder.java, line 557)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* EntityBinder: Import with entity name UserMailMap (EntityBinder.java, line 430)
02.03.2020 17:22:25 *DEBUG* EntityBinder: Bind entity net.voicemail.mail.entity.UserMailMap on table user_mail_map (EntityBinder.java, line 873)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user_mail_map), mappingColumn=user_mail_map_id, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: MetadataSourceProcessor property userMailMapId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:22:25 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.UserMailMap:userMailMapId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: building SimpleValue for userMailMapId (SimpleValueBinder.java, line 411)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: Building property userMailMapId (PropertyBinder.java, line 266)
02.03.2020 17:22:25 *WARN * InFlightMetadataCollectorImpl: HHH000069: Duplicate generator name seq_gen (InFlightMetadataCollectorImpl.java, line 489)
02.03.2020 17:22:25 *DEBUG* BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_mail_map_id)]), userMailMapId, org.hibernate.id.enhanced.SequenceStyleGenerator, seq_gen, ...) (BinderHelper.java, line 644)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user_mail_map), mappingColumn=mail_id, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:22:25 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.UserMailMap:mailId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: building SimpleValue for mailId (SimpleValueBinder.java, line 411)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: Building property mailId (PropertyBinder.java, line 266)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user_mail_map), mappingColumn=user, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:22:25 *DEBUG* PropertyBinder: Building property user (PropertyBinder.java, line 266)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailId (SimpleValueBinder.java, line 456)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailCreatedDate (SimpleValueBinder.java, line 456)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailFrom (SimpleValueBinder.java, line 456)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailModifiedDate (SimpleValueBinder.java, line 456)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailStatus (SimpleValueBinder.java, line 456)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailSubjectName (SimpleValueBinder.java, line 456)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailTo (SimpleValueBinder.java, line 456)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userId (SimpleValueBinder.java, line 456)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userEmail (SimpleValueBinder.java, line 456)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userName (SimpleValueBinder.java, line 456)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userPassword (SimpleValueBinder.java, line 456)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userPhoneNumber (SimpleValueBinder.java, line 456)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userMailMapId (SimpleValueBinder.java, line 456)
02.03.2020 17:22:25 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailId (SimpleValueBinder.java, line 456)
02.03.2020 17:22:25 *DEBUG* PrimaryKey: Forcing column [mail_id] to be non-null as it is part of the primary key for table [mail] (PrimaryKey.java, line 35)
02.03.2020 17:22:25 *DEBUG* PrimaryKey: Forcing column [user_id] to be non-null as it is part of the primary key for table [user] (PrimaryKey.java, line 35)
02.03.2020 17:22:25 *DEBUG* PrimaryKey: Forcing column [user_mail_map_id] to be non-null as it is part of the primary key for table [user_mail_map] (PrimaryKey.java, line 35)
02.03.2020 17:22:25 *DEBUG* InFlightMetadataCollectorImpl: Resolving reference to class: net.voicemail.mail.entity.User (InFlightMetadataCollectorImpl.java, line 1860)
02.03.2020 17:22:25 *DEBUG* InFlightMetadataCollectorImpl: Resolving reference to class: net.voicemail.mail.entity.User (InFlightMetadataCollectorImpl.java, line 1860)
02.03.2020 17:22:25 *DEBUG* SessionFactoryImpl: Building session factory (SessionFactoryImpl.java, line 207)
02.03.2020 17:22:25 *DEBUG* Settings: SessionFactory name : null (Settings.java, line 68)
02.03.2020 17:22:25 *DEBUG* Settings: Automatic flush during beforeCompletion(): enabled (Settings.java, line 69)
02.03.2020 17:22:25 *DEBUG* Settings: Automatic session close at end of transaction: disabled (Settings.java, line 70)
02.03.2020 17:22:25 *DEBUG* Settings: Statistics: disabled (Settings.java, line 72)
02.03.2020 17:22:25 *DEBUG* Settings: Deleted entity synthetic identifier rollback: disabled (Settings.java, line 74)
02.03.2020 17:22:25 *DEBUG* Settings: Default entity-mode: pojo (Settings.java, line 75)
02.03.2020 17:22:25 *DEBUG* Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled (Settings.java, line 76)
02.03.2020 17:22:25 *DEBUG* Settings: Allow initialization of lazy state outside session : disabled (Settings.java, line 77)
02.03.2020 17:22:25 *DEBUG* Settings: Using BatchFetchStyle : LEGACY (Settings.java, line 79)
02.03.2020 17:22:25 *DEBUG* Settings: Default batch fetch size: -1 (Settings.java, line 80)
02.03.2020 17:22:25 *DEBUG* Settings: Maximum outer join fetch depth: null (Settings.java, line 81)
02.03.2020 17:22:25 *DEBUG* Settings: Default null ordering: NONE (Settings.java, line 82)
02.03.2020 17:22:25 *DEBUG* Settings: Order SQL updates by primary key: disabled (Settings.java, line 83)
02.03.2020 17:22:25 *DEBUG* Settings: Order SQL inserts for batching: disabled (Settings.java, line 84)
02.03.2020 17:22:25 *DEBUG* Settings: multi-tenancy strategy : NONE (Settings.java, line 86)
02.03.2020 17:22:25 *DEBUG* Settings: JTA Track by Thread: enabled (Settings.java, line 88)
02.03.2020 17:22:25 *DEBUG* Settings: Query language substitutions: {} (Settings.java, line 90)
02.03.2020 17:22:25 *DEBUG* Settings: Named query checking : enabled (Settings.java, line 91)
02.03.2020 17:22:25 *DEBUG* Settings: Second-level cache: disabled (Settings.java, line 93)
02.03.2020 17:22:25 *DEBUG* Settings: Second-level query cache: disabled (Settings.java, line 94)
02.03.2020 17:22:25 *DEBUG* Settings: Second-level query cache factory: null (Settings.java, line 95)
02.03.2020 17:22:25 *DEBUG* Settings: Second-level cache region prefix: null (Settings.java, line 96)
02.03.2020 17:22:25 *DEBUG* Settings: Optimize second-level cache for minimal puts: disabled (Settings.java, line 97)
02.03.2020 17:22:25 *DEBUG* Settings: Structured second-level cache entries: disabled (Settings.java, line 98)
02.03.2020 17:22:25 *DEBUG* Settings: Second-level cache direct-reference entries: disabled (Settings.java, line 99)
02.03.2020 17:22:25 *DEBUG* Settings: Automatic eviction of collection cache: disabled (Settings.java, line 100)
02.03.2020 17:22:25 *DEBUG* Settings: JDBC batch size: 15 (Settings.java, line 102)
02.03.2020 17:22:25 *DEBUG* Settings: JDBC batch updates for versioned data: enabled (Settings.java, line 103)
02.03.2020 17:22:25 *DEBUG* Settings: Scrollable result sets: enabled (Settings.java, line 104)
02.03.2020 17:22:25 *DEBUG* Settings: Wrap result sets: disabled (Settings.java, line 105)
02.03.2020 17:22:25 *DEBUG* Settings: JDBC3 getGeneratedKeys(): enabled (Settings.java, line 106)
02.03.2020 17:22:25 *DEBUG* Settings: JDBC result set fetch size: null (Settings.java, line 107)
02.03.2020 17:22:25 *DEBUG* Settings: Connection release mode: ON_CLOSE (Settings.java, line 108)
02.03.2020 17:22:25 *DEBUG* Settings: Generate SQL with comments: disabled (Settings.java, line 109)
02.03.2020 17:22:25 *DEBUG* Settings: JPA compliance - query :  (Settings.java, line 111)
02.03.2020 17:22:25 *DEBUG* Settings: JPA compliance - closed-handling :  (Settings.java, line 112)
02.03.2020 17:22:25 *DEBUG* Settings: JPA compliance - lists :  (Settings.java, line 113)
02.03.2020 17:22:25 *DEBUG* Settings: JPA compliance - transactions :  (Settings.java, line 114)
02.03.2020 17:22:25 *DEBUG* SessionFactoryImpl: Session factory constructed with filter configurations : {} (SessionFactoryImpl.java, line 262)
02.03.2020 17:22:25 *DEBUG* SessionFactoryImpl: Instantiating session factory with properties: {hibernate.id.new_generator_mappings=true, java.specification.version=13, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7bda01da, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/home/deepak/Work/COS/extended-cafeteria-ordering-system/target/classes:/home/deepak/.m2/repository/org/postgresql/postgresql/9.4.1211/postgresql-9.4.1211.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.2.2.RELEASE/spring-boot-starter-data-jpa-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.2.2.RELEASE/spring-boot-starter-aop-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-aop/5.2.2.RELEASE/spring-aop-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/aspectj/aspectjweaver/1.9.5/aspectjweaver-1.9.5.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.2.2.RELEASE/spring-boot-starter-jdbc-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/com/zaxxer/HikariCP/3.4.1/HikariCP-3.4.1.jar:/home/deepak/.m2/repository/org/springframework/spring-jdbc/5.2.2.RELEASE/spring-jdbc-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/home/deepak/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/home/deepak/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/home/deepak/.m2/repository/org/hibernate/hibernate-core/5.4.9.Final/hibernate-core-5.4.9.Final.jar:/home/deepak/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/deepak/.m2/repository/net/bytebuddy/byte-buddy/1.10.2/byte-buddy-1.10.2.jar:/home/deepak/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/deepak/.m2/repository/org/jboss/jandex/2.1.1.Final/jandex-2.1.1.Final.jar:/home/deepak/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/deepak/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/deepak/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/deepak/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/deepak/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/deepak/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/deepak/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/deepak/.m2/repository/org/springframework/data/spring-data-jpa/2.2.3.RELEASE/spring-data-jpa-2.2.3.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/data/spring-data-commons/2.2.3.RELEASE/spring-data-commons-2.2.3.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-orm/5.2.2.RELEASE/spring-orm-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-context/5.2.2.RELEASE/spring-context-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-tx/5.2.2.RELEASE/spring-tx-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-beans/5.2.2.RELEASE/spring-beans-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-aspects/5.2.2.RELEASE/spring-aspects-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter/2.2.2.RELEASE/spring-boot-starter-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot/2.2.2.RELEASE/spring-boot-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.2.2.RELEASE/spring-boot-autoconfigure-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/deepak/.m2/repository/org/springframework/spring-core/5.2.2.RELEASE/spring-core-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-jcl/5.2.2.RELEASE/spring-jcl-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.2.0.RELEASE/spring-boot-starter-web-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.2.0.RELEASE/spring-boot-starter-json-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.10.0/jackson-datatype-jdk8-2.10.0.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.10.0/jackson-datatype-jsr310-2.10.0.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.10.0/jackson-module-parameter-names-2.10.0.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.2.0.RELEASE/spring-boot-starter-tomcat-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.27/tomcat-embed-core-9.0.27.jar:/home/deepak/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.27/tomcat-embed-el-9.0.27.jar:/home/deepak/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.27/tomcat-embed-websocket-9.0.27.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.2.0.RELEASE/spring-boot-starter-validation-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.1/jakarta.validation-api-2.0.1.jar:/home/deepak/.m2/repository/org/springframework/spring-web/5.2.0.RELEASE/spring-web-5.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-webmvc/5.2.0.RELEASE/spring-webmvc-5.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-expression/5.2.0.RELEASE/spring-expression-5.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/2.2.2.RELEASE/spring-boot-starter-thymeleaf-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/thymeleaf/thymeleaf-spring5/3.0.11.RELEASE/thymeleaf-spring5-3.0.11.RELEASE.jar:/home/deepak/.m2/repository/org/thymeleaf/thymeleaf/3.0.11.RELEASE/thymeleaf-3.0.11.RELEASE.jar:/home/deepak/.m2/repository/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE.jar:/home/deepak/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/home/deepak/.m2/repository/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.4.RELEASE/thymeleaf-extras-java8time-3.0.4.RELEASE.jar:/home/deepak/.m2/repository/nz/net/ultraq/thymeleaf/thymeleaf-layout-dialect/2.4.1/thymeleaf-layout-dialect-2.4.1.jar:/home/deepak/.m2/repository/nz/net/ultraq/thymeleaf/thymeleaf-expression-processor/1.1.3/thymeleaf-expression-processor-1.1.3.jar:/home/deepak/.m2/repository/org/codehaus/groovy/groovy/2.4.13/groovy-2.4.13.jar:/home/deepak/.m2/repository/org/webjars/bootstrap/4.2.1/bootstrap-4.2.1.jar:/home/deepak/.m2/repository/org/webjars/popper.js/1.14.3/popper.js-1.14.3.jar:/home/deepak/.m2/repository/org/webjars/jquery/3.4.1/jquery-3.4.1.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-log4j2/2.2.2.RELEASE/spring-boot-starter-log4j2-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-jul/2.12.1/log4j-jul-2.12.1.jar:/home/deepak/.m2/repository/org/slf4j/jul-to-slf4j/1.7.29/jul-to-slf4j-1.7.29.jar:/home/deepak/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-apt/4.2.1/querydsl-apt-4.2.1.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-codegen/4.2.1/querydsl-codegen-4.2.1.jar:/home/deepak/.m2/repository/com/mysema/codegen/codegen/0.6.8/codegen-0.6.8.jar:/home/deepak/.m2/repository/org/eclipse/jdt/core/compiler/ecj/4.3.1/ecj-4.3.1.jar:/home/deepak/.m2/repository/org/reflections/reflections/0.9.9/reflections-0.9.9.jar:/home/deepak/.m2/repository/com/google/code/findbugs/annotations/2.0.1/annotations-2.0.1.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-jpa/4.2.1/querydsl-jpa-4.2.1.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-core/4.2.1/querydsl-core-4.2.1.jar:/home/deepak/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar:/home/deepak/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/deepak/.m2/repository/com/mysema/commons/mysema-commons-lang/0.2.4/mysema-commons-lang-0.2.4.jar:/home/deepak/.m2/repository/com/infradna/tool/bridge-method-annotation/1.13/bridge-method-annotation-1.13.jar:/home/deepak/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.2/jackson-databind-2.9.2.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.2/jackson-core-2.9.2.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.5/log4j-slf4j-impl-2.5.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-api/2.5/log4j-api-2.5.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-core/2.5/log4j-core-2.5.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.2/jackson-annotations-2.9.2.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.9.2/jackson-dataformat-yaml-2.9.2.jar:/home/deepak/.m2/repository/org/yaml/snakeyaml/1.18/snakeyaml-1.18.jar:/home/deepak/.m2/repository/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar:/home/deepak/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.2.Final/hibernate-validator-6.0.2.Final.jar:/home/deepak/.m2/repository/javax/validation/validation-api/2.0.0.Final/validation-api-2.0.0.Final.jar:/home/deepak/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/deepak/.m2/repository/com/fasterxml/classmate/1.3.1/classmate-1.3.1.jar:/home/deepak/.m2/repository/org/hibernate/validator/hibernate-validator-annotation-processor/6.0.2.Final/hibernate-validator-annotation-processor-6.0.2.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Kolkata, java.vm.specification.version=13, os.name=Linux, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/local/jdk-13.0.2/lib, sun.java.command=net.voicemail.Application, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@65ef9a0a, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/home/deepak, spring.boot.project.name=cafeteria-ordering-system, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/usr/local/jdk-13.0.2, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, hibernate.hbm2ddl.auto=validate, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=deepak, path.separator=:, os.version=5.3.0-40-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/tmp, catalina.home=/tmp/tomcat.5604433361864654152.8080, java.version=13.0.2, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/home/deepak/Work/COS/extended-cafeteria-ordering-system, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=15639, catalina.base=/tmp/tomcat.5604433361864654152.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@25216999, java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=57.0} (SessionFactoryImpl.java, line 263)
02.03.2020 17:22:25 *DEBUG* DefaultTraversableResolver: Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver (DefaultTraversableResolver.java, line 103)
02.03.2020 17:22:25 *DEBUG* DefaultTraversableResolver: Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. (DefaultTraversableResolver.java, line 114)
02.03.2020 17:22:25 *DEBUG* ValidationXmlParser: Trying to load META-INF/validation.xml for XML based Validator configuration. (ValidationXmlParser.java, line 130)
02.03.2020 17:22:25 *DEBUG* ResourceLoaderHelper: Trying to load META-INF/validation.xml via TCCL (ResourceLoaderHelper.java, line 58)
02.03.2020 17:22:25 *DEBUG* ResourceLoaderHelper: Trying to load META-INF/validation.xml via Hibernate Validator's class loader (ResourceLoaderHelper.java, line 64)
02.03.2020 17:22:25 *DEBUG* ValidationXmlParser: No META-INF/validation.xml found. Using annotation based configuration only. (ValidationXmlParser.java, line 137)
02.03.2020 17:22:25 *DEBUG* ResourceBundleMessageInterpolator: Loaded expression factory via original TCCL (ResourceBundleMessageInterpolator.java, line 88)
02.03.2020 17:22:25 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.Mail] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:22:25 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.Mail (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:22:25 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.User] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:22:25 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.User (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:22:25 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.UserMailMap] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:22:25 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.UserMailMap (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:22:25 *DEBUG* JaccIntegrator: Skipping JACC integration as it was not enabled (JaccIntegrator.java, line 80)
02.03.2020 17:22:25 *DEBUG* SessionFactoryImpl: Instantiated session factory (SessionFactoryImpl.java, line 302)
02.03.2020 17:22:25 *DEBUG* TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7ed8b44] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@77cc6a28] (TypeConfiguration.java, line 157)
02.03.2020 17:22:25 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.Mail] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:22:25 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.Mail (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:22:25 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.Mail] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:22:25 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.Mail (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:22:25 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.User] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:22:25 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.User (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:22:25 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.User] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:22:25 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.User (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:22:25 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.UserMailMap] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:22:25 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.UserMailMap (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:22:25 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.UserMailMap] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:22:25 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.UserMailMap (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:22:25 *DEBUG* AbstractEntityPersister: Static SQL for entity: net.voicemail.mail.entity.Mail (AbstractEntityPersister.java, line 3818)
02.03.2020 17:22:25 *DEBUG* AbstractEntityPersister:  Version select: select mail_id from voicemail.mail where mail_id =? (AbstractEntityPersister.java, line 3823)
02.03.2020 17:22:25 *DEBUG* AbstractEntityPersister:  Snapshot select: select mail_.mail_id, mail_.mail_created_date as mail_cre2_0_, mail_.mail_from as mail_fro3_0_, mail_.mail_modified_date as mail_mod4_0_, mail_.mail_status as mail_sta5_0_, mail_.mail_subject_name as mail_sub6_0_, mail_.mail_to as mail_to7_0_ from voicemail.mail mail_ where mail_.mail_id=? (AbstractEntityPersister.java, line 3826)
02.03.2020 17:22:25 *DEBUG* AbstractEntityPersister:  Insert 0: insert into voicemail.mail (mail_created_date, mail_from, mail_modified_date, mail_status, mail_subject_name, mail_to, mail_id) values (?, ?, ?, ?, ?, ?, ?) (DelegatingBasicLogger.java, line 394)
02.03.2020 17:22:25 *DEBUG* AbstractEntityPersister:  Update 0: update voicemail.mail set mail_created_date=?, mail_from=?, mail_modified_date=?, mail_status=?, mail_subject_name=?, mail_to=? where mail_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:22:25 *DEBUG* AbstractEntityPersister:  Delete 0: delete from voicemail.mail where mail_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:22:25 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f293cb7] (QuerySpacesImpl.java, line 174)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailCreatedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailFrom (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailModifiedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailStatus (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailSubjectName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailTo (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:22:25 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:22:25 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.Mail)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.Mail, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.Mail)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.Mail)
          - SQL table alias mapping - mail0_
          - alias suffix - 0_
          - suffixed key columns - {mail_id1_0_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:22:25 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.Mail [NONE]: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (EntityLoader.java, line 137)
02.03.2020 17:22:25 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f87780b] (QuerySpacesImpl.java, line 174)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailCreatedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailFrom (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailModifiedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailStatus (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailSubjectName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailTo (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:22:25 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:22:25 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.Mail)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.Mail, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.Mail)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.Mail)
          - SQL table alias mapping - mail0_
          - alias suffix - 0_
          - suffixed key columns - {mail_id1_0_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:22:25 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.Mail [READ]: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (EntityLoader.java, line 137)
02.03.2020 17:22:25 *DEBUG* Loader: Static select for action ACTION_MERGE on entity net.voicemail.mail.entity.Mail: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:22:25 *DEBUG* Loader: Static select for action ACTION_REFRESH on entity net.voicemail.mail.entity.Mail: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:22:25 *DEBUG* AbstractEntityPersister: Static SQL for entity: net.voicemail.mail.entity.User (AbstractEntityPersister.java, line 3818)
02.03.2020 17:22:25 *DEBUG* AbstractEntityPersister:  Version select: select user_id from voicemail.user where user_id =? (AbstractEntityPersister.java, line 3823)
02.03.2020 17:22:25 *DEBUG* AbstractEntityPersister:  Snapshot select: select user_.user_id, user_.user_email as user_ema2_1_, user_.user_name as user_nam3_1_, user_.user_password as user_pas4_1_, user_.user_phone_number as user_pho5_1_ from voicemail.user user_ where user_.user_id=? (AbstractEntityPersister.java, line 3826)
02.03.2020 17:22:25 *DEBUG* AbstractEntityPersister:  Insert 0: insert into voicemail.user (user_email, user_name, user_password, user_phone_number, user_id) values (?, ?, ?, ?, ?) (DelegatingBasicLogger.java, line 394)
02.03.2020 17:22:25 *DEBUG* AbstractEntityPersister:  Update 0: update voicemail.user set user_email=?, user_name=?, user_password=?, user_phone_number=? where user_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:22:25 *DEBUG* AbstractEntityPersister:  Delete 0: delete from voicemail.user where user_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:22:25 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72d0196d] (QuerySpacesImpl.java, line 174)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:22:25 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:22:25 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.User)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:22:25 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (EntityLoader.java, line 137)
02.03.2020 17:22:25 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4067634b] (QuerySpacesImpl.java, line 174)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:22:25 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:22:25 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.User)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:22:25 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (EntityLoader.java, line 137)
02.03.2020 17:22:25 *DEBUG* Loader: Static select for action ACTION_MERGE on entity net.voicemail.mail.entity.User: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:22:25 *DEBUG* Loader: Static select for action ACTION_REFRESH on entity net.voicemail.mail.entity.User: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:22:25 *DEBUG* AbstractEntityPersister: Static SQL for entity: net.voicemail.mail.entity.UserMailMap (AbstractEntityPersister.java, line 3818)
02.03.2020 17:22:25 *DEBUG* AbstractEntityPersister:  Version select: select user_mail_map_id from voicemail.user_mail_map where user_mail_map_id =? (AbstractEntityPersister.java, line 3823)
02.03.2020 17:22:25 *DEBUG* AbstractEntityPersister:  Snapshot select: select usermailma_.user_mail_map_id, usermailma_.mail_id as mail_id2_2_, usermailma_.user_id as user_id3_2_ from voicemail.user_mail_map usermailma_ where usermailma_.user_mail_map_id=? (AbstractEntityPersister.java, line 3826)
02.03.2020 17:22:25 *DEBUG* AbstractEntityPersister:  Insert 0: insert into voicemail.user_mail_map (mail_id, user_id, user_mail_map_id) values (?, ?, ?) (DelegatingBasicLogger.java, line 394)
02.03.2020 17:22:25 *DEBUG* AbstractEntityPersister:  Update 0: update voicemail.user_mail_map set mail_id=?, user_id=? where user_mail_map_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:22:25 *DEBUG* AbstractEntityPersister:  Delete 0: delete from voicemail.user_mail_map where user_mail_map_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:22:25 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@490d9c41] (QuerySpacesImpl.java, line 174)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailId (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5521407f] (QuerySpacesImpl.java, line 174)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:22:25 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:22:25 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.UserMailMap)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.UserMailMap, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.UserMailMap)
          - EntityAttributeFetchImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:1>, path=net.voicemail.mail.entity.UserMailMap.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.UserMailMap)
          - SQL table alias mapping - usermailma0_
          - alias suffix - 0_
          - suffixed key columns - {user_mai1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=net.voicemail.mail.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:22:25 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.UserMailMap [NONE]: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_, user1_.user_id as user_id1_1_1_, user1_.user_email as user_ema2_1_1_, user1_.user_name as user_nam3_1_1_, user1_.user_password as user_pas4_1_1_, user1_.user_phone_number as user_pho5_1_1_ from voicemail.user_mail_map usermailma0_ left outer join voicemail.user user1_ on usermailma0_.user_id=user1_.user_id where usermailma0_.user_mail_map_id=? (EntityLoader.java, line 137)
02.03.2020 17:22:25 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61becbcf] (QuerySpacesImpl.java, line 174)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailId (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58f97013] (QuerySpacesImpl.java, line 174)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:22:25 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:22:25 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:22:25 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.UserMailMap)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.UserMailMap, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.UserMailMap)
          - EntityAttributeFetchImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:1>, path=net.voicemail.mail.entity.UserMailMap.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.UserMailMap)
          - SQL table alias mapping - usermailma0_
          - alias suffix - 0_
          - suffixed key columns - {user_mai1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=net.voicemail.mail.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:22:25 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.UserMailMap [READ]: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_, user1_.user_id as user_id1_1_1_, user1_.user_email as user_ema2_1_1_, user1_.user_name as user_nam3_1_1_, user1_.user_password as user_pas4_1_1_, user1_.user_phone_number as user_pho5_1_1_ from voicemail.user_mail_map usermailma0_ left outer join voicemail.user user1_ on usermailma0_.user_id=user1_.user_id where usermailma0_.user_mail_map_id=? (EntityLoader.java, line 137)
02.03.2020 17:22:25 *DEBUG* Loader: Static select for action ACTION_MERGE on entity net.voicemail.mail.entity.UserMailMap: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_ from voicemail.user_mail_map usermailma0_ where usermailma0_.user_mail_map_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:22:25 *DEBUG* Loader: Static select for action ACTION_REFRESH on entity net.voicemail.mail.entity.UserMailMap: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_ from voicemail.user_mail_map usermailma0_ where usermailma0_.user_mail_map_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:22:25 *INFO * JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] (JtaPlatformInitiator.java, line 52)
02.03.2020 17:22:25 *DEBUG* NamedQueryRepository: Checking 0 named HQL queries (NamedQueryRepository.java, line 151)
02.03.2020 17:22:25 *DEBUG* NamedQueryRepository: Checking 0 named SQL queries (NamedQueryRepository.java, line 167)
02.03.2020 17:22:25 *DEBUG* SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@fcd3a6f (SessionFactoryRegistry.java, line 52)
02.03.2020 17:22:25 *DEBUG* SessionFactoryRegistry: Registering SessionFactory: 8b48d52a-0397-4727-90cd-7df3c41cfd54 (<unnamed>) (SessionFactoryRegistry.java, line 74)
02.03.2020 17:22:25 *DEBUG* SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured (SessionFactoryRegistry.java, line 81)
02.03.2020 17:22:25 *DEBUG* StatisticsInitiator: Statistics initialized [enabled=false] (StatisticsInitiator.java, line 101)
02.03.2020 17:22:25 *DEBUG* TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false (TransactionImpl.java, line 53)
02.03.2020 17:22:25 *DEBUG* TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false (TransactionImpl.java, line 53)
02.03.2020 17:22:25 *DEBUG* SessionFactoryImpl: HHH000031: Closing (SessionFactoryImpl.java, line 812)
02.03.2020 17:22:25 *DEBUG* TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5bf1b528] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@77cc6a28] (TypeConfiguration.java, line 350)
02.03.2020 17:22:25 *DEBUG* AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries (AbstractServiceRegistryImpl.java, line 419)
02.03.2020 17:22:25 *DEBUG* BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries (BootstrapServiceRegistryImpl.java, line 295)
02.03.2020 17:58:33 *INFO * Application: Starting Application on Deepak with PID 17792 (/home/deepak/Work/COS/extended-cafeteria-ordering-system/target/classes started by deepak in /home/deepak/Work/COS/extended-cafeteria-ordering-system) (StartupInfoLogger.java, line 55)
02.03.2020 17:58:33 *DEBUG* Application: Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE (StartupInfoLogger.java, line 56)
02.03.2020 17:58:33 *INFO * Application: No active profile set, falling back to default profiles: default (SpringApplication.java, line 651)
02.03.2020 17:58:34 *DEBUG* LogHelper: PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@5bc2b487
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/deepak/Work/COS/extended-cafeteria-ordering-system/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		net.voicemail.mail.entity.Mail
		net.voicemail.mail.entity.User
		net.voicemail.mail.entity.UserMailMap]
	Mapping files names []
	Properties [] (LogHelper.java, line 102)
02.03.2020 17:58:34 *DEBUG* IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. (IntegratorServiceImpl.java, line 46)
02.03.2020 17:58:34 *DEBUG* IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. (IntegratorServiceImpl.java, line 46)
02.03.2020 17:58:34 *DEBUG* IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. (IntegratorServiceImpl.java, line 46)
02.03.2020 17:58:34 *INFO * Version: HHH000412: Hibernate Core {5.4.9.Final} (Version.java, line 46)
02.03.2020 17:58:34 *DEBUG* Environment: HHH000206: hibernate.properties not found (Environment.java, line 199)
02.03.2020 17:58:34 *DEBUG* ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService] (ServiceBinding.java, line 68)
02.03.2020 17:58:34 *DEBUG* RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered (RegionFactoryInitiator.java, line 118)
02.03.2020 17:58:34 *DEBUG* RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory (RegionFactoryInitiator.java, line 49)
02.03.2020 17:58:34 *INFO * Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final} (JavaReflectionManager.java, line 49)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@283ab206 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@283ab206 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@283ab206 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@74e497ae (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@718989fa (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@782fd504 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@4db0ba1c (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@4db0ba1c (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4db0ba1c (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@3e9beef2 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@3e9beef2 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3e9beef2 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@5ed0b4e3 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@5ed0b4e3 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5ed0b4e3 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@3dfd7eaa (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@3dfd7eaa (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3dfd7eaa (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@1ec88aa1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@1ec88aa1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@1ec88aa1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@783b3aa0 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@783b3aa0 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@783b3aa0 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@134a8ead (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@134a8ead (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@134a8ead (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@44fd7ba4 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@44fd7ba4 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@8f57e4c (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@8f57e4c (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@2baac4a7 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@2baac4a7 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5882b202 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f3e805 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@5002fde9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@5002fde9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@f559c74 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@f559c74 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@59918c8f (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@59918c8f (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@734ce281 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@734ce281 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7a358613 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7a358613 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6afbe6a1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6afbe6a1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c33fcf8 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c33fcf8 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3915e7c3 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3915e7c3 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@8f2e3e6 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@8f2e3e6 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@20216016 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@20216016 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@4f213a2 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4f213a2 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@4662752a (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4662752a (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4662752a (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7b5021d1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@27ffd9f8 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@27ffd9f8 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@27ffd9f8 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@10a907ec (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@1a88c4f5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a88c4f5 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@70b33256 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70b33256 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@4f5c30b1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4f5c30b1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@38087342 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@38087342 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7ab63838 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7ab63838 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2a04ab05 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@15a8cebd (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@15a8cebd (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@15a8cebd (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3ffd4b12 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3ffd4b12 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3ffd4b12 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@6793f752 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@307af381 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@58c42c8c (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@58c42c8c (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@58c42c8c (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@935d3f9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@935d3f9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@935d3f9 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@589fb74d (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@37d699a1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@267ff4df (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@267ff4df (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57a667c8 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@28989415 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28989415 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@307c59ea (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@307c59ea (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@21dea711 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5fb8dc01 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b832551 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@72b2c5ed (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72b2c5ed (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1600a8a2 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b25ef1c (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@56b1e527 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@68c34db2 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7b95bdb0 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3f0ce0d1 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@664db2ca (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1491cd6c (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BootstrapContextImpl: Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@685d7ba5] into BootstrapContext; was [null] (BootstrapContextImpl.java, line 262)
02.03.2020 17:58:34 *DEBUG* ClassLoaderAccessImpl: ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@685d7ba5) [was null] (ClassLoaderAccessImpl.java, line 45)
02.03.2020 17:58:34 *DEBUG* BootstrapContextImpl: Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@100bba26] into BootstrapContext; was [null] (BootstrapContextImpl.java, line 272)
02.03.2020 17:58:34 *DEBUG* BootstrapContextImpl: Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4ae280da] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@76d0ecd7] (BootstrapContextImpl.java, line 267)
02.03.2020 17:58:34 *DEBUG* BootstrapContextImpl: Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@685d7ba5] (BootstrapContextImpl.java, line 262)
02.03.2020 17:58:34 *DEBUG* ClassLoaderAccessImpl: ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@685d7ba5] (ClassLoaderAccessImpl.java, line 45)
02.03.2020 17:58:34 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:58:34 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:58:34 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:58:34 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:58:34 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:58:34 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:58:34 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:58:34 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:58:34 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:58:34 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:58:34 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:58:34 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:58:34 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:58:34 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 17:58:34 *DEBUG* JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 9.6.8
      major : 9
      minor : 6 (JdbcEnvironmentInitiator.java, line 72)
02.03.2020 17:58:34 *DEBUG* JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.4.1211
      major : 9
      minor : 4 (JdbcEnvironmentInitiator.java, line 83)
02.03.2020 17:58:34 *DEBUG* JdbcEnvironmentInitiator: JDBC version : 4.0 (DelegatingBasicLogger.java, line 389)
02.03.2020 17:58:34 *INFO * Dialect: HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL95Dialect (Dialect.java, line 172)
02.03.2020 17:58:34 *DEBUG* IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case (IdentifierHelperBuilder.java, line 108)
02.03.2020 17:58:34 *DEBUG* Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] (Namespace.java, line 51)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@297bd171 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@297bd171 (BasicTypeRegistry.java, line 156)
02.03.2020 17:58:34 *DEBUG* BasicTypeRegistry: HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7ab63838 (BasicTypeRegistry.java, line 159)
02.03.2020 17:58:34 *DEBUG* TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58cda03f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7757a37f] (TypeConfiguration.java, line 152)
02.03.2020 17:58:35 *DEBUG* AnnotationBinder: Binding entity from annotated class: net.voicemail.mail.entity.Mail (AnnotationBinder.java, line 557)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* EntityBinder: Import with entity name Mail (EntityBinder.java, line 430)
02.03.2020 17:58:35 *DEBUG* Namespace: Created database namespace [logicalName=Name{catalog=null, schema=voicemail}, physicalName=Name{catalog=null, schema=voicemail}] (Namespace.java, line 51)
02.03.2020 17:58:35 *DEBUG* EntityBinder: Bind entity net.voicemail.mail.entity.Mail on table mail (EntityBinder.java, line 873)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_id, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:58:35 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: building SimpleValue for mailId (SimpleValueBinder.java, line 411)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: Building property mailId (PropertyBinder.java, line 266)
02.03.2020 17:58:35 *DEBUG* BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(mail_id)]), mailId, org.hibernate.id.enhanced.SequenceStyleGenerator, seq_gen, ...) (BinderHelper.java, line 644)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_created_date, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailCreatedDate with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:58:35 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailCreatedDate] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: building SimpleValue for mailCreatedDate (SimpleValueBinder.java, line 411)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: Building property mailCreatedDate (PropertyBinder.java, line 266)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_from, insertable=true, updatable=true, unique=true} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailFrom with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:58:35 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailFrom] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: building SimpleValue for mailFrom (SimpleValueBinder.java, line 411)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: Building property mailFrom (PropertyBinder.java, line 266)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_modified_date, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailModifiedDate with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:58:35 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailModifiedDate] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: building SimpleValue for mailModifiedDate (SimpleValueBinder.java, line 411)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: Building property mailModifiedDate (PropertyBinder.java, line 266)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_status, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailStatus with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:58:35 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailStatus] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: building SimpleValue for mailStatus (SimpleValueBinder.java, line 411)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: Building property mailStatus (PropertyBinder.java, line 266)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_subject_name, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailSubjectName with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:58:35 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailSubjectName] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: building SimpleValue for mailSubjectName (SimpleValueBinder.java, line 411)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: Building property mailSubjectName (PropertyBinder.java, line 266)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_to, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailTo with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:58:35 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailTo] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: building SimpleValue for mailTo (SimpleValueBinder.java, line 411)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: Building property mailTo (PropertyBinder.java, line 266)
02.03.2020 17:58:35 *DEBUG* AnnotationBinder: Binding entity from annotated class: net.voicemail.mail.entity.User (AnnotationBinder.java, line 557)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* EntityBinder: Import with entity name User (EntityBinder.java, line 430)
02.03.2020 17:58:35 *DEBUG* EntityBinder: Bind entity net.voicemail.mail.entity.User on table user (EntityBinder.java, line 873)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_id, insertable=true, updatable=true, unique=true} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: MetadataSourceProcessor property userId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:58:35 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: building SimpleValue for userId (SimpleValueBinder.java, line 411)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: Building property userId (PropertyBinder.java, line 266)
02.03.2020 17:58:35 *DEBUG* BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, user_id_generator, ...) (BinderHelper.java, line 644)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_email, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: MetadataSourceProcessor property userEmail with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:58:35 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userEmail] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: building SimpleValue for userEmail (SimpleValueBinder.java, line 411)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: Building property userEmail (PropertyBinder.java, line 266)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_name, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: MetadataSourceProcessor property userName with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:58:35 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userName] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: building SimpleValue for userName (SimpleValueBinder.java, line 411)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: Building property userName (PropertyBinder.java, line 266)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_password, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: MetadataSourceProcessor property userPassword with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:58:35 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userPassword] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: building SimpleValue for userPassword (SimpleValueBinder.java, line 411)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: Building property userPassword (PropertyBinder.java, line 266)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_phone_number, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: MetadataSourceProcessor property userPhoneNumber with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:58:35 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userPhoneNumber] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: building SimpleValue for userPhoneNumber (SimpleValueBinder.java, line 411)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: Building property userPhoneNumber (PropertyBinder.java, line 266)
02.03.2020 17:58:35 *DEBUG* AnnotationBinder: Binding entity from annotated class: net.voicemail.mail.entity.UserMailMap (AnnotationBinder.java, line 557)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* EntityBinder: Import with entity name UserMailMap (EntityBinder.java, line 430)
02.03.2020 17:58:35 *DEBUG* EntityBinder: Bind entity net.voicemail.mail.entity.UserMailMap on table user_mail_map (EntityBinder.java, line 873)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user_mail_map), mappingColumn=user_mail_map_id, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: MetadataSourceProcessor property userMailMapId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:58:35 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.UserMailMap:userMailMapId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: building SimpleValue for userMailMapId (SimpleValueBinder.java, line 411)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: Building property userMailMapId (PropertyBinder.java, line 266)
02.03.2020 17:58:35 *WARN * InFlightMetadataCollectorImpl: HHH000069: Duplicate generator name seq_gen (InFlightMetadataCollectorImpl.java, line 489)
02.03.2020 17:58:35 *DEBUG* BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_mail_map_id)]), userMailMapId, org.hibernate.id.enhanced.SequenceStyleGenerator, seq_gen, ...) (BinderHelper.java, line 644)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user_mail_map), mappingColumn=mail_id, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 17:58:35 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.UserMailMap:mailId] (AbstractPropertyHolder.java, line 94)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: building SimpleValue for mailId (SimpleValueBinder.java, line 411)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: Building property mailId (PropertyBinder.java, line 266)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user_mail_map), mappingColumn=user, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 17:58:35 *DEBUG* PropertyBinder: Building property user (PropertyBinder.java, line 266)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailId (SimpleValueBinder.java, line 456)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailCreatedDate (SimpleValueBinder.java, line 456)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailFrom (SimpleValueBinder.java, line 456)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailModifiedDate (SimpleValueBinder.java, line 456)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailStatus (SimpleValueBinder.java, line 456)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailSubjectName (SimpleValueBinder.java, line 456)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailTo (SimpleValueBinder.java, line 456)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userId (SimpleValueBinder.java, line 456)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userEmail (SimpleValueBinder.java, line 456)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userName (SimpleValueBinder.java, line 456)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userPassword (SimpleValueBinder.java, line 456)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userPhoneNumber (SimpleValueBinder.java, line 456)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userMailMapId (SimpleValueBinder.java, line 456)
02.03.2020 17:58:35 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailId (SimpleValueBinder.java, line 456)
02.03.2020 17:58:35 *DEBUG* PrimaryKey: Forcing column [mail_id] to be non-null as it is part of the primary key for table [mail] (PrimaryKey.java, line 35)
02.03.2020 17:58:35 *DEBUG* PrimaryKey: Forcing column [user_id] to be non-null as it is part of the primary key for table [user] (PrimaryKey.java, line 35)
02.03.2020 17:58:35 *DEBUG* PrimaryKey: Forcing column [user_mail_map_id] to be non-null as it is part of the primary key for table [user_mail_map] (PrimaryKey.java, line 35)
02.03.2020 17:58:35 *DEBUG* InFlightMetadataCollectorImpl: Resolving reference to class: net.voicemail.mail.entity.User (InFlightMetadataCollectorImpl.java, line 1860)
02.03.2020 17:58:35 *DEBUG* InFlightMetadataCollectorImpl: Resolving reference to class: net.voicemail.mail.entity.User (InFlightMetadataCollectorImpl.java, line 1860)
02.03.2020 17:58:35 *DEBUG* SessionFactoryImpl: Building session factory (SessionFactoryImpl.java, line 207)
02.03.2020 17:58:35 *DEBUG* Settings: SessionFactory name : null (Settings.java, line 68)
02.03.2020 17:58:35 *DEBUG* Settings: Automatic flush during beforeCompletion(): enabled (Settings.java, line 69)
02.03.2020 17:58:35 *DEBUG* Settings: Automatic session close at end of transaction: disabled (Settings.java, line 70)
02.03.2020 17:58:35 *DEBUG* Settings: Statistics: disabled (Settings.java, line 72)
02.03.2020 17:58:35 *DEBUG* Settings: Deleted entity synthetic identifier rollback: disabled (Settings.java, line 74)
02.03.2020 17:58:35 *DEBUG* Settings: Default entity-mode: pojo (Settings.java, line 75)
02.03.2020 17:58:35 *DEBUG* Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled (Settings.java, line 76)
02.03.2020 17:58:35 *DEBUG* Settings: Allow initialization of lazy state outside session : disabled (Settings.java, line 77)
02.03.2020 17:58:35 *DEBUG* Settings: Using BatchFetchStyle : LEGACY (Settings.java, line 79)
02.03.2020 17:58:35 *DEBUG* Settings: Default batch fetch size: -1 (Settings.java, line 80)
02.03.2020 17:58:35 *DEBUG* Settings: Maximum outer join fetch depth: null (Settings.java, line 81)
02.03.2020 17:58:35 *DEBUG* Settings: Default null ordering: NONE (Settings.java, line 82)
02.03.2020 17:58:35 *DEBUG* Settings: Order SQL updates by primary key: disabled (Settings.java, line 83)
02.03.2020 17:58:35 *DEBUG* Settings: Order SQL inserts for batching: disabled (Settings.java, line 84)
02.03.2020 17:58:35 *DEBUG* Settings: multi-tenancy strategy : NONE (Settings.java, line 86)
02.03.2020 17:58:35 *DEBUG* Settings: JTA Track by Thread: enabled (Settings.java, line 88)
02.03.2020 17:58:35 *DEBUG* Settings: Query language substitutions: {} (Settings.java, line 90)
02.03.2020 17:58:35 *DEBUG* Settings: Named query checking : enabled (Settings.java, line 91)
02.03.2020 17:58:35 *DEBUG* Settings: Second-level cache: disabled (Settings.java, line 93)
02.03.2020 17:58:35 *DEBUG* Settings: Second-level query cache: disabled (Settings.java, line 94)
02.03.2020 17:58:35 *DEBUG* Settings: Second-level query cache factory: null (Settings.java, line 95)
02.03.2020 17:58:35 *DEBUG* Settings: Second-level cache region prefix: null (Settings.java, line 96)
02.03.2020 17:58:35 *DEBUG* Settings: Optimize second-level cache for minimal puts: disabled (Settings.java, line 97)
02.03.2020 17:58:35 *DEBUG* Settings: Structured second-level cache entries: disabled (Settings.java, line 98)
02.03.2020 17:58:35 *DEBUG* Settings: Second-level cache direct-reference entries: disabled (Settings.java, line 99)
02.03.2020 17:58:35 *DEBUG* Settings: Automatic eviction of collection cache: disabled (Settings.java, line 100)
02.03.2020 17:58:35 *DEBUG* Settings: JDBC batch size: 15 (Settings.java, line 102)
02.03.2020 17:58:35 *DEBUG* Settings: JDBC batch updates for versioned data: enabled (Settings.java, line 103)
02.03.2020 17:58:35 *DEBUG* Settings: Scrollable result sets: enabled (Settings.java, line 104)
02.03.2020 17:58:35 *DEBUG* Settings: Wrap result sets: disabled (Settings.java, line 105)
02.03.2020 17:58:35 *DEBUG* Settings: JDBC3 getGeneratedKeys(): enabled (Settings.java, line 106)
02.03.2020 17:58:35 *DEBUG* Settings: JDBC result set fetch size: null (Settings.java, line 107)
02.03.2020 17:58:35 *DEBUG* Settings: Connection release mode: ON_CLOSE (Settings.java, line 108)
02.03.2020 17:58:35 *DEBUG* Settings: Generate SQL with comments: disabled (Settings.java, line 109)
02.03.2020 17:58:35 *DEBUG* Settings: JPA compliance - query :  (Settings.java, line 111)
02.03.2020 17:58:35 *DEBUG* Settings: JPA compliance - closed-handling :  (Settings.java, line 112)
02.03.2020 17:58:35 *DEBUG* Settings: JPA compliance - lists :  (Settings.java, line 113)
02.03.2020 17:58:35 *DEBUG* Settings: JPA compliance - transactions :  (Settings.java, line 114)
02.03.2020 17:58:35 *DEBUG* SessionFactoryImpl: Session factory constructed with filter configurations : {} (SessionFactoryImpl.java, line 262)
02.03.2020 17:58:35 *DEBUG* SessionFactoryImpl: Instantiating session factory with properties: {hibernate.id.new_generator_mappings=true, java.specification.version=13, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6bf0f70a, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/home/deepak/Work/COS/extended-cafeteria-ordering-system/target/classes:/home/deepak/.m2/repository/org/postgresql/postgresql/9.4.1211/postgresql-9.4.1211.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.2.2.RELEASE/spring-boot-starter-data-jpa-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.2.2.RELEASE/spring-boot-starter-aop-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-aop/5.2.2.RELEASE/spring-aop-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/aspectj/aspectjweaver/1.9.5/aspectjweaver-1.9.5.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.2.2.RELEASE/spring-boot-starter-jdbc-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/com/zaxxer/HikariCP/3.4.1/HikariCP-3.4.1.jar:/home/deepak/.m2/repository/org/springframework/spring-jdbc/5.2.2.RELEASE/spring-jdbc-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/home/deepak/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/home/deepak/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/home/deepak/.m2/repository/org/hibernate/hibernate-core/5.4.9.Final/hibernate-core-5.4.9.Final.jar:/home/deepak/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/deepak/.m2/repository/net/bytebuddy/byte-buddy/1.10.2/byte-buddy-1.10.2.jar:/home/deepak/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/deepak/.m2/repository/org/jboss/jandex/2.1.1.Final/jandex-2.1.1.Final.jar:/home/deepak/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/deepak/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/deepak/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/deepak/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/deepak/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/deepak/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/deepak/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/deepak/.m2/repository/org/springframework/data/spring-data-jpa/2.2.3.RELEASE/spring-data-jpa-2.2.3.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/data/spring-data-commons/2.2.3.RELEASE/spring-data-commons-2.2.3.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-orm/5.2.2.RELEASE/spring-orm-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-context/5.2.2.RELEASE/spring-context-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-tx/5.2.2.RELEASE/spring-tx-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-beans/5.2.2.RELEASE/spring-beans-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-aspects/5.2.2.RELEASE/spring-aspects-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter/2.2.2.RELEASE/spring-boot-starter-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot/2.2.2.RELEASE/spring-boot-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.2.2.RELEASE/spring-boot-autoconfigure-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/deepak/.m2/repository/org/springframework/spring-core/5.2.2.RELEASE/spring-core-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-jcl/5.2.2.RELEASE/spring-jcl-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.2.0.RELEASE/spring-boot-starter-web-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.2.0.RELEASE/spring-boot-starter-json-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.10.0/jackson-datatype-jdk8-2.10.0.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.10.0/jackson-datatype-jsr310-2.10.0.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.10.0/jackson-module-parameter-names-2.10.0.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.2.0.RELEASE/spring-boot-starter-tomcat-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.27/tomcat-embed-core-9.0.27.jar:/home/deepak/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.27/tomcat-embed-el-9.0.27.jar:/home/deepak/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.27/tomcat-embed-websocket-9.0.27.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.2.0.RELEASE/spring-boot-starter-validation-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.1/jakarta.validation-api-2.0.1.jar:/home/deepak/.m2/repository/org/springframework/spring-web/5.2.0.RELEASE/spring-web-5.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-webmvc/5.2.0.RELEASE/spring-webmvc-5.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-expression/5.2.0.RELEASE/spring-expression-5.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/2.2.2.RELEASE/spring-boot-starter-thymeleaf-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/thymeleaf/thymeleaf-spring5/3.0.11.RELEASE/thymeleaf-spring5-3.0.11.RELEASE.jar:/home/deepak/.m2/repository/org/thymeleaf/thymeleaf/3.0.11.RELEASE/thymeleaf-3.0.11.RELEASE.jar:/home/deepak/.m2/repository/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE.jar:/home/deepak/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/home/deepak/.m2/repository/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.4.RELEASE/thymeleaf-extras-java8time-3.0.4.RELEASE.jar:/home/deepak/.m2/repository/nz/net/ultraq/thymeleaf/thymeleaf-layout-dialect/2.4.1/thymeleaf-layout-dialect-2.4.1.jar:/home/deepak/.m2/repository/nz/net/ultraq/thymeleaf/thymeleaf-expression-processor/1.1.3/thymeleaf-expression-processor-1.1.3.jar:/home/deepak/.m2/repository/org/codehaus/groovy/groovy/2.4.13/groovy-2.4.13.jar:/home/deepak/.m2/repository/org/webjars/bootstrap/4.2.1/bootstrap-4.2.1.jar:/home/deepak/.m2/repository/org/webjars/popper.js/1.14.3/popper.js-1.14.3.jar:/home/deepak/.m2/repository/org/webjars/jquery/3.4.1/jquery-3.4.1.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-log4j2/2.2.2.RELEASE/spring-boot-starter-log4j2-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-jul/2.12.1/log4j-jul-2.12.1.jar:/home/deepak/.m2/repository/org/slf4j/jul-to-slf4j/1.7.29/jul-to-slf4j-1.7.29.jar:/home/deepak/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-apt/4.2.1/querydsl-apt-4.2.1.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-codegen/4.2.1/querydsl-codegen-4.2.1.jar:/home/deepak/.m2/repository/com/mysema/codegen/codegen/0.6.8/codegen-0.6.8.jar:/home/deepak/.m2/repository/org/eclipse/jdt/core/compiler/ecj/4.3.1/ecj-4.3.1.jar:/home/deepak/.m2/repository/org/reflections/reflections/0.9.9/reflections-0.9.9.jar:/home/deepak/.m2/repository/com/google/code/findbugs/annotations/2.0.1/annotations-2.0.1.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-jpa/4.2.1/querydsl-jpa-4.2.1.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-core/4.2.1/querydsl-core-4.2.1.jar:/home/deepak/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar:/home/deepak/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/deepak/.m2/repository/com/mysema/commons/mysema-commons-lang/0.2.4/mysema-commons-lang-0.2.4.jar:/home/deepak/.m2/repository/com/infradna/tool/bridge-method-annotation/1.13/bridge-method-annotation-1.13.jar:/home/deepak/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.2/jackson-databind-2.9.2.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.2/jackson-core-2.9.2.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.5/log4j-slf4j-impl-2.5.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-api/2.5/log4j-api-2.5.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-core/2.5/log4j-core-2.5.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.2/jackson-annotations-2.9.2.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.9.2/jackson-dataformat-yaml-2.9.2.jar:/home/deepak/.m2/repository/org/yaml/snakeyaml/1.18/snakeyaml-1.18.jar:/home/deepak/.m2/repository/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar:/home/deepak/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.2.Final/hibernate-validator-6.0.2.Final.jar:/home/deepak/.m2/repository/javax/validation/validation-api/2.0.0.Final/validation-api-2.0.0.Final.jar:/home/deepak/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/deepak/.m2/repository/com/fasterxml/classmate/1.3.1/classmate-1.3.1.jar:/home/deepak/.m2/repository/org/hibernate/validator/hibernate-validator-annotation-processor/6.0.2.Final/hibernate-validator-annotation-processor-6.0.2.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Kolkata, java.vm.specification.version=13, os.name=Linux, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/local/jdk-13.0.2/lib, sun.java.command=net.voicemail.Application, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5310e451, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/home/deepak, spring.boot.project.name=cafeteria-ordering-system, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/usr/local/jdk-13.0.2, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, hibernate.hbm2ddl.auto=validate, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=deepak, path.separator=:, os.version=5.3.0-40-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/tmp, catalina.home=/tmp/tomcat.13345762398910194276.8080, java.version=13.0.2, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/home/deepak/Work/COS/extended-cafeteria-ordering-system, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=17792, catalina.base=/tmp/tomcat.13345762398910194276.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@52d63b7e, java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=57.0} (SessionFactoryImpl.java, line 263)
02.03.2020 17:58:35 *DEBUG* DefaultTraversableResolver: Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver (DefaultTraversableResolver.java, line 103)
02.03.2020 17:58:35 *DEBUG* DefaultTraversableResolver: Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. (DefaultTraversableResolver.java, line 114)
02.03.2020 17:58:35 *DEBUG* ValidationXmlParser: Trying to load META-INF/validation.xml for XML based Validator configuration. (ValidationXmlParser.java, line 130)
02.03.2020 17:58:35 *DEBUG* ResourceLoaderHelper: Trying to load META-INF/validation.xml via TCCL (ResourceLoaderHelper.java, line 58)
02.03.2020 17:58:35 *DEBUG* ResourceLoaderHelper: Trying to load META-INF/validation.xml via Hibernate Validator's class loader (ResourceLoaderHelper.java, line 64)
02.03.2020 17:58:35 *DEBUG* ValidationXmlParser: No META-INF/validation.xml found. Using annotation based configuration only. (ValidationXmlParser.java, line 137)
02.03.2020 17:58:35 *DEBUG* ResourceBundleMessageInterpolator: Loaded expression factory via original TCCL (ResourceBundleMessageInterpolator.java, line 88)
02.03.2020 17:58:35 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.Mail] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:58:35 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.Mail (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:58:35 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.User] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:58:35 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.User (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:58:35 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.UserMailMap] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:58:35 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.UserMailMap (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:58:35 *DEBUG* JaccIntegrator: Skipping JACC integration as it was not enabled (JaccIntegrator.java, line 80)
02.03.2020 17:58:35 *DEBUG* SessionFactoryImpl: Instantiated session factory (SessionFactoryImpl.java, line 302)
02.03.2020 17:58:35 *DEBUG* TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58cda03f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6fa2a006] (TypeConfiguration.java, line 157)
02.03.2020 17:58:35 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.Mail] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:58:35 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.Mail (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:58:35 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.Mail] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:58:35 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.Mail (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:58:35 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.User] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:58:35 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.User (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:58:35 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.User] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:58:35 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.User (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:58:35 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.UserMailMap] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:58:35 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.UserMailMap (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:58:35 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.UserMailMap] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 17:58:35 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.UserMailMap (ClassLoaderAccessImpl.java, line 62)
02.03.2020 17:58:35 *DEBUG* AbstractEntityPersister: Static SQL for entity: net.voicemail.mail.entity.Mail (AbstractEntityPersister.java, line 3818)
02.03.2020 17:58:35 *DEBUG* AbstractEntityPersister:  Version select: select mail_id from voicemail.mail where mail_id =? (AbstractEntityPersister.java, line 3823)
02.03.2020 17:58:35 *DEBUG* AbstractEntityPersister:  Snapshot select: select mail_.mail_id, mail_.mail_created_date as mail_cre2_0_, mail_.mail_from as mail_fro3_0_, mail_.mail_modified_date as mail_mod4_0_, mail_.mail_status as mail_sta5_0_, mail_.mail_subject_name as mail_sub6_0_, mail_.mail_to as mail_to7_0_ from voicemail.mail mail_ where mail_.mail_id=? (AbstractEntityPersister.java, line 3826)
02.03.2020 17:58:35 *DEBUG* AbstractEntityPersister:  Insert 0: insert into voicemail.mail (mail_created_date, mail_from, mail_modified_date, mail_status, mail_subject_name, mail_to, mail_id) values (?, ?, ?, ?, ?, ?, ?) (DelegatingBasicLogger.java, line 394)
02.03.2020 17:58:35 *DEBUG* AbstractEntityPersister:  Update 0: update voicemail.mail set mail_created_date=?, mail_from=?, mail_modified_date=?, mail_status=?, mail_subject_name=?, mail_to=? where mail_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:58:35 *DEBUG* AbstractEntityPersister:  Delete 0: delete from voicemail.mail where mail_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:58:35 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e62e227] (QuerySpacesImpl.java, line 174)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailCreatedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailFrom (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailModifiedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailStatus (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailSubjectName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailTo (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:58:35 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:58:35 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.Mail)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.Mail, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.Mail)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.Mail)
          - SQL table alias mapping - mail0_
          - alias suffix - 0_
          - suffixed key columns - {mail_id1_0_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:58:35 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.Mail [NONE]: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (EntityLoader.java, line 137)
02.03.2020 17:58:35 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f521c69] (QuerySpacesImpl.java, line 174)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailCreatedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailFrom (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailModifiedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailStatus (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailSubjectName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailTo (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:58:35 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:58:35 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.Mail)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.Mail, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.Mail)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.Mail)
          - SQL table alias mapping - mail0_
          - alias suffix - 0_
          - suffixed key columns - {mail_id1_0_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:58:35 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.Mail [READ]: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (EntityLoader.java, line 137)
02.03.2020 17:58:35 *DEBUG* Loader: Static select for action ACTION_MERGE on entity net.voicemail.mail.entity.Mail: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:58:35 *DEBUG* Loader: Static select for action ACTION_REFRESH on entity net.voicemail.mail.entity.Mail: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:58:35 *DEBUG* AbstractEntityPersister: Static SQL for entity: net.voicemail.mail.entity.User (AbstractEntityPersister.java, line 3818)
02.03.2020 17:58:35 *DEBUG* AbstractEntityPersister:  Version select: select user_id from voicemail.user where user_id =? (AbstractEntityPersister.java, line 3823)
02.03.2020 17:58:35 *DEBUG* AbstractEntityPersister:  Snapshot select: select user_.user_id, user_.user_email as user_ema2_1_, user_.user_name as user_nam3_1_, user_.user_password as user_pas4_1_, user_.user_phone_number as user_pho5_1_ from voicemail.user user_ where user_.user_id=? (AbstractEntityPersister.java, line 3826)
02.03.2020 17:58:35 *DEBUG* AbstractEntityPersister:  Insert 0: insert into voicemail.user (user_email, user_name, user_password, user_phone_number, user_id) values (?, ?, ?, ?, ?) (DelegatingBasicLogger.java, line 394)
02.03.2020 17:58:35 *DEBUG* AbstractEntityPersister:  Update 0: update voicemail.user set user_email=?, user_name=?, user_password=?, user_phone_number=? where user_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:58:35 *DEBUG* AbstractEntityPersister:  Delete 0: delete from voicemail.user where user_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:58:35 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15c1b543] (QuerySpacesImpl.java, line 174)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:58:35 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:58:35 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.User)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:58:35 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (EntityLoader.java, line 137)
02.03.2020 17:58:35 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aae82cc] (QuerySpacesImpl.java, line 174)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:58:35 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:58:35 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.User)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:58:35 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (EntityLoader.java, line 137)
02.03.2020 17:58:35 *DEBUG* Loader: Static select for action ACTION_MERGE on entity net.voicemail.mail.entity.User: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:58:35 *DEBUG* Loader: Static select for action ACTION_REFRESH on entity net.voicemail.mail.entity.User: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:58:35 *DEBUG* AbstractEntityPersister: Static SQL for entity: net.voicemail.mail.entity.UserMailMap (AbstractEntityPersister.java, line 3818)
02.03.2020 17:58:35 *DEBUG* AbstractEntityPersister:  Version select: select user_mail_map_id from voicemail.user_mail_map where user_mail_map_id =? (AbstractEntityPersister.java, line 3823)
02.03.2020 17:58:35 *DEBUG* AbstractEntityPersister:  Snapshot select: select usermailma_.user_mail_map_id, usermailma_.mail_id as mail_id2_2_, usermailma_.user_id as user_id3_2_ from voicemail.user_mail_map usermailma_ where usermailma_.user_mail_map_id=? (AbstractEntityPersister.java, line 3826)
02.03.2020 17:58:35 *DEBUG* AbstractEntityPersister:  Insert 0: insert into voicemail.user_mail_map (mail_id, user_id, user_mail_map_id) values (?, ?, ?) (DelegatingBasicLogger.java, line 394)
02.03.2020 17:58:35 *DEBUG* AbstractEntityPersister:  Update 0: update voicemail.user_mail_map set mail_id=?, user_id=? where user_mail_map_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:58:35 *DEBUG* AbstractEntityPersister:  Delete 0: delete from voicemail.user_mail_map where user_mail_map_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 17:58:35 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@622ba721] (QuerySpacesImpl.java, line 174)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailId (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@679f59f1] (QuerySpacesImpl.java, line 174)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:58:35 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:58:35 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.UserMailMap)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.UserMailMap, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.UserMailMap)
          - EntityAttributeFetchImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:1>, path=net.voicemail.mail.entity.UserMailMap.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.UserMailMap)
          - SQL table alias mapping - usermailma0_
          - alias suffix - 0_
          - suffixed key columns - {user_mai1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=net.voicemail.mail.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:58:35 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.UserMailMap [NONE]: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_, user1_.user_id as user_id1_1_1_, user1_.user_email as user_ema2_1_1_, user1_.user_name as user_nam3_1_1_, user1_.user_password as user_pas4_1_1_, user1_.user_phone_number as user_pho5_1_1_ from voicemail.user_mail_map usermailma0_ left outer join voicemail.user user1_ on usermailma0_.user_id=user1_.user_id where usermailma0_.user_mail_map_id=? (EntityLoader.java, line 137)
02.03.2020 17:58:35 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f3e9acc] (QuerySpacesImpl.java, line 174)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailId (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@177068db] (QuerySpacesImpl.java, line 174)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userName (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 17:58:35 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 17:58:35 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 17:58:35 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.UserMailMap)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.UserMailMap, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.UserMailMap)
          - EntityAttributeFetchImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:1>, path=net.voicemail.mail.entity.UserMailMap.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.UserMailMap)
          - SQL table alias mapping - usermailma0_
          - alias suffix - 0_
          - suffixed key columns - {user_mai1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=net.voicemail.mail.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 17:58:35 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.UserMailMap [READ]: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_, user1_.user_id as user_id1_1_1_, user1_.user_email as user_ema2_1_1_, user1_.user_name as user_nam3_1_1_, user1_.user_password as user_pas4_1_1_, user1_.user_phone_number as user_pho5_1_1_ from voicemail.user_mail_map usermailma0_ left outer join voicemail.user user1_ on usermailma0_.user_id=user1_.user_id where usermailma0_.user_mail_map_id=? (EntityLoader.java, line 137)
02.03.2020 17:58:35 *DEBUG* Loader: Static select for action ACTION_MERGE on entity net.voicemail.mail.entity.UserMailMap: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_ from voicemail.user_mail_map usermailma0_ where usermailma0_.user_mail_map_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:58:35 *DEBUG* Loader: Static select for action ACTION_REFRESH on entity net.voicemail.mail.entity.UserMailMap: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_ from voicemail.user_mail_map usermailma0_ where usermailma0_.user_mail_map_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 17:58:35 *INFO * JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] (JtaPlatformInitiator.java, line 52)
02.03.2020 17:58:35 *DEBUG* NamedQueryRepository: Checking 0 named HQL queries (NamedQueryRepository.java, line 151)
02.03.2020 17:58:35 *DEBUG* NamedQueryRepository: Checking 0 named SQL queries (NamedQueryRepository.java, line 167)
02.03.2020 17:58:35 *DEBUG* SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2d705998 (SessionFactoryRegistry.java, line 52)
02.03.2020 17:58:35 *DEBUG* SessionFactoryRegistry: Registering SessionFactory: 381d7c7a-17ed-459b-87cf-18e710e3ed0f (<unnamed>) (SessionFactoryRegistry.java, line 74)
02.03.2020 17:58:35 *DEBUG* SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured (SessionFactoryRegistry.java, line 81)
02.03.2020 17:58:35 *DEBUG* StatisticsInitiator: Statistics initialized [enabled=false] (StatisticsInitiator.java, line 101)
02.03.2020 17:58:35 *DEBUG* TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false (TransactionImpl.java, line 53)
02.03.2020 17:58:35 *DEBUG* DefaultTraversableResolver: Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver (DefaultTraversableResolver.java, line 103)
02.03.2020 17:58:35 *DEBUG* DefaultTraversableResolver: Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. (DefaultTraversableResolver.java, line 114)
02.03.2020 17:58:35 *DEBUG* ResourceBundleMessageInterpolator: Loaded expression factory via original TCCL (ResourceBundleMessageInterpolator.java, line 88)
02.03.2020 17:58:35 *DEBUG* DefaultTraversableResolver: Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver (DefaultTraversableResolver.java, line 103)
02.03.2020 17:58:35 *DEBUG* DefaultTraversableResolver: Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. (DefaultTraversableResolver.java, line 114)
02.03.2020 17:58:35 *DEBUG* ConfigurationImpl: Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator (ConfigurationImpl.java, line 140)
02.03.2020 17:58:35 *DEBUG* ConfigurationImpl: Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory (ConfigurationImpl.java, line 162)
02.03.2020 17:58:35 *DEBUG* ConfigurationImpl: Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1 (ConfigurationImpl.java, line 176)
02.03.2020 17:58:35 *DEBUG* ValidationXmlParser: Trying to load META-INF/validation.xml for XML based Validator configuration. (ValidationXmlParser.java, line 130)
02.03.2020 17:58:35 *DEBUG* ResourceLoaderHelper: Trying to load META-INF/validation.xml via user class loader (ResourceLoaderHelper.java, line 51)
02.03.2020 17:58:35 *DEBUG* ResourceLoaderHelper: Trying to load META-INF/validation.xml via TCCL (ResourceLoaderHelper.java, line 58)
02.03.2020 17:58:35 *DEBUG* ResourceLoaderHelper: Trying to load META-INF/validation.xml via Hibernate Validator's class loader (ResourceLoaderHelper.java, line 64)
02.03.2020 17:58:35 *DEBUG* ValidationXmlParser: No META-INF/validation.xml found. Using annotation based configuration only. (ValidationXmlParser.java, line 137)
02.03.2020 17:58:36 *INFO * Application: Started Application in 3.044 seconds (JVM running for 3.586) (StartupInfoLogger.java, line 61)
02.03.2020 17:59:14 *DEBUG* TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false (TransactionImpl.java, line 53)
02.03.2020 17:59:14 *DEBUG* TransactionImpl: begin (TransactionImpl.java, line 81)
02.03.2020 17:59:14 *DEBUG* CriteriaQueryImpl: Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0 (CriteriaQueryImpl.java, line 299)
02.03.2020 17:59:14 *DEBUG* QueryTranslatorFactoryInitiator: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4553f257 (QueryTranslatorFactoryInitiator.java, line 45)
02.03.2020 17:59:14 *DEBUG* QueryTranslatorImpl: parse() - HQL: select generatedAlias0 from net.voicemail.mail.entity.User as generatedAlias0 where generatedAlias0.userName=:param0 (QueryTranslatorImpl.java, line 288)
02.03.2020 17:59:14 *DEBUG* ErrorTracker: throwQueryException() : no errors (ErrorTracker.java, line 97)
02.03.2020 17:59:14 *DEBUG* QueryTranslatorImpl: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  \-[IDENT] Node: 'voicemail'
    |  |     |  |  |  \-[IDENT] Node: 'mail'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'
 (QueryTranslatorImpl.java, line 309)
02.03.2020 17:59:14 *DEBUG* HqlSqlBaseWalker: select << begin [level=1, statement=select] (HqlSqlBaseWalker.java, line 124)
02.03.2020 17:59:14 *DEBUG* FromElement: FromClause{level=1} : net.voicemail.mail.entity.User (generatedAlias0) -> user0_ (FromElement.java, line 149)
02.03.2020 17:59:14 *DEBUG* FromReferenceNode: Resolved : generatedAlias0 -> user0_.user_id (FromReferenceNode.java, line 60)
02.03.2020 17:59:14 *DEBUG* FromReferenceNode: Resolved : generatedAlias0 -> user0_.user_id (FromReferenceNode.java, line 60)
02.03.2020 17:59:14 *DEBUG* DotNode: getDataType() : userName -> org.hibernate.type.StringType@2baac4a7 (DotNode.java, line 698)
02.03.2020 17:59:14 *DEBUG* FromReferenceNode: Resolved : generatedAlias0.userName -> user0_.user_name (FromReferenceNode.java, line 60)
02.03.2020 17:59:14 *DEBUG* HqlSqlBaseWalker: select : finishing up [level=1, statement=select] (HqlSqlBaseWalker.java, line 128)
02.03.2020 17:59:14 *DEBUG* HqlSqlWalker: processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} voicemail.user user0_ ) ( where ( = ( user0_.user_name user0_.user_id userName ) ? ) ) ) (HqlSqlWalker.java, line 752)
02.03.2020 17:59:14 *DEBUG* JoinProcessor: Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [voicemail.user]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(net.voicemail.mail.entity.User)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(net.voicemail.mail.entity.User)
          | referencedTables: [voicemail.user]
          | path: generatedAlias0.userName
          | originalPropertyName: userName
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(net.voicemail.mail.entity.User)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: userName
          \-ParameterNode
 (JoinProcessor.java, line 126)
02.03.2020 17:59:14 *DEBUG* JoinProcessor: Using FROM fragment [voicemail.user user0_] (JoinProcessor.java, line 280)
02.03.2020 17:59:14 *DEBUG* HqlSqlBaseWalker: select >> end [level=1, statement=select] (HqlSqlBaseWalker.java, line 132)
02.03.2020 17:59:14 *DEBUG* QueryTranslatorImpl: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (voicemail.user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=net.voicemail.mail.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.user_email as user_ema2_1_, user0_.user_name as user_nam3_1_, user0_.user_password as user_pas4_1_, user0_.user_phone_number as user_pho5_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'voicemail.user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=voicemail.user,tableAlias=user0_,origin=null,columns={,className=net.voicemail.mail.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_name' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=generatedAlias0.userName,tableAlias=user0_,className=net.voicemail.mail.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=net.voicemail.mail.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2baac4a7}
 (QueryTranslatorImpl.java, line 275)
02.03.2020 17:59:14 *DEBUG* ErrorTracker: throwQueryException() : no errors (ErrorTracker.java, line 97)
02.03.2020 17:59:14 *DEBUG* QueryTranslatorImpl: HQL: select generatedAlias0 from net.voicemail.mail.entity.User as generatedAlias0 where generatedAlias0.userName=:param0 (QueryTranslatorImpl.java, line 254)
02.03.2020 17:59:14 *DEBUG* QueryTranslatorImpl: SQL: select user0_.user_id as user_id1_1_, user0_.user_email as user_ema2_1_, user0_.user_name as user_nam3_1_, user0_.user_password as user_pas4_1_, user0_.user_phone_number as user_pho5_1_ from voicemail.user user0_ where user0_.user_name=? (QueryTranslatorImpl.java, line 255)
02.03.2020 17:59:14 *DEBUG* ErrorTracker: throwQueryException() : no errors (ErrorTracker.java, line 97)
02.03.2020 17:59:14 *DEBUG* SQL: select user0_.user_id as user_id1_1_, user0_.user_email as user_ema2_1_, user0_.user_name as user_nam3_1_, user0_.user_password as user_pas4_1_, user0_.user_phone_number as user_pho5_1_ from voicemail.user user0_ where user0_.user_name=? (SqlStatementLogger.java, line 127)
02.03.2020 17:59:14 *DEBUG* TransactionImpl: rolling back (TransactionImpl.java, line 139)
02.03.2020 17:59:21 *DEBUG* TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false (TransactionImpl.java, line 53)
02.03.2020 17:59:21 *DEBUG* TransactionImpl: begin (TransactionImpl.java, line 81)
02.03.2020 17:59:21 *DEBUG* CriteriaQueryImpl: Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0 (CriteriaQueryImpl.java, line 299)
02.03.2020 17:59:21 *DEBUG* SQL: select user0_.user_id as user_id1_1_, user0_.user_email as user_ema2_1_, user0_.user_name as user_nam3_1_, user0_.user_password as user_pas4_1_, user0_.user_phone_number as user_pho5_1_ from voicemail.user user0_ where user0_.user_name=? (SqlStatementLogger.java, line 127)
02.03.2020 17:59:21 *DEBUG* TransactionImpl: rolling back (TransactionImpl.java, line 139)
02.03.2020 17:59:25 *DEBUG* TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false (TransactionImpl.java, line 53)
02.03.2020 17:59:25 *DEBUG* TransactionImpl: begin (TransactionImpl.java, line 81)
02.03.2020 17:59:25 *DEBUG* CriteriaQueryImpl: Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0 (CriteriaQueryImpl.java, line 299)
02.03.2020 17:59:25 *DEBUG* SQL: select user0_.user_id as user_id1_1_, user0_.user_email as user_ema2_1_, user0_.user_name as user_nam3_1_, user0_.user_password as user_pas4_1_, user0_.user_phone_number as user_pho5_1_ from voicemail.user user0_ where user0_.user_name=? (SqlStatementLogger.java, line 127)
02.03.2020 17:59:25 *DEBUG* TransactionImpl: rolling back (TransactionImpl.java, line 139)
02.03.2020 18:06:04 *INFO * Application: Starting Application on Deepak with PID 18854 (/home/deepak/Work/COS/voice-mail-system/target/classes started by deepak in /home/deepak/Work/COS/voice-mail-system) (StartupInfoLogger.java, line 55)
02.03.2020 18:06:04 *DEBUG* Application: Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE (StartupInfoLogger.java, line 56)
02.03.2020 18:06:04 *INFO * Application: No active profile set, falling back to default profiles: default (SpringApplication.java, line 651)
02.03.2020 18:06:05 *DEBUG* LogHelper: PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@5bc2b487
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/deepak/Work/COS/voice-mail-system/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		net.voicemail.mail.entity.Mail
		net.voicemail.mail.entity.User
		net.voicemail.mail.entity.UserMailMap]
	Mapping files names []
	Properties [] (LogHelper.java, line 102)
02.03.2020 18:06:05 *DEBUG* IntegratorServiceImpl: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. (IntegratorServiceImpl.java, line 46)
02.03.2020 18:06:05 *DEBUG* IntegratorServiceImpl: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. (IntegratorServiceImpl.java, line 46)
02.03.2020 18:06:05 *DEBUG* IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. (IntegratorServiceImpl.java, line 46)
02.03.2020 18:06:05 *INFO * Version: HHH000412: Hibernate Core {5.4.9.Final} (Version.java, line 46)
02.03.2020 18:06:05 *DEBUG* Environment: HHH000206: hibernate.properties not found (Environment.java, line 199)
02.03.2020 18:06:05 *DEBUG* ServiceBinding: Overriding existing service binding [org.hibernate.secure.spi.JaccService] (ServiceBinding.java, line 68)
02.03.2020 18:06:05 *DEBUG* RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered (RegionFactoryInitiator.java, line 118)
02.03.2020 18:06:05 *DEBUG* RegionFactoryInitiator: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory (RegionFactoryInitiator.java, line 49)
02.03.2020 18:06:05 *INFO * Version: HCANN000001: Hibernate Commons Annotations {5.1.0.Final} (JavaReflectionManager.java, line 49)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@418f0534 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@418f0534 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@418f0534 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2aa5bd48 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@1ec88aa1 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@6af78a48 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@6aff97d6 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@6aff97d6 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6aff97d6 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@5463f035 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@5463f035 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5463f035 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@130a6eb9 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@130a6eb9 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@130a6eb9 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@6ef4cbe1 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@6ef4cbe1 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6ef4cbe1 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@120df990 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@120df990 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@120df990 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@20a3e10c (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@20a3e10c (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@20a3e10c (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@73d62b5 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@73d62b5 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@73d62b5 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4466cf5d (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4466cf5d (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@71b97eeb (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@71b97eeb (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@478967eb (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@478967eb (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@760f1081 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@18c880ea (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@1abcd059 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1abcd059 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@105db94d (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@105db94d (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@440ef8d (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@440ef8d (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5e9bf744 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5e9bf744 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2b441e56 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2b441e56 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4f213a2 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4f213a2 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28daf506 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28daf506 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21d9cd04 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21d9cd04 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@642c6461 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@642c6461 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@1a88c4f5 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@1a88c4f5 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@33d230ce (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@33d230ce (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@5d7f8467 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5d7f8467 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5d7f8467 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7ddeb27f (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@7ab63838 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7ab63838 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7ab63838 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5ebbde60 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@15a8cebd (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@15a8cebd (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@3ffd4b12 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3ffd4b12 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@6793f752 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6793f752 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@633ddc0c (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@633ddc0c (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@54895681 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@54895681 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@935d3f9 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@37d699a1 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@37d699a1 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@37d699a1 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@23b1aa9 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@23b1aa9 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@23b1aa9 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@57a667c8 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@7f6b7426 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@6eda012b (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@6eda012b (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@6eda012b (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7661e474 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7661e474 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7661e474 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@2edb2f8b (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@a21c74 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@66020d69 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@66020d69 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@63124022 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@13e00016 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@13e00016 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@6c9a3661 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6c9a3661 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@56b1e527 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@664db2ca (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@1201769d (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@615b5480 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@615b5480 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3b218c74 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ddffa6c (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@42c54bad (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6bb4cc0e (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5cc1bf20 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2e3f324e (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@46cf8c07 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b56ec6c (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BootstrapContextImpl: Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@23648d2d] into BootstrapContext; was [null] (BootstrapContextImpl.java, line 262)
02.03.2020 18:06:05 *DEBUG* ClassLoaderAccessImpl: ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@23648d2d) [was null] (ClassLoaderAccessImpl.java, line 45)
02.03.2020 18:06:05 *DEBUG* BootstrapContextImpl: Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@30036a18] into BootstrapContext; was [null] (BootstrapContextImpl.java, line 272)
02.03.2020 18:06:05 *DEBUG* BootstrapContextImpl: Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@537b3b2e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1544ded3] (BootstrapContextImpl.java, line 267)
02.03.2020 18:06:05 *DEBUG* BootstrapContextImpl: Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@23648d2d] (BootstrapContextImpl.java, line 262)
02.03.2020 18:06:05 *DEBUG* ClassLoaderAccessImpl: ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@23648d2d] (ClassLoaderAccessImpl.java, line 45)
02.03.2020 18:06:05 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 18:06:05 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 18:06:05 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 18:06:05 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 18:06:05 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 18:06:05 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 18:06:05 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 18:06:05 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 18:06:05 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 18:06:05 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 18:06:05 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 18:06:05 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 18:06:05 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 18:06:05 *DEBUG* DefaultIdentifierGeneratorFactory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] (DefaultIdentifierGeneratorFactory.java, line 81)
02.03.2020 18:06:05 *DEBUG* JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 9.6.8
      major : 9
      minor : 6 (JdbcEnvironmentInitiator.java, line 72)
02.03.2020 18:06:05 *DEBUG* JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.4.1211
      major : 9
      minor : 4 (JdbcEnvironmentInitiator.java, line 83)
02.03.2020 18:06:05 *DEBUG* JdbcEnvironmentInitiator: JDBC version : 4.0 (DelegatingBasicLogger.java, line 389)
02.03.2020 18:06:05 *INFO * Dialect: HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL95Dialect (Dialect.java, line 172)
02.03.2020 18:06:05 *DEBUG* IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case (IdentifierHelperBuilder.java, line 108)
02.03.2020 18:06:05 *DEBUG* Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] (Namespace.java, line 51)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@20dd5870 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@20dd5870 (BasicTypeRegistry.java, line 156)
02.03.2020 18:06:05 *DEBUG* BasicTypeRegistry: HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@54895681 (BasicTypeRegistry.java, line 159)
02.03.2020 18:06:05 *DEBUG* TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@39851c5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2c7ad4f3] (TypeConfiguration.java, line 152)
02.03.2020 18:06:05 *DEBUG* AnnotationBinder: Binding entity from annotated class: net.voicemail.mail.entity.Mail (AnnotationBinder.java, line 557)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* EntityBinder: Import with entity name Mail (EntityBinder.java, line 430)
02.03.2020 18:06:05 *DEBUG* Namespace: Created database namespace [logicalName=Name{catalog=null, schema=voicemail}, physicalName=Name{catalog=null, schema=voicemail}] (Namespace.java, line 51)
02.03.2020 18:06:05 *DEBUG* EntityBinder: Bind entity net.voicemail.mail.entity.Mail on table mail (EntityBinder.java, line 873)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_id, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 18:06:05 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailId] (AbstractPropertyHolder.java, line 94)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: building SimpleValue for mailId (SimpleValueBinder.java, line 411)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: Building property mailId (PropertyBinder.java, line 266)
02.03.2020 18:06:05 *DEBUG* BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(mail_id)]), mailId, org.hibernate.id.enhanced.SequenceStyleGenerator, seq_gen, ...) (BinderHelper.java, line 644)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_created_date, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailCreatedDate with lazy=false (PropertyBinder.java, line 175)
02.03.2020 18:06:05 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailCreatedDate] (AbstractPropertyHolder.java, line 94)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: building SimpleValue for mailCreatedDate (SimpleValueBinder.java, line 411)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: Building property mailCreatedDate (PropertyBinder.java, line 266)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_from, insertable=true, updatable=true, unique=true} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailFrom with lazy=false (PropertyBinder.java, line 175)
02.03.2020 18:06:05 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailFrom] (AbstractPropertyHolder.java, line 94)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: building SimpleValue for mailFrom (SimpleValueBinder.java, line 411)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: Building property mailFrom (PropertyBinder.java, line 266)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_modified_date, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailModifiedDate with lazy=false (PropertyBinder.java, line 175)
02.03.2020 18:06:05 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailModifiedDate] (AbstractPropertyHolder.java, line 94)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: building SimpleValue for mailModifiedDate (SimpleValueBinder.java, line 411)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: Building property mailModifiedDate (PropertyBinder.java, line 266)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_status, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailStatus with lazy=false (PropertyBinder.java, line 175)
02.03.2020 18:06:05 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailStatus] (AbstractPropertyHolder.java, line 94)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: building SimpleValue for mailStatus (SimpleValueBinder.java, line 411)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: Building property mailStatus (PropertyBinder.java, line 266)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_subject_name, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailSubjectName with lazy=false (PropertyBinder.java, line 175)
02.03.2020 18:06:05 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailSubjectName] (AbstractPropertyHolder.java, line 94)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: building SimpleValue for mailSubjectName (SimpleValueBinder.java, line 411)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: Building property mailSubjectName (PropertyBinder.java, line 266)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.mail), mappingColumn=mail_to, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailTo with lazy=false (PropertyBinder.java, line 175)
02.03.2020 18:06:05 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.Mail:mailTo] (AbstractPropertyHolder.java, line 94)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: building SimpleValue for mailTo (SimpleValueBinder.java, line 411)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: Building property mailTo (PropertyBinder.java, line 266)
02.03.2020 18:06:05 *DEBUG* AnnotationBinder: Binding entity from annotated class: net.voicemail.mail.entity.User (AnnotationBinder.java, line 557)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* EntityBinder: Import with entity name User (EntityBinder.java, line 430)
02.03.2020 18:06:05 *DEBUG* EntityBinder: Bind entity net.voicemail.mail.entity.User on table user (EntityBinder.java, line 873)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_id, insertable=true, updatable=true, unique=true} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: MetadataSourceProcessor property userId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 18:06:05 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userId] (AbstractPropertyHolder.java, line 94)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: building SimpleValue for userId (SimpleValueBinder.java, line 411)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: Building property userId (PropertyBinder.java, line 266)
02.03.2020 18:06:05 *DEBUG* BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, user_id_generator, ...) (BinderHelper.java, line 644)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_email, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: MetadataSourceProcessor property userEmail with lazy=false (PropertyBinder.java, line 175)
02.03.2020 18:06:05 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userEmail] (AbstractPropertyHolder.java, line 94)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: building SimpleValue for userEmail (SimpleValueBinder.java, line 411)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: Building property userEmail (PropertyBinder.java, line 266)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_name, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: MetadataSourceProcessor property userName with lazy=false (PropertyBinder.java, line 175)
02.03.2020 18:06:05 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userName] (AbstractPropertyHolder.java, line 94)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: building SimpleValue for userName (SimpleValueBinder.java, line 411)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: Building property userName (PropertyBinder.java, line 266)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_password, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: MetadataSourceProcessor property userPassword with lazy=false (PropertyBinder.java, line 175)
02.03.2020 18:06:05 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userPassword] (AbstractPropertyHolder.java, line 94)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: building SimpleValue for userPassword (SimpleValueBinder.java, line 411)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: Building property userPassword (PropertyBinder.java, line 266)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user), mappingColumn=user_phone_number, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: MetadataSourceProcessor property userPhoneNumber with lazy=false (PropertyBinder.java, line 175)
02.03.2020 18:06:05 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.User:userPhoneNumber] (AbstractPropertyHolder.java, line 94)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: building SimpleValue for userPhoneNumber (SimpleValueBinder.java, line 411)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: Building property userPhoneNumber (PropertyBinder.java, line 266)
02.03.2020 18:06:05 *DEBUG* AnnotationBinder: Binding entity from annotated class: net.voicemail.mail.entity.UserMailMap (AnnotationBinder.java, line 557)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* EntityBinder: Import with entity name UserMailMap (EntityBinder.java, line 430)
02.03.2020 18:06:05 *DEBUG* EntityBinder: Bind entity net.voicemail.mail.entity.UserMailMap on table user_mail_map (EntityBinder.java, line 873)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user_mail_map), mappingColumn=user_mail_map_id, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: MetadataSourceProcessor property userMailMapId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 18:06:05 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.UserMailMap:userMailMapId] (AbstractPropertyHolder.java, line 94)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: building SimpleValue for userMailMapId (SimpleValueBinder.java, line 411)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: Building property userMailMapId (PropertyBinder.java, line 266)
02.03.2020 18:06:05 *WARN * InFlightMetadataCollectorImpl: HHH000069: Duplicate generator name seq_gen (InFlightMetadataCollectorImpl.java, line 489)
02.03.2020 18:06:05 *DEBUG* BinderHelper: #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_mail_map_id)]), userMailMapId, org.hibernate.id.enhanced.SequenceStyleGenerator, seq_gen, ...) (BinderHelper.java, line 644)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user_mail_map), mappingColumn=mail_id, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: MetadataSourceProcessor property mailId with lazy=false (PropertyBinder.java, line 175)
02.03.2020 18:06:05 *DEBUG* AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [net.voicemail.mail.entity.UserMailMap:mailId] (AbstractPropertyHolder.java, line 94)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: building SimpleValue for mailId (SimpleValueBinder.java, line 411)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: Building property mailId (PropertyBinder.java, line 266)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* Ejb3Column: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(voicemail.user_mail_map), mappingColumn=user, insertable=true, updatable=true, unique=false} (Ejb3Column.java, line 213)
02.03.2020 18:06:05 *DEBUG* PropertyBinder: Building property user (PropertyBinder.java, line 266)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailId (SimpleValueBinder.java, line 456)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailCreatedDate (SimpleValueBinder.java, line 456)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailFrom (SimpleValueBinder.java, line 456)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailModifiedDate (SimpleValueBinder.java, line 456)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailStatus (SimpleValueBinder.java, line 456)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailSubjectName (SimpleValueBinder.java, line 456)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailTo (SimpleValueBinder.java, line 456)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userId (SimpleValueBinder.java, line 456)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userEmail (SimpleValueBinder.java, line 456)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userName (SimpleValueBinder.java, line 456)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userPassword (SimpleValueBinder.java, line 456)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userPhoneNumber (SimpleValueBinder.java, line 456)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for userMailMapId (SimpleValueBinder.java, line 456)
02.03.2020 18:06:05 *DEBUG* SimpleValueBinder: Starting fillSimpleValue for mailId (SimpleValueBinder.java, line 456)
02.03.2020 18:06:05 *DEBUG* PrimaryKey: Forcing column [mail_id] to be non-null as it is part of the primary key for table [mail] (PrimaryKey.java, line 35)
02.03.2020 18:06:05 *DEBUG* PrimaryKey: Forcing column [user_id] to be non-null as it is part of the primary key for table [user] (PrimaryKey.java, line 35)
02.03.2020 18:06:05 *DEBUG* PrimaryKey: Forcing column [user_mail_map_id] to be non-null as it is part of the primary key for table [user_mail_map] (PrimaryKey.java, line 35)
02.03.2020 18:06:05 *DEBUG* InFlightMetadataCollectorImpl: Resolving reference to class: net.voicemail.mail.entity.User (InFlightMetadataCollectorImpl.java, line 1860)
02.03.2020 18:06:05 *DEBUG* InFlightMetadataCollectorImpl: Resolving reference to class: net.voicemail.mail.entity.User (InFlightMetadataCollectorImpl.java, line 1860)
02.03.2020 18:06:06 *DEBUG* SessionFactoryImpl: Building session factory (SessionFactoryImpl.java, line 207)
02.03.2020 18:06:06 *DEBUG* Settings: SessionFactory name : null (Settings.java, line 68)
02.03.2020 18:06:06 *DEBUG* Settings: Automatic flush during beforeCompletion(): enabled (Settings.java, line 69)
02.03.2020 18:06:06 *DEBUG* Settings: Automatic session close at end of transaction: disabled (Settings.java, line 70)
02.03.2020 18:06:06 *DEBUG* Settings: Statistics: disabled (Settings.java, line 72)
02.03.2020 18:06:06 *DEBUG* Settings: Deleted entity synthetic identifier rollback: disabled (Settings.java, line 74)
02.03.2020 18:06:06 *DEBUG* Settings: Default entity-mode: pojo (Settings.java, line 75)
02.03.2020 18:06:06 *DEBUG* Settings: Check Nullability in Core (should be disabled when Bean Validation is on): enabled (Settings.java, line 76)
02.03.2020 18:06:06 *DEBUG* Settings: Allow initialization of lazy state outside session : disabled (Settings.java, line 77)
02.03.2020 18:06:06 *DEBUG* Settings: Using BatchFetchStyle : LEGACY (Settings.java, line 79)
02.03.2020 18:06:06 *DEBUG* Settings: Default batch fetch size: -1 (Settings.java, line 80)
02.03.2020 18:06:06 *DEBUG* Settings: Maximum outer join fetch depth: null (Settings.java, line 81)
02.03.2020 18:06:06 *DEBUG* Settings: Default null ordering: NONE (Settings.java, line 82)
02.03.2020 18:06:06 *DEBUG* Settings: Order SQL updates by primary key: disabled (Settings.java, line 83)
02.03.2020 18:06:06 *DEBUG* Settings: Order SQL inserts for batching: disabled (Settings.java, line 84)
02.03.2020 18:06:06 *DEBUG* Settings: multi-tenancy strategy : NONE (Settings.java, line 86)
02.03.2020 18:06:06 *DEBUG* Settings: JTA Track by Thread: enabled (Settings.java, line 88)
02.03.2020 18:06:06 *DEBUG* Settings: Query language substitutions: {} (Settings.java, line 90)
02.03.2020 18:06:06 *DEBUG* Settings: Named query checking : enabled (Settings.java, line 91)
02.03.2020 18:06:06 *DEBUG* Settings: Second-level cache: disabled (Settings.java, line 93)
02.03.2020 18:06:06 *DEBUG* Settings: Second-level query cache: disabled (Settings.java, line 94)
02.03.2020 18:06:06 *DEBUG* Settings: Second-level query cache factory: null (Settings.java, line 95)
02.03.2020 18:06:06 *DEBUG* Settings: Second-level cache region prefix: null (Settings.java, line 96)
02.03.2020 18:06:06 *DEBUG* Settings: Optimize second-level cache for minimal puts: disabled (Settings.java, line 97)
02.03.2020 18:06:06 *DEBUG* Settings: Structured second-level cache entries: disabled (Settings.java, line 98)
02.03.2020 18:06:06 *DEBUG* Settings: Second-level cache direct-reference entries: disabled (Settings.java, line 99)
02.03.2020 18:06:06 *DEBUG* Settings: Automatic eviction of collection cache: disabled (Settings.java, line 100)
02.03.2020 18:06:06 *DEBUG* Settings: JDBC batch size: 15 (Settings.java, line 102)
02.03.2020 18:06:06 *DEBUG* Settings: JDBC batch updates for versioned data: enabled (Settings.java, line 103)
02.03.2020 18:06:06 *DEBUG* Settings: Scrollable result sets: enabled (Settings.java, line 104)
02.03.2020 18:06:06 *DEBUG* Settings: Wrap result sets: disabled (Settings.java, line 105)
02.03.2020 18:06:06 *DEBUG* Settings: JDBC3 getGeneratedKeys(): enabled (Settings.java, line 106)
02.03.2020 18:06:06 *DEBUG* Settings: JDBC result set fetch size: null (Settings.java, line 107)
02.03.2020 18:06:06 *DEBUG* Settings: Connection release mode: ON_CLOSE (Settings.java, line 108)
02.03.2020 18:06:06 *DEBUG* Settings: Generate SQL with comments: disabled (Settings.java, line 109)
02.03.2020 18:06:06 *DEBUG* Settings: JPA compliance - query :  (Settings.java, line 111)
02.03.2020 18:06:06 *DEBUG* Settings: JPA compliance - closed-handling :  (Settings.java, line 112)
02.03.2020 18:06:06 *DEBUG* Settings: JPA compliance - lists :  (Settings.java, line 113)
02.03.2020 18:06:06 *DEBUG* Settings: JPA compliance - transactions :  (Settings.java, line 114)
02.03.2020 18:06:06 *DEBUG* SessionFactoryImpl: Session factory constructed with filter configurations : {} (SessionFactoryImpl.java, line 262)
02.03.2020 18:06:06 *DEBUG* SessionFactoryImpl: Instantiating session factory with properties: {hibernate.id.new_generator_mappings=true, java.specification.version=13, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@380fdcf2, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/home/deepak/Work/COS/voice-mail-system/target/classes:/home/deepak/.m2/repository/org/postgresql/postgresql/9.4.1211/postgresql-9.4.1211.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.2.2.RELEASE/spring-boot-starter-data-jpa-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.2.2.RELEASE/spring-boot-starter-aop-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-aop/5.2.2.RELEASE/spring-aop-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/aspectj/aspectjweaver/1.9.5/aspectjweaver-1.9.5.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.2.2.RELEASE/spring-boot-starter-jdbc-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/com/zaxxer/HikariCP/3.4.1/HikariCP-3.4.1.jar:/home/deepak/.m2/repository/org/springframework/spring-jdbc/5.2.2.RELEASE/spring-jdbc-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/home/deepak/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/home/deepak/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/home/deepak/.m2/repository/org/hibernate/hibernate-core/5.4.9.Final/hibernate-core-5.4.9.Final.jar:/home/deepak/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/deepak/.m2/repository/net/bytebuddy/byte-buddy/1.10.2/byte-buddy-1.10.2.jar:/home/deepak/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/deepak/.m2/repository/org/jboss/jandex/2.1.1.Final/jandex-2.1.1.Final.jar:/home/deepak/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/deepak/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/deepak/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/deepak/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/deepak/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/deepak/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/deepak/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/deepak/.m2/repository/org/springframework/data/spring-data-jpa/2.2.3.RELEASE/spring-data-jpa-2.2.3.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/data/spring-data-commons/2.2.3.RELEASE/spring-data-commons-2.2.3.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-orm/5.2.2.RELEASE/spring-orm-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-context/5.2.2.RELEASE/spring-context-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-tx/5.2.2.RELEASE/spring-tx-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-beans/5.2.2.RELEASE/spring-beans-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-aspects/5.2.2.RELEASE/spring-aspects-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter/2.2.2.RELEASE/spring-boot-starter-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot/2.2.2.RELEASE/spring-boot-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.2.2.RELEASE/spring-boot-autoconfigure-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/deepak/.m2/repository/org/springframework/spring-core/5.2.2.RELEASE/spring-core-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-jcl/5.2.2.RELEASE/spring-jcl-5.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.2.0.RELEASE/spring-boot-starter-web-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.2.0.RELEASE/spring-boot-starter-json-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.10.0/jackson-datatype-jdk8-2.10.0.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.10.0/jackson-datatype-jsr310-2.10.0.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.10.0/jackson-module-parameter-names-2.10.0.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.2.0.RELEASE/spring-boot-starter-tomcat-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.27/tomcat-embed-core-9.0.27.jar:/home/deepak/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.27/tomcat-embed-el-9.0.27.jar:/home/deepak/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.27/tomcat-embed-websocket-9.0.27.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.2.0.RELEASE/spring-boot-starter-validation-2.2.0.RELEASE.jar:/home/deepak/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.1/jakarta.validation-api-2.0.1.jar:/home/deepak/.m2/repository/org/springframework/spring-web/5.2.0.RELEASE/spring-web-5.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-webmvc/5.2.0.RELEASE/spring-webmvc-5.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/spring-expression/5.2.0.RELEASE/spring-expression-5.2.0.RELEASE.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/2.2.2.RELEASE/spring-boot-starter-thymeleaf-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/thymeleaf/thymeleaf-spring5/3.0.11.RELEASE/thymeleaf-spring5-3.0.11.RELEASE.jar:/home/deepak/.m2/repository/org/thymeleaf/thymeleaf/3.0.11.RELEASE/thymeleaf-3.0.11.RELEASE.jar:/home/deepak/.m2/repository/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE.jar:/home/deepak/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/home/deepak/.m2/repository/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.4.RELEASE/thymeleaf-extras-java8time-3.0.4.RELEASE.jar:/home/deepak/.m2/repository/nz/net/ultraq/thymeleaf/thymeleaf-layout-dialect/2.4.1/thymeleaf-layout-dialect-2.4.1.jar:/home/deepak/.m2/repository/nz/net/ultraq/thymeleaf/thymeleaf-expression-processor/1.1.3/thymeleaf-expression-processor-1.1.3.jar:/home/deepak/.m2/repository/org/codehaus/groovy/groovy/2.4.13/groovy-2.4.13.jar:/home/deepak/.m2/repository/org/webjars/bootstrap/4.2.1/bootstrap-4.2.1.jar:/home/deepak/.m2/repository/org/webjars/popper.js/1.14.3/popper.js-1.14.3.jar:/home/deepak/.m2/repository/org/webjars/jquery/3.4.1/jquery-3.4.1.jar:/home/deepak/.m2/repository/org/springframework/boot/spring-boot-starter-log4j2/2.2.2.RELEASE/spring-boot-starter-log4j2-2.2.2.RELEASE.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-jul/2.12.1/log4j-jul-2.12.1.jar:/home/deepak/.m2/repository/org/slf4j/jul-to-slf4j/1.7.29/jul-to-slf4j-1.7.29.jar:/home/deepak/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-apt/4.2.1/querydsl-apt-4.2.1.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-codegen/4.2.1/querydsl-codegen-4.2.1.jar:/home/deepak/.m2/repository/com/mysema/codegen/codegen/0.6.8/codegen-0.6.8.jar:/home/deepak/.m2/repository/org/eclipse/jdt/core/compiler/ecj/4.3.1/ecj-4.3.1.jar:/home/deepak/.m2/repository/org/reflections/reflections/0.9.9/reflections-0.9.9.jar:/home/deepak/.m2/repository/com/google/code/findbugs/annotations/2.0.1/annotations-2.0.1.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-jpa/4.2.1/querydsl-jpa-4.2.1.jar:/home/deepak/.m2/repository/com/querydsl/querydsl-core/4.2.1/querydsl-core-4.2.1.jar:/home/deepak/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar:/home/deepak/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/deepak/.m2/repository/com/mysema/commons/mysema-commons-lang/0.2.4/mysema-commons-lang-0.2.4.jar:/home/deepak/.m2/repository/com/infradna/tool/bridge-method-annotation/1.13/bridge-method-annotation-1.13.jar:/home/deepak/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.2/jackson-databind-2.9.2.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.2/jackson-core-2.9.2.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.5/log4j-slf4j-impl-2.5.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-api/2.5/log4j-api-2.5.jar:/home/deepak/.m2/repository/org/apache/logging/log4j/log4j-core/2.5/log4j-core-2.5.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.2/jackson-annotations-2.9.2.jar:/home/deepak/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.9.2/jackson-dataformat-yaml-2.9.2.jar:/home/deepak/.m2/repository/org/yaml/snakeyaml/1.18/snakeyaml-1.18.jar:/home/deepak/.m2/repository/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar:/home/deepak/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.2.Final/hibernate-validator-6.0.2.Final.jar:/home/deepak/.m2/repository/javax/validation/validation-api/2.0.0.Final/validation-api-2.0.0.Final.jar:/home/deepak/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/deepak/.m2/repository/com/fasterxml/classmate/1.3.1/classmate-1.3.1.jar:/home/deepak/.m2/repository/org/hibernate/validator/hibernate-validator-annotation-processor/6.0.2.Final/hibernate-validator-annotation-processor-6.0.2.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Kolkata, java.vm.specification.version=13, os.name=Linux, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/local/jdk-13.0.2/lib, sun.java.command=net.voicemail.Application, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@114b203, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/home/deepak, spring.boot.project.name=voice-mail-system, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/usr/local/jdk-13.0.2, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, hibernate.hbm2ddl.auto=validate, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=deepak, path.separator=:, os.version=5.3.0-40-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/tmp, catalina.home=/tmp/tomcat.2830980607922087220.8080, java.version=13.0.2, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/home/deepak/Work/COS/voice-mail-system, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=18854, catalina.base=/tmp/tomcat.2830980607922087220.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@8d810f2, java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=57.0} (SessionFactoryImpl.java, line 263)
02.03.2020 18:06:06 *DEBUG* DefaultTraversableResolver: Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver (DefaultTraversableResolver.java, line 103)
02.03.2020 18:06:06 *DEBUG* DefaultTraversableResolver: Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. (DefaultTraversableResolver.java, line 114)
02.03.2020 18:06:06 *DEBUG* ValidationXmlParser: Trying to load META-INF/validation.xml for XML based Validator configuration. (ValidationXmlParser.java, line 130)
02.03.2020 18:06:06 *DEBUG* ResourceLoaderHelper: Trying to load META-INF/validation.xml via TCCL (ResourceLoaderHelper.java, line 58)
02.03.2020 18:06:06 *DEBUG* ResourceLoaderHelper: Trying to load META-INF/validation.xml via Hibernate Validator's class loader (ResourceLoaderHelper.java, line 64)
02.03.2020 18:06:06 *DEBUG* ValidationXmlParser: No META-INF/validation.xml found. Using annotation based configuration only. (ValidationXmlParser.java, line 137)
02.03.2020 18:06:06 *DEBUG* ResourceBundleMessageInterpolator: Loaded expression factory via original TCCL (ResourceBundleMessageInterpolator.java, line 88)
02.03.2020 18:06:06 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.Mail] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 18:06:06 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.Mail (ClassLoaderAccessImpl.java, line 62)
02.03.2020 18:06:06 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.User] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 18:06:06 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.User (ClassLoaderAccessImpl.java, line 62)
02.03.2020 18:06:06 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.UserMailMap] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 18:06:06 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.UserMailMap (ClassLoaderAccessImpl.java, line 62)
02.03.2020 18:06:06 *DEBUG* JaccIntegrator: Skipping JACC integration as it was not enabled (JaccIntegrator.java, line 80)
02.03.2020 18:06:06 *DEBUG* SessionFactoryImpl: Instantiated session factory (SessionFactoryImpl.java, line 302)
02.03.2020 18:06:06 *DEBUG* TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@39851c5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@36d7a68a] (TypeConfiguration.java, line 157)
02.03.2020 18:06:06 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.Mail] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 18:06:06 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.Mail (ClassLoaderAccessImpl.java, line 62)
02.03.2020 18:06:06 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.Mail] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 18:06:06 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.Mail (ClassLoaderAccessImpl.java, line 62)
02.03.2020 18:06:06 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.User] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 18:06:06 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.User (ClassLoaderAccessImpl.java, line 62)
02.03.2020 18:06:06 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.User] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 18:06:06 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.User (ClassLoaderAccessImpl.java, line 62)
02.03.2020 18:06:06 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.UserMailMap] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 18:06:06 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.UserMailMap (ClassLoaderAccessImpl.java, line 62)
02.03.2020 18:06:06 *DEBUG* ClassLoaderAccessImpl: Not known whether passed class name [net.voicemail.mail.entity.UserMailMap] is safe (ClassLoaderAccessImpl.java, line 60)
02.03.2020 18:06:06 *DEBUG* ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.voicemail.mail.entity.UserMailMap (ClassLoaderAccessImpl.java, line 62)
02.03.2020 18:06:06 *DEBUG* AbstractEntityPersister: Static SQL for entity: net.voicemail.mail.entity.Mail (AbstractEntityPersister.java, line 3818)
02.03.2020 18:06:06 *DEBUG* AbstractEntityPersister:  Version select: select mail_id from voicemail.mail where mail_id =? (AbstractEntityPersister.java, line 3823)
02.03.2020 18:06:06 *DEBUG* AbstractEntityPersister:  Snapshot select: select mail_.mail_id, mail_.mail_created_date as mail_cre2_0_, mail_.mail_from as mail_fro3_0_, mail_.mail_modified_date as mail_mod4_0_, mail_.mail_status as mail_sta5_0_, mail_.mail_subject_name as mail_sub6_0_, mail_.mail_to as mail_to7_0_ from voicemail.mail mail_ where mail_.mail_id=? (AbstractEntityPersister.java, line 3826)
02.03.2020 18:06:06 *DEBUG* AbstractEntityPersister:  Insert 0: insert into voicemail.mail (mail_created_date, mail_from, mail_modified_date, mail_status, mail_subject_name, mail_to, mail_id) values (?, ?, ?, ?, ?, ?, ?) (DelegatingBasicLogger.java, line 394)
02.03.2020 18:06:06 *DEBUG* AbstractEntityPersister:  Update 0: update voicemail.mail set mail_created_date=?, mail_from=?, mail_modified_date=?, mail_status=?, mail_subject_name=?, mail_to=? where mail_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 18:06:06 *DEBUG* AbstractEntityPersister:  Delete 0: delete from voicemail.mail where mail_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 18:06:06 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@df432ec] (QuerySpacesImpl.java, line 174)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailCreatedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailFrom (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailModifiedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailStatus (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailSubjectName (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailTo (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 18:06:06 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 18:06:06 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.Mail)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.Mail, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.Mail)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.Mail)
          - SQL table alias mapping - mail0_
          - alias suffix - 0_
          - suffixed key columns - {mail_id1_0_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 18:06:06 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.Mail [NONE]: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (EntityLoader.java, line 137)
02.03.2020 18:06:06 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bfe83d] (QuerySpacesImpl.java, line 174)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailCreatedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailFrom (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailModifiedDate (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailStatus (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailSubjectName (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailTo (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 18:06:06 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 18:06:06 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.Mail)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.Mail, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.Mail)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.Mail)
          - SQL table alias mapping - mail0_
          - alias suffix - 0_
          - suffixed key columns - {mail_id1_0_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 18:06:06 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.Mail [READ]: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (EntityLoader.java, line 137)
02.03.2020 18:06:06 *DEBUG* Loader: Static select for action ACTION_MERGE on entity net.voicemail.mail.entity.Mail: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 18:06:06 *DEBUG* Loader: Static select for action ACTION_REFRESH on entity net.voicemail.mail.entity.Mail: select mail0_.mail_id as mail_id1_0_0_, mail0_.mail_created_date as mail_cre2_0_0_, mail0_.mail_from as mail_fro3_0_0_, mail0_.mail_modified_date as mail_mod4_0_0_, mail0_.mail_status as mail_sta5_0_0_, mail0_.mail_subject_name as mail_sub6_0_0_, mail0_.mail_to as mail_to7_0_0_ from voicemail.mail mail0_ where mail0_.mail_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 18:06:06 *DEBUG* AbstractEntityPersister: Static SQL for entity: net.voicemail.mail.entity.User (AbstractEntityPersister.java, line 3818)
02.03.2020 18:06:06 *DEBUG* AbstractEntityPersister:  Version select: select user_id from voicemail.user where user_id =? (AbstractEntityPersister.java, line 3823)
02.03.2020 18:06:06 *DEBUG* AbstractEntityPersister:  Snapshot select: select user_.user_id, user_.user_email as user_ema2_1_, user_.user_name as user_nam3_1_, user_.user_password as user_pas4_1_, user_.user_phone_number as user_pho5_1_ from voicemail.user user_ where user_.user_id=? (AbstractEntityPersister.java, line 3826)
02.03.2020 18:06:06 *DEBUG* AbstractEntityPersister:  Insert 0: insert into voicemail.user (user_email, user_name, user_password, user_phone_number, user_id) values (?, ?, ?, ?, ?) (DelegatingBasicLogger.java, line 394)
02.03.2020 18:06:06 *DEBUG* AbstractEntityPersister:  Update 0: update voicemail.user set user_email=?, user_name=?, user_password=?, user_phone_number=? where user_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 18:06:06 *DEBUG* AbstractEntityPersister:  Delete 0: delete from voicemail.user where user_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 18:06:06 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@565a6af] (QuerySpacesImpl.java, line 174)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userName (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 18:06:06 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 18:06:06 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.User)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 18:06:06 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (EntityLoader.java, line 137)
02.03.2020 18:06:06 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cded2cd] (QuerySpacesImpl.java, line 174)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userName (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 18:06:06 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 18:06:06 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.User)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 18:06:06 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (EntityLoader.java, line 137)
02.03.2020 18:06:06 *DEBUG* Loader: Static select for action ACTION_MERGE on entity net.voicemail.mail.entity.User: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 18:06:06 *DEBUG* Loader: Static select for action ACTION_REFRESH on entity net.voicemail.mail.entity.User: select user0_.user_id as user_id1_1_0_, user0_.user_email as user_ema2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_password as user_pas4_1_0_, user0_.user_phone_number as user_pho5_1_0_ from voicemail.user user0_ where user0_.user_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 18:06:06 *DEBUG* AbstractEntityPersister: Static SQL for entity: net.voicemail.mail.entity.UserMailMap (AbstractEntityPersister.java, line 3818)
02.03.2020 18:06:06 *DEBUG* AbstractEntityPersister:  Version select: select user_mail_map_id from voicemail.user_mail_map where user_mail_map_id =? (AbstractEntityPersister.java, line 3823)
02.03.2020 18:06:06 *DEBUG* AbstractEntityPersister:  Snapshot select: select usermailma_.user_mail_map_id, usermailma_.mail_id as mail_id2_2_, usermailma_.user_id as user_id3_2_ from voicemail.user_mail_map usermailma_ where usermailma_.user_mail_map_id=? (AbstractEntityPersister.java, line 3826)
02.03.2020 18:06:06 *DEBUG* AbstractEntityPersister:  Insert 0: insert into voicemail.user_mail_map (mail_id, user_id, user_mail_map_id) values (?, ?, ?) (DelegatingBasicLogger.java, line 394)
02.03.2020 18:06:06 *DEBUG* AbstractEntityPersister:  Update 0: update voicemail.user_mail_map set mail_id=?, user_id=? where user_mail_map_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 18:06:06 *DEBUG* AbstractEntityPersister:  Delete 0: delete from voicemail.user_mail_map where user_mail_map_id=? (DelegatingBasicLogger.java, line 394)
02.03.2020 18:06:06 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a9c92b5] (QuerySpacesImpl.java, line 174)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailId (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1de6dc80] (QuerySpacesImpl.java, line 174)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userName (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 18:06:06 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 18:06:06 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.UserMailMap)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.UserMailMap, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.UserMailMap)
          - EntityAttributeFetchImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:1>, path=net.voicemail.mail.entity.UserMailMap.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.UserMailMap)
          - SQL table alias mapping - usermailma0_
          - alias suffix - 0_
          - suffixed key columns - {user_mai1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=net.voicemail.mail.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 18:06:06 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.UserMailMap [NONE]: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_, user1_.user_id as user_id1_1_1_, user1_.user_email as user_ema2_1_1_, user1_.user_name as user_nam3_1_1_, user1_.user_password as user_pas4_1_1_, user1_.user_phone_number as user_pho5_1_1_ from voicemail.user_mail_map usermailma0_ left outer join voicemail.user user1_ on usermailma0_.user_id=user1_.user_id where usermailma0_.user_mail_map_id=? (EntityLoader.java, line 137)
02.03.2020 18:06:06 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cb82b09] (QuerySpacesImpl.java, line 174)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : mailId (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* QuerySpacesImpl: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b68932b] (QuerySpacesImpl.java, line 174)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userEmail (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userName (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPassword (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* MetamodelGraphWalker: Visiting attribute path : user.userPhoneNumber (MetamodelGraphWalker.java, line 146)
02.03.2020 18:06:06 *DEBUG* FetchStyleLoadPlanBuildingAssociationVisitationStrategy: Building LoadPlan... (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java, line 150)
02.03.2020 18:06:06 *DEBUG* LoadQueryJoinAndFetchProcessor: processing queryspace <gen:0> (LoadQueryJoinAndFetchProcessor.java, line 102)
02.03.2020 18:06:06 *DEBUG* LoadPlanTreePrinter: LoadPlan(entity=net.voicemail.mail.entity.UserMailMap)
    - Returns
       - EntityReturnImpl(entity=net.voicemail.mail.entity.UserMailMap, querySpaceUid=<gen:0>, path=net.voicemail.mail.entity.UserMailMap)
          - EntityAttributeFetchImpl(entity=net.voicemail.mail.entity.User, querySpaceUid=<gen:1>, path=net.voicemail.mail.entity.UserMailMap.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=net.voicemail.mail.entity.UserMailMap)
          - SQL table alias mapping - usermailma0_
          - alias suffix - 0_
          - suffixed key columns - {user_mai1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=net.voicemail.mail.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
 (LoadPlanTreePrinter.java, line 55)
02.03.2020 18:06:06 *DEBUG* EntityLoader: Static select for entity net.voicemail.mail.entity.UserMailMap [READ]: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_, user1_.user_id as user_id1_1_1_, user1_.user_email as user_ema2_1_1_, user1_.user_name as user_nam3_1_1_, user1_.user_password as user_pas4_1_1_, user1_.user_phone_number as user_pho5_1_1_ from voicemail.user_mail_map usermailma0_ left outer join voicemail.user user1_ on usermailma0_.user_id=user1_.user_id where usermailma0_.user_mail_map_id=? (EntityLoader.java, line 137)
02.03.2020 18:06:06 *DEBUG* Loader: Static select for action ACTION_MERGE on entity net.voicemail.mail.entity.UserMailMap: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_ from voicemail.user_mail_map usermailma0_ where usermailma0_.user_mail_map_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 18:06:06 *DEBUG* Loader: Static select for action ACTION_REFRESH on entity net.voicemail.mail.entity.UserMailMap: select usermailma0_.user_mail_map_id as user_mai1_2_0_, usermailma0_.mail_id as mail_id2_2_0_, usermailma0_.user_id as user_id3_2_0_ from voicemail.user_mail_map usermailma0_ where usermailma0_.user_mail_map_id=? (CascadeEntityLoader.java, line 38)
02.03.2020 18:06:06 *INFO * JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] (JtaPlatformInitiator.java, line 52)
02.03.2020 18:06:06 *DEBUG* NamedQueryRepository: Checking 0 named HQL queries (NamedQueryRepository.java, line 151)
02.03.2020 18:06:06 *DEBUG* NamedQueryRepository: Checking 0 named SQL queries (NamedQueryRepository.java, line 167)
02.03.2020 18:06:06 *DEBUG* SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@75063bd0 (SessionFactoryRegistry.java, line 52)
02.03.2020 18:06:06 *DEBUG* SessionFactoryRegistry: Registering SessionFactory: fe5cb613-4ec4-4320-8607-f2489cf213f8 (<unnamed>) (SessionFactoryRegistry.java, line 74)
02.03.2020 18:06:06 *DEBUG* SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured (SessionFactoryRegistry.java, line 81)
02.03.2020 18:06:06 *DEBUG* StatisticsInitiator: Statistics initialized [enabled=false] (StatisticsInitiator.java, line 101)
02.03.2020 18:06:06 *DEBUG* TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false (TransactionImpl.java, line 53)
02.03.2020 18:06:06 *DEBUG* DefaultTraversableResolver: Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver (DefaultTraversableResolver.java, line 103)
02.03.2020 18:06:06 *DEBUG* DefaultTraversableResolver: Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. (DefaultTraversableResolver.java, line 114)
02.03.2020 18:06:06 *DEBUG* ResourceBundleMessageInterpolator: Loaded expression factory via original TCCL (ResourceBundleMessageInterpolator.java, line 88)
02.03.2020 18:06:06 *DEBUG* DefaultTraversableResolver: Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver (DefaultTraversableResolver.java, line 103)
02.03.2020 18:06:06 *DEBUG* DefaultTraversableResolver: Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. (DefaultTraversableResolver.java, line 114)
02.03.2020 18:06:06 *DEBUG* ConfigurationImpl: Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator (ConfigurationImpl.java, line 140)
02.03.2020 18:06:06 *DEBUG* ConfigurationImpl: Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory (ConfigurationImpl.java, line 162)
02.03.2020 18:06:06 *DEBUG* ConfigurationImpl: Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1 (ConfigurationImpl.java, line 176)
02.03.2020 18:06:06 *DEBUG* ValidationXmlParser: Trying to load META-INF/validation.xml for XML based Validator configuration. (ValidationXmlParser.java, line 130)
02.03.2020 18:06:06 *DEBUG* ResourceLoaderHelper: Trying to load META-INF/validation.xml via user class loader (ResourceLoaderHelper.java, line 51)
02.03.2020 18:06:06 *DEBUG* ResourceLoaderHelper: Trying to load META-INF/validation.xml via TCCL (ResourceLoaderHelper.java, line 58)
02.03.2020 18:06:06 *DEBUG* ResourceLoaderHelper: Trying to load META-INF/validation.xml via Hibernate Validator's class loader (ResourceLoaderHelper.java, line 64)
02.03.2020 18:06:06 *DEBUG* ValidationXmlParser: No META-INF/validation.xml found. Using annotation based configuration only. (ValidationXmlParser.java, line 137)
02.03.2020 18:06:06 *INFO * Application: Started Application in 2.841 seconds (JVM running for 3.361) (StartupInfoLogger.java, line 61)
02.03.2020 18:06:20 *DEBUG* TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false (TransactionImpl.java, line 53)
02.03.2020 18:06:20 *DEBUG* TransactionImpl: begin (TransactionImpl.java, line 81)
02.03.2020 18:06:20 *DEBUG* CriteriaQueryImpl: Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0 (CriteriaQueryImpl.java, line 299)
02.03.2020 18:06:20 *DEBUG* QueryTranslatorFactoryInitiator: QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@74172817 (QueryTranslatorFactoryInitiator.java, line 45)
02.03.2020 18:06:20 *DEBUG* QueryTranslatorImpl: parse() - HQL: select generatedAlias0 from net.voicemail.mail.entity.User as generatedAlias0 where generatedAlias0.userName=:param0 (QueryTranslatorImpl.java, line 288)
02.03.2020 18:06:20 *DEBUG* ErrorTracker: throwQueryException() : no errors (ErrorTracker.java, line 97)
02.03.2020 18:06:20 *DEBUG* QueryTranslatorImpl: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'net'
    |  |     |  |  |  |  \-[IDENT] Node: 'voicemail'
    |  |     |  |  |  \-[IDENT] Node: 'mail'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'
 (QueryTranslatorImpl.java, line 309)
02.03.2020 18:06:20 *DEBUG* HqlSqlBaseWalker: select << begin [level=1, statement=select] (HqlSqlBaseWalker.java, line 124)
02.03.2020 18:06:20 *DEBUG* FromElement: FromClause{level=1} : net.voicemail.mail.entity.User (generatedAlias0) -> user0_ (FromElement.java, line 149)
02.03.2020 18:06:20 *DEBUG* FromReferenceNode: Resolved : generatedAlias0 -> user0_.user_id (FromReferenceNode.java, line 60)
02.03.2020 18:06:20 *DEBUG* FromReferenceNode: Resolved : generatedAlias0 -> user0_.user_id (FromReferenceNode.java, line 60)
02.03.2020 18:06:20 *DEBUG* DotNode: getDataType() : userName -> org.hibernate.type.StringType@478967eb (DotNode.java, line 698)
02.03.2020 18:06:20 *DEBUG* FromReferenceNode: Resolved : generatedAlias0.userName -> user0_.user_name (FromReferenceNode.java, line 60)
02.03.2020 18:06:20 *DEBUG* HqlSqlBaseWalker: select : finishing up [level=1, statement=select] (HqlSqlBaseWalker.java, line 128)
02.03.2020 18:06:20 *DEBUG* HqlSqlWalker: processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} voicemail.user user0_ ) ( where ( = ( user0_.user_name user0_.user_id userName ) ? ) ) ) (HqlSqlWalker.java, line 752)
02.03.2020 18:06:20 *DEBUG* JoinProcessor: Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [voicemail.user]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(net.voicemail.mail.entity.User)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(net.voicemail.mail.entity.User)
          | referencedTables: [voicemail.user]
          | path: generatedAlias0.userName
          | originalPropertyName: userName
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(net.voicemail.mail.entity.User)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: userName
          \-ParameterNode
 (JoinProcessor.java, line 126)
02.03.2020 18:06:20 *DEBUG* JoinProcessor: Using FROM fragment [voicemail.user user0_] (JoinProcessor.java, line 280)
02.03.2020 18:06:20 *DEBUG* HqlSqlBaseWalker: select >> end [level=1, statement=select] (HqlSqlBaseWalker.java, line 132)
02.03.2020 18:06:20 *DEBUG* QueryTranslatorImpl: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (voicemail.user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=net.voicemail.mail.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.user_email as user_ema2_1_, user0_.user_name as user_nam3_1_, user0_.user_password as user_pas4_1_, user0_.user_phone_number as user_pho5_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'voicemail.user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=voicemail.user,tableAlias=user0_,origin=null,columns={,className=net.voicemail.mail.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_name' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=generatedAlias0.userName,tableAlias=user0_,className=net.voicemail.mail.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=net.voicemail.mail.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@478967eb}
 (QueryTranslatorImpl.java, line 275)
02.03.2020 18:06:20 *DEBUG* ErrorTracker: throwQueryException() : no errors (ErrorTracker.java, line 97)
02.03.2020 18:06:20 *DEBUG* QueryTranslatorImpl: HQL: select generatedAlias0 from net.voicemail.mail.entity.User as generatedAlias0 where generatedAlias0.userName=:param0 (QueryTranslatorImpl.java, line 254)
02.03.2020 18:06:20 *DEBUG* QueryTranslatorImpl: SQL: select user0_.user_id as user_id1_1_, user0_.user_email as user_ema2_1_, user0_.user_name as user_nam3_1_, user0_.user_password as user_pas4_1_, user0_.user_phone_number as user_pho5_1_ from voicemail.user user0_ where user0_.user_name=? (QueryTranslatorImpl.java, line 255)
02.03.2020 18:06:20 *DEBUG* ErrorTracker: throwQueryException() : no errors (ErrorTracker.java, line 97)
02.03.2020 18:06:20 *DEBUG* SQL: select user0_.user_id as user_id1_1_, user0_.user_email as user_ema2_1_, user0_.user_name as user_nam3_1_, user0_.user_password as user_pas4_1_, user0_.user_phone_number as user_pho5_1_ from voicemail.user user0_ where user0_.user_name=? (SqlStatementLogger.java, line 127)
02.03.2020 18:06:20 *DEBUG* TransactionImpl: rolling back (TransactionImpl.java, line 139)
